 
 
 
TM Forum Specification 
 
 
Service Qualification Management 
API User Guide 
 
 
 
 
 
TMF645 
Team Approved Date: 28-May-2020 
 
 
Release Status: Production 
Approval Status: TM Forum Approved 
Version 4.0.1 
IPR Mode: RAND 


NOTICE 
Copyright Â© TM Forum 2020. All Rights Reserved. 
 
This document and translations of it may be copied and furnished to others, and derivative works that comment on 
or otherwise explain it or assist in its implementation may be prepared, copied, published, and distributed, in 
whole or in part, without restriction of any kind, provided that the above copyright notice and this section are 
included on all such copies and derivative works. However, this document itself may not be modified in any way, 
including by removing the copyright notice or references to TM FORUM, except as needed for the purpose of 
developing any document or deliverable produced by a TM FORUM Collaboration Project Team (in which case the 
rules applicable to copyrights, as set forth in the TM FORUM IPR Policy, must be followed) or as required to 
translate it into languages other than English. 
 
The limited permissions granted above are perpetual and will not be revoked by TM FORUM or its successors or 
assigns. 
 
This document and the information contained herein is provided on an "AS IS" basis and TM FORUM DISCLAIMS 
ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE 
INFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP RIGHTS OR ANY IMPLIED WARRANTIES OF 
MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. 
 
TM FORUM invites any TM FORUM Member or any other party that believes it has patent claims that would 
necessarily be infringed by implementations of this TM Forum Standards Final Deliverable, to notify the TM FORUM 
Team Administrator and provide an indication of its willingness to grant patent licenses to such patent claims in a 
manner consistent with the IPR Mode of the TM FORUM Collaboration Project Team that produced this deliverable. 
 
The TM FORUM invites any party to contact the TM FORUM Team Administrator if it is aware of a claim of 
ownership of any patent claims that would necessarily be infringed by implementations of this TM FORUM 
Standards Final Deliverable by a patent holder that is not willing to provide a license to such patent claims in a 
manner consistent with the IPR Mode of the TM FORUM Collaboration Project Team that produced this TM FORUM 
Standards Final Deliverable. TM FORUM may include such claims on its website but disclaims any obligation to do 
so. 
 
TM FORUM takes no position regarding the validity or scope of any intellectual property or other rights that might 
be claimed to pertain to the implementation or use of the technology described in this TM FORUM Standards Final 
Deliverable or the extent to which any license under such rights might or might not be available; neither does it 
represent that it has made any effort to identify any such rights. Information on TM FORUM's procedures with 
respect to rights in any document or deliverable produced by a TM FORUM Collaboration Project Team can be 
found on the TM FORUM website. Copies of claims of rights made available for publication and any assurances of 
licenses to be made available, or the result of an attempt made to obtain a general license or permission for the 
use of such proprietary rights by implementers or users of this TM FORUM Standards Final Deliverable, can be 
obtained from the TM FORUM Team Administrator. TM FORUM makes no representation that any information or 
list of intellectual property rights will at any time be complete, or that any claims in such list are, in fact, Essential 
Claims. 
 
 


Direct inquiries to the TM Forum office: 
 
4 Century Drive, Suite 100 
Parsippany, NJ 07054, USA 
Tel No. +1 973 944 5100 
Fax No. +1 973 998 7196 
TM Forum Web Page: www.tmforum.org 
 


Table of Contents 
NOTICE ............................................................................................................................................................................ 2 
Table of Contents ............................................................................................................................................................ 4 
List of Tables ................................................................................................................................................................... 6 
Introduction .................................................................................................................................................................... 7 
Lifecycle ...................................................................................................................................................................... 8 
SAMPLE USE CASES ......................................................................................................................................................... 9 
Support of polymorphism and extension patterns ...................................................................................................... 10 
RESOURCE MODEL ........................................................................................................................................................ 11 
Managed Entity and Task Resource Models ..................................................................................................... 11 
Check Service Qualification resource .................................................................................................................... 11 
Query Service Qualification resource .................................................................................................................... 23 
SECOND resource .................................................................................................................................................. 33 
Notification Resource Models .............................................................................................................................. 33 
Check Service Qualification Create Event ............................................................................................................. 34 
Check Service Qualification Attribute Value Change Event .................................................................................. 34 
Check Service Qualification State Change Event ................................................................................................... 35 
Check Service Qualification Delete Event.............................................................................................................. 35 
Check Service Qualification Information Required Event ..................................................................................... 36 
Query Service Qualification Create Event ............................................................................................................. 36 
Query Service Qualification State Change Event................................................................................................... 36 
Query Service Qualification Delete Event ............................................................................................................. 37 
API OPERATIONS ........................................................................................................................................................... 38 
Operations on Check Service Qualification............................................................................................................... 38 
List check service qualifications............................................................................................................................. 38 
Retrieve check service qualification ...................................................................................................................... 39 
Create check service qualification ......................................................................................................................... 42 
Patch check service qualification .......................................................................................................................... 45 
Delete check service qualification ......................................................................................................................... 48 
Operations on Query Service Qualification .............................................................................................................. 49 
List query service qualifications ............................................................................................................................ 49 
Retrieve query service qualification ...................................................................................................................... 50 
Create query service qualification ......................................................................................................................... 52 


Patch query service qualification .......................................................................................................................... 55 
Delete query service qualification ......................................................................................................................... 58 
API NOTIFICATIONS....................................................................................................................................................... 59 
Register listener ........................................................................................................................................................ 59 
Unregister listener .................................................................................................................................................... 60 
Publish Event to listener ........................................................................................................................................... 60 
Acknowledgements ...................................................................................................................................................... 62 
Version History.......................................................................................................................................................... 62 
Release History ......................................................................................................................................................... 63 
Contributors to Document ........................................................................................................................................ 63 


List of Tables 
 
N/A 
 


Introduction 
 
The following document is the specification of the REST API for ServiceQualification management. It includes the 
model definition as well as all available operations.  
In the Open Digital Economy where multiple actors (SDPs, CSPs, â¦) may be involved with the delivery of an end-to-
end service, those actors need to collaborate and interact with the customer as needed. 
Following diagram shows ServiceQualification API within pre-ordering API package: 
 
Service Qualification API is one of Pre-Ordering Management API Family. Service Qualification API goal is to provide 
service technical eligibility in the context of the interaction. This API allows to: 
â¢ 
Request a specific service (of an array of service) eligibility providing as an input configured service. The 
resource checkServiceQualification is used for this purpose. The requester will provide an array of service 
qualification item and expect to have a qualification result for each one of them. In the response, the API 
will provide qualification result but also: 
â¢ 
Eligibility unavailability reason (if any) 
â¢ 
Alternate service proposal (if any). 
â¢ 
Look for retrieving service available depending on criteria providing in the request â The main UC is to 
provide a service category and a place for example and get in the response all available service. In the 
request the requested provided searchCiteria(s) â in response requester get this search criteria plus an 
array of serviceQualificationItem for each service available. Note that if no service are available, no error 
will be triggered and no serviceQualificationItem will be in the answer (only searchCriteria are in the 
response) 
Because the API allows describing service from the inventory, it is also possible to use it to retrieve service 
available to complete existing service for both resources. 
This API did not trigger any modification on the service in the inventory â in particular the service state is not 
changed (no shift to eligibilityCheck) 


In the request, for both resources, the following attributes could be filled: 
â¢ 
service, serviceSpecification, category or service characteristics will be indicated (at least one is 
mandatory), 
â¢ 
relatedParty, for which the qualification must be done, 
â¢ 
place, where the customer wants his service, 
â¢ 
expected qualification date. 
Lifecycle 
The state machine specifying the typical state change transitions is provided below. This is standard task based 
resource lifecycle: 
 


SAMPLE USE CASES 
To provide some use-cases: 
For checkServiceQualification: 
â¢ 
Check if we can deliver a 4k TV service at a specified address 
â¢ 
Check if we can deliver new IP TV service at the same location of an existing and active Access service  (i.e. 
without explicitly specifying address but using service relationship) 
â¢ 
Check if we can upgrade the download speed of an existing and active service from 100 Mb/s to 600Mb/s 
 
For queryServiceQualification: 
â¢ 
Retrieve a list of service specification â from a service category - available at a given place 
â¢ 
Retrieve a list of service specification connecteable to an existing service 


Support of polymorphism and extension patterns 
 
Support of polymorphic collections and types and schema based extension is provided by means of a list of generic 
meta-attributes that we describe below. Polymorphism in collections occurs when entities inherit from base 
entities, for instance a ServiceEligibility and TechnicalEligibility inheriting properties from the abstract 
CheckServiceQualification entity. 
Generic support of polymorphism and pattern extensions is described in the TMF API Guidelines v3.0 Part 2 
document. 
The @type attribute provides a way to represent the actual class type of an entity. For example, within a list of 
CheckServiceQualification instances some may be instances of ServiceEligibility where other could be instances of 
TechnicalEligibility. The @type gives this information. All resources and sub-resources of this API have a @type 
attributes that can be provided when this is useful. 
The @referredType can be used within reference entities (like for instance a CheckServiceQualificationRef object) 
to explicitly denote the actual entity type of the referred class. Notice that in reference entities the @type, when 
used, denotes the class type of the reference itself, such as ServiceEligibilityRef or TechnicalEligibilityRef, and not 
the class type of the referred object. However, since reference classes are rarely sub-classed, @type is generally 
not useful in reference objects. 
The @schemaLocation property can be used in resources to allow specifying user-defined properties of an Entity or 
to specify the expected characteristics of an entity. 
The @baseType attribute gives a way to provide explicitly the base of class of a given resource that has been 
extended. 
 
 


RESOURCE MODEL 
Managed Entity and Task Resource Models 
Check Service Qualification resource 
CheckServiceQualification is used to perform a technical eligibility on service configuration(s). It allows to retrieve 
services that are technically available in the context of the interaction (place, party, service characteristics, ...). 
Resource model 
 
Field descriptions 
CheckServiceQualification fields 
description 
A string. Description of the serviceQualification. 
effectiveQualificationDate 
A date time (DateTime). Effective date to serviceQualification completion. 
estimatedResponseDate 
A date time (DateTime). Date when the requester expect to provide an answer for 
the qualification request. 
expectedQualificationDate 
A date time (DateTime). A date (DateTime). Deadline date when the requester 
expected a qualification answer. 
expirationDate 
A date time (DateTime). Date when the qualification response expires. 


externalId 
A string. Identifier provided by the requester. 
href 
A string. Hyperlink to access the serviceQualification. 
id 
A string. Unique identifier of the serviceQualification resource. 
instantSyncQualification 
A boolean. An indicator which when the value is "true" means that requester 
expects to get qualifcation result immediately in the response. If the indicator is 
true then the response code of 200 indicates the operation is successful otherwise 
a task is created with a response 201. 
checkServiceQualificationDate A date time (DateTime). Date when the serviceQualification was submitted. 
provideAlternative 
A boolean. When the value is TRUE means that alternative solutions should be 
provided. 
provideUnavailabilityReason 
A boolean. When the value is TRUE means that unavailability reason are expected 
for non available service. 
qualificationResult 
A string. Qualification result for this serviceQualification. It could be:  qualified (all 
qualification item are qualified), alternate (At least one item alternate and no item 
with  unqualified), unqualified (At least one item unqualified). 
serviceQualificationItem 
A list of check service qualification items (CheckServiceQualificationItem [*]). A list 
of service qualification items. 
relatedParty 
A list of related parties (RelatedParty [*]). A list of related party references, defines 
party or party role linked to this request. 
state 
A task state type (TaskStateType). State of the serviceQualification (acknowledged, 
inProgress, terminatedWithError, done). 
AlternateServiceProposal sub-resource 
Alternate service proposal is used when the requested service is not available with characteristic and date asked 
for. An alternate proposal could be a distinct serviceSpecification close to requested one or same as requested but 
with a different activation date. 
alternateService 
A service ref or value (ServiceRefOrValue). A Service to be created defined by 
value or existing defined by reference. The polymorphic attributes @type, 
@schemaLocation & @referredType are related to the Service entity and not the 
RelatedServiceRefOrValue class itself. 
alternateServiceAvailabilityDate A date time (DateTime). Alternate availability date in case seller is not able to 
meet requested expected availability date for the service. 
id 
A string. Identifier of a alternate service proposal. 
Characteristic sub-resource 


Describes a given characteristic of an object or entity through a name/value pair. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
characteristicRelationship A list of characteristic relationships (CharacteristicRelationship [*]). Another 
Characteristic that is related to the current Characteristic;. 
id 
A string. Unique identifier of the characteristic. 
name 
A string. Name of the characteristic. 
value 
An any (Any). The value of the characteristic. 
valueType 
A string. Data type of the value of the characteristic. 
CharacteristicRelationship sub-resource 
Another Characteristic that is related to the current Characteristic;. 
id 
A string. Unique identifier of the characteristic. 
relationshipType 
A string. The type of relationship. 
CheckServiceQualificationItem sub-resource 
A ServiceQualificationItem relates to a specific service being checked in a qualification operation. 
expectedActivationDate 
A date time (DateTime). The date when the service is expected to be activated. 
expectedServiceAvailabilityDate A date time (DateTime). Date when the requester looks for service availability. 
expirationDate 
A date time (DateTime). Date when the qualification item response expires. 
id 
A string. Id of the Service Qualification Item. 
alternateServiceProposal 
A list of alternate service proposals (AlternateServiceProposal [*]). Alternate 
service proposal is used when the requested service is not available with 
characteristic and date asked for. An alternate proposal could be a distinct 
service Spec close to requested one or same as requested but with a different 
availability date. 
eligibilityUnavailabilityReason 
A list of service eligibility unavailability reasons 
(ServiceEligibilityUnavailabilityReason [*]). A list of eligibility unavailability 
reasons (EligibilityUnavailabilityReason [*]). Reason for eligibility result if the 
serviceQualification result is no (meaning the service is not available). 


qualificationItemRelationship 
A list of service qualification item relationships 
(ServiceQualificationItemRelationship [*]). A list of qualification item 
relationships used to describe relationship between serviceQualification item 
from the same serviceQualification. 
qualificationRelationship 
A list of service qualification relationships (ServiceQualificationRelationship [*]). 
Structure used to describe relationship between serviceQualification item from 
the same serviceQualification. 
qualificationResult 
A string. Qualification result for serviceQualification item. It could be: - qualified 
(request service are available), - unqualified (requested not available and not 
alternate available), - alternate (requested not available but proposal available). 
state 
A string. State of the serviceQualification item (acknowledged, inProgress, 
terminatedWithError, done). 
terminationError 
A list of termination errors (TerminationError [*]). If qualificationItem has not 
been done properly this lists the error(s) that caused termination of the 
qualification. 
category 
A service category reference (ServiceCategoryRef). The category resource is used 
to group product offerings, service and resource candidates in logical containers. 
Categories can contain other categories and/or product offerings, resource or 
service candidates. 
service 
A service ref or value (ServiceRefOrValue). Configure the service characteristics 
(only configurable characteristics and necessary only if a non default value is 
selected) and/or identify the service that needs to be modified/deleted. 
Feature sub-resource 
Configuration feature. 
constraint 
A list of constraint references (ConstraintRef [*]). This is a list of feature constraints. 
featureCharacteristic 
A list of characteristics (Characteristic [1..*]). This is a list of Characteristics for a 
particular feature. 
featureRelationship 
A list of feature relationships (FeatureRelationship [*]). Configuration feature. 
id 
A string. Unique identifier of the feature. 
isBundle 
A boolean. True if this is a feature group. Default is false. 
isEnabled 
A boolean. True if this feature is enabled. Default is true. 
name 
A string. This is the name for the feature. 
FeatureRelationship sub-resource 


Configuration feature. 
id 
A string. Unique identifier of the target feature. 
name 
A string. This is the name of the target feature. 
relationshipType 
A string. This is the type of the feature relationship. 
validFor 
A time period. The period for which this feature relationship is valid. 
Note sub-resource 
Extra information about a given entity. 
author 
A string. Author of the note. 
date 
A date time (DateTime). Date of the note. 
id 
A string. Identifier of the note within its containing entity (may or may not be globally 
unique, depending on provider implementation). 
text 
A string. Text of the note. 
RelatedEntityRefOrValue sub-resource 
A reference to an entity, where the type of the entity is not known in advance. A related entity defines a entity 
described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation 
& @referredType are related to the Entity and not the RelatedEntityRefOrValue class itself. 
@referredType 
A string. The actual type of the target instance when needed for disambiguation. 
name 
A string. Name of the related entity. 
href 
A string. Reference of the related entity. 
id 
A string. Unique identifier of a related entity. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
role 
A string. 
RelatedParty sub-resource 
Related Entity reference. A related party defines party or party role linked to a specific entity. 
@referredType 
A string. The actual type of the target instance when needed for disambiguation. 


name 
A string. Name of the related entity. 
href 
An uri (Uri). Hyperlink reference. 
id 
A string. unique identifier. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
role 
A string. Role played by the related party. 
RelatedPlaceRefOrValue sub-resource 
Related Entity reference. A related place defines a place described by reference or by value linked to a specific 
entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to the place entity and 
not the RelatedPlaceRefOrValue class itself. 
@referredType 
A string. The actual type of the target instance when needed for disambiguation. 
name 
A string. A user-friendly name for the place, such as [Paris Store], [London Store], 
[Main Home]. 
href 
A string. Unique reference of the place. 
id 
A string. Unique identifier of the place. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
role 
A string. 
RelatedServiceOrderItem sub-resource 
RelatedServiceOrderItem (a ServiceOrder item) .The service order item which triggered service 
creation/change/termination. 
@referredType 
A string. The actual type of the target instance when needed for disambiguation. 
itemAction 
An order item action type (OrderItemActionType). Action of the order item for this 
service. 
itemId 
A string. Identifier of the order item where the service was managed. 


role 
A string. role of the service order item for this service. 
serviceOrderHref 
A string. Reference of the related entity. 
serviceOrderId 
A string. Unique identifier of a related entity. 
ServiceEligibilityUnavailabilityReason sub-resource 
Reason for eligibility result if the ServiceQualification result is no (meaning the Service is not available). 
code 
A string. Unavailability reason code. 
label 
A string. Unavailability reason label. 
ServiceQualificationItemRelationship sub-resource 
Structure used to describe relationship between serviceQualification items from the same serviceQualification. 
id 
A string. Id of the serviceQualificationItem (from the same serviceQualificationItem). 
relationshipType 
A string. Type of relationship (ex: reliesOn, connectedTo, etc...). 
ServiceQualificationRelationship sub-resource 
 
id 
A string. The id of the target qualification pointed to by this relationship. 
relationshipType 
A string. The type of relationship. 
ServiceRefOrValue sub-resource 
A Service to be created defined by value or existing defined by reference. The polymorphic attributes @type, 
@schemaLocation & @referredType are related to the Service entity and not the RelatedServiceRefOrValue class 
itself. 
@referredType 
A string. The actual type of the target instance when needed for disambiguation. 
name 
A string. Name of the service. 
href 
A string. Reference of the service. 
id 
A string. Unique identifier of the service. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
category 
A string. Is it a customer facing or resource facing service. 


description 
A string. Free-text description of the service. 
endDate 
A date time (DateTime). Date when the service ends. 
hasStarted 
A boolean. If TRUE, this Service has already been started. 
isBundle 
A boolean. If true, the service is a ServiceBundle which regroup a service hierachy. If 
false, the service is a 'atomic' service (hierachy leaf). 
isServiceEnabled 
A boolean. If FALSE and hasStarted is FALSE, this particular Service has NOT been 
enabled for use - if FALSE and hasStarted is TRUE then the service has failed. 
isStateful 
A boolean. If TRUE, this Service can be changed without affecting any other services. 
serviceDate 
A string. Date when the service was created (whatever its status). 
serviceType 
A string. Business type of the service. 
startDate 
A date time (DateTime). Date when the service starts. 
startMode 
A string. This attribute is an enumerated integer that indicates how the Service is 
started, such as: 0: Unknown; 1: Automatically by the managed environment; 2: 
Automatically by the owning device; 3: Manually by the Provider of the Service; 4: 
Manually by a Customer of the Provider; 5: Any of the above. 
feature 
A list of features (Feature [*]). A list of features associated with this service. 
note 
A list of notes (Note [*]). A list of notes made on this service. 
place 
A list of related place ref or values (RelatedPlaceRefOrValue [*]). A list of places (Place 
[*]). Used to define a place useful for the service (for example a geographical place 
whre the service is installed). 
relatedEntity 
A list of related entity ref or values (RelatedEntityRefOrValue [*]). A list of related  
entity in relationship with this service. 
relatedParty 
A list of related parties (RelatedParty [*]). A list of related party references 
(RelatedParty [*]). A related party defines party or party role linked to a specific 
entity. 
serviceCharacteristic 
A list of characteristics (Characteristic [*]). A list of characteristics that characterize 
this service (ServiceCharacteristic [*]). 
serviceOrderItem 
A list of related service order items (RelatedServiceOrderItem [*]). A list of service 
order items related to this service. 
serviceRelationship 
A list of service relationships (ServiceRelationship [*]). A list of service relationships 
(ServiceRelationship [*]). Describes links with other service(s) in the inventory. 
serviceSpecification 
A service specification reference (ServiceSpecificationRef). The specification from 


which this service was instantiated. 
state 
A service state type (ServiceStateType). The life cycle state of the service, such as 
designed, reserved, active, etc... 
supportingResource 
A list of resource references (ResourceRef [*]). A list of supporting resources 
(SupportingResource [*]).Note: only Service of type RFS can be associated with 
Resources. 
supportingService 
A list of service ref or values (ServiceRefOrValue [*]). A list of supporting services 
(SupportingService [*]). A collection of services that support this service (bundling, 
link CFS to RFS). 
ServiceRelationship sub-resource 
 
relationshipType 
A string. 
service 
A service ref or value (ServiceRefOrValue). A Service to be created defined by 
value or existing defined by reference. The polymorphic attributes @type, 
@schemaLocation & @referredType are related to the Service entity and not 
the RelatedServiceRefOrValue class itself. 
serviceRelationshipCharacteristic A list of characteristics (Characteristic [*]). Describes a given characteristic of an 
object or entity through a name/value pair. 
TerminationError sub-resource 
This indicates an error that caused a qualificationItem to be terminated. 
id 
A string. Unique identifier of the termination error. 
value 
A string. Text to describe the termination error - for example: Unable to proceed to 
qualification because incomplete information provided. 
ConstraintRef relationship 
Constraint reference. The Constraint resource represents a policy/rule applied to an entity or entity spec. 
@referredType 
A string. The (class) type of the referred constraint. 
href 
A string. Hyperlink reference to the target constraint. 
id 
A string. reference id to the target constraint. 
name 
A string. Name given to the constraint. 
version 
A string. constraint version. 
ResourceRef relationship 


 
@referredType 
A string. The actual type of the target instance when needed for disambiguation. 
name 
A string. Name of the related entity. 
href 
An uri (Uri). Hyperlink reference. 
id 
A string. unique identifier. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
ServiceCategoryRef relationship 
The (service) category resource is used to group service candidates in logical containers. Categories can contain 
other categories. 
@referredType 
A string. The actual type of the target instance when needed for disambiguation. 
name 
A string. Name of the related entity. 
href 
An uri (Uri). Hyperlink reference. 
id 
A string. unique identifier. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
version 
A string. Category version. 
ServiceSpecificationRef relationship 
Service specification reference: ServiceSpecification(s) required to realize a ProductSpecification. 
@referredType 
A string. The actual type of the target instance when needed for disambiguation. 
name 
A string. Name of the related entity. 
href 
An uri (Uri). Hyperlink reference. 
id 
A string. unique identifier. 
@baseType 
A string. When sub-classing, this defines the super-class. 


@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
version 
A string. Service specification version. 
Json representation sample 
We provide below the json representation of an example of a 'CheckServiceQualification' resource object 
{ 
    "id": "44", 
    "href": "http://serverlocation:port/serviceQualificationManagement/v4/checkServiceQualification/456", 
    "checkServiceQualificationDate": "2020-04-10T19:20:39.239Z", 
    "description": "check service qualification illustration", 
    "effectiveQualificationDate": "2020-04-11T15:20:39.239Z", 
    "expectedQualificationDate": "2020-04-11T15:20:39.239Z", 
    "expirationDate": "2020-04-24T19:20:39.239Z", 
    "externalId": "CSQ1", 
    "provideAlternative": true, 
    "provideUnavailabilityReason": true, 
    "instantSyncQualification": false, 
    "qualificationResult": "alternate", 
    "relatedParty": [ 
        { 
            "id": "456", 
            "href": "http://serverlocation:port/partyManagement/v4/party/456", 
            "name": "Jean Pontus", 
            "role": "Buyer contact", 
            "@type": "RelatedParty", 
            "@referredType": "Individual" 
        } 
    ], 
    "serviceQualificationItem": [ 
        { 
            "id": "1", 
            "expectedActivationDate": "2020-04-16T19:20:39.239Z", 
            "expectedServiceAvailabilityDate": "2020-04-11T19:20:39.239Z", 
            "expirationDate": "2020-04-24T19:20:39.239Z", 
            "qualificationResult": "alternate", 
            "state": "done", 
            "alternateServiceProposal": [ 
                { 
                    "id": "1", 
                    "alternateServiceAvailabilityDate": "2020-04-15T19:20:39.239Z", 
                    "alternateService": { 
                        "serviceCharacteristic": [ 
                            { 
                                "id": "1", 
                                "name": "BroadcastQuality", 
                                "valueType": "string", 
                                "value": "HD", 
                                "@type": "ServiceCharacteristic" 
                            } 


                        ], 
                        "serviceSpecification": { 
                            "id": "23", 
                            "href": "string", 
                            "name": "TVAccess", 
                            "@type": "ServiceSpecification" 
                        }, 
                        "@type": "Service" 
                    }, 
                    "@type": "AlternateServiceProposal" 
                } 
            ], 
            "eligibilityUnavailabilityReason": [ 
                { 
                    "code": "26-001", 
                    "label": "not enough bandwith at this place", 
                    "@baseType": "string", 
                    "@schemaLocation": "string", 
                    "@type": "string" 
                } 
            ], 
            "service": { 
                "place": [ 
                    { 
                        "id": "11", 
                        "href": "http://serverlocation:port/geographicSiteManagement/v4/geographicSite/11", 
                        "name": "Jean Pontus home", 
                        "role": "Installation place", 
                        "@referredType": "GeographicSite" 
                    } 
                ], 
                "serviceCharacteristic": [ 
                    { 
                        "id": "1", 
                        "name": "BroadcastQuality", 
                        "valueType": "string", 
                        "value": "4K" 
                    } 
                ], 
                "serviceSpecification": { 
                    "id": "23", 
                    "href": "string", 
                    "name": "TVAccess", 
                    "@type": "ServiceSpecification" 
                }, 
                "@type": "Service" 
            }, 
            "@type": "ServiceQualificationItem" 
        } 
    ], 
    "state": "done", 
    "@type": "CheckServiceQualification" 
} 
 
 


Query Service Qualification resource 
QueryServiceQualification is used to retrieve a list of services that are technically available in the context of the 
interaction (place, party, service characteristics, ...). 
Resource model 
 
Field descriptions 
QueryServiceQualification fields 
description 
A string. Description of the serviceQualification. 
effectiveQualificationDate 
A date time (DateTime). Effective date to serviceQualification completion. 
estimatedResponseDate 
A date time (DateTime). Date when the requester expect to provide an answer for 
the qualification request. 
expectedQualificationDate 
A date time (DateTime). A date (DateTime). Deadline date when the requester 
expected a qualification answer. 
expirationDate 
A date time (DateTime). Date when the qualification response expires. 
externalId 
A string. Identifier provided by the requester. 


href 
A string. Hyperlink to access the serviceQualification. 
id 
A string. Unique identifier of the serviceQualification resource. 
instantSyncQualification 
A boolean. An indicator which when the value is "true" means that requester 
expects to get qualifcation result immediately in the response. If the indicator is 
true then the response code of 200 indicates the operation is successful otherwise 
a task is created with a response 201. 
queryServiceQualificationDate A date time (DateTime). Date when the serviceQualification was submitted. 
searchCriteria 
A service qualification item (ServiceQualificationItem). Search structure to retrieve 
eligible service specification. 
serviceQualificationItem 
A list of service qualification items (ServiceQualificationItem [*]). 
relatedParty 
A list of related parties (RelatedParty [*]). A list of related party references, 
defines party or party role linked to this request. 
state 
A task state type (TaskStateType). State of the serviceQualification (acknowledged, 
inProgress, terminatedWithError, done). 
Characteristic sub-resource 
Describes a given characteristic of an object or entity through a name/value pair. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
characteristicRelationship A list of characteristic relationships (CharacteristicRelationship [*]). Another 
Characteristic that is related to the current Characteristic;. 
id 
A string. Unique identifier of the characteristic. 
name 
A string. Name of the characteristic. 
value 
An any (Any). The value of the characteristic. 
valueType 
A string. Data type of the value of the characteristic. 
CharacteristicRelationship sub-resource 
Another Characteristic that is related to the current Characteristic;. 
id 
A string. Unique identifier of the characteristic. 
relationshipType 
A string. The type of relationship. 


Feature sub-resource 
Configuration feature. 
constraint 
A list of constraint references (ConstraintRef [*]). This is a list of feature constraints. 
featureCharacteristic 
A list of characteristics (Characteristic [1..*]). This is a list of Characteristics for a 
particular feature. 
featureRelationship 
A list of feature relationships (FeatureRelationship [*]). Configuration feature. 
id 
A string. Unique identifier of the feature. 
isBundle 
A boolean. True if this is a feature group. Default is false. 
isEnabled 
A boolean. True if this feature is enabled. Default is true. 
name 
A string. This is the name for the feature. 
FeatureRelationship sub-resource 
Configuration feature. 
id 
A string. Unique identifier of the target feature. 
name 
A string. This is the name of the target feature. 
relationshipType 
A string. This is the type of the feature relationship. 
validFor 
A time period. The period for which this feature relationship is valid. 
Note sub-resource 
Extra information about a given entity. 
author 
A string. Author of the note. 
date 
A date time (DateTime). Date of the note. 
id 
A string. Identifier of the note within its containing entity (may or may not be globally 
unique, depending on provider implementation). 
text 
A string. Text of the note. 
RelatedEntityRefOrValue sub-resource 
A reference to an entity, where the type of the entity is not known in advance. A related entity defines a entity 
described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation 
& @referredType are related to the Entity and not the RelatedEntityRefOrValue class itself. 
@referredType 
A string. The actual type of the target instance when needed for disambiguation. 


name 
A string. Name of the related entity. 
href 
A string. Reference of the related entity. 
id 
A string. Unique identifier of a related entity. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
role 
A string. 
RelatedParty sub-resource 
Related Entity reference. A related party defines party or party role linked to a specific entity. 
@referredType 
A string. The actual type of the target instance when needed for disambiguation. 
name 
A string. Name of the related entity. 
href 
An uri (Uri). Hyperlink reference. 
id 
A string. unique identifier. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
role 
A string. Role played by the related party. 
RelatedPlaceRefOrValue sub-resource 
Related Entity reference. A related place defines a place described by reference or by value linked to a specific 
entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to the place entity and 
not the RelatedPlaceRefOrValue class itself. 
@referredType 
A string. The actual type of the target instance when needed for disambiguation. 
name 
A string. A user-friendly name for the place, such as [Paris Store], [London Store], 
[Main Home]. 
href 
A string. Unique reference of the place. 
id 
A string. Unique identifier of the place. 


@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
role 
A string. 
RelatedServiceOrderItem sub-resource 
RelatedServiceOrderItem (a ServiceOrder item) .The service order item which triggered service 
creation/change/termination. 
@referredType 
A string. The actual type of the target instance when needed for disambiguation. 
itemAction 
An order item action type (OrderItemActionType). Action of the order item for this 
service. 
itemId 
A string. Identifier of the order item where the service was managed. 
role 
A string. role of the service order item for this service. 
serviceOrderHref 
A string. Reference of the related entity. 
serviceOrderId 
A string. Unique identifier of a related entity. 
ServiceQualificationItem sub-resource 
A ServiceQualificationItem relates to a specific service being checked in a qualification operation. 
category 
A service category reference (ServiceCategoryRef). The category resource is used 
to group product offerings, service and resource candidates in logical containers. 
Categories can contain other categories and/or product offerings, resource or 
service candidates. 
expectedActivationDate 
A date time (DateTime). The date when the service is expected to be activated. 
expectedServiceAvailabilityDate A date time (DateTime). Date when the requester looks for service availability. 
expirationDate 
A date time (DateTime). Date when the qualification item response expires. 
id 
A string. Id of the Service Qualification Item. 
service 
A service ref or value (ServiceRefOrValue). Configure the service characteristics 
(only configurable characteristics and necessary only if a non default value is 
selected) and/or identify the service that needs to be modified/deleted. 
ServiceRefOrValue sub-resource 


A Service to be created defined by value or existing defined by reference. The polymorphic attributes @type, 
@schemaLocation & @referredType are related to the Service entity and not the RelatedServiceRefOrValue class 
itself. 
@referredType 
A string. The actual type of the target instance when needed for disambiguation. 
name 
A string. Name of the service. 
href 
A string. Reference of the service. 
id 
A string. Unique identifier of the service. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
category 
A string. Is it a customer facing or resource facing service. 
description 
A string. Free-text description of the service. 
endDate 
A date time (DateTime). Date when the service ends. 
hasStarted 
A boolean. If TRUE, this Service has already been started. 
isBundle 
A boolean. If true, the service is a ServiceBundle which regroup a service hierachy. If 
false, the service is a 'atomic' service (hierachy leaf). 
isServiceEnabled 
A boolean. If FALSE and hasStarted is FALSE, this particular Service has NOT been 
enabled for use - if FALSE and hasStarted is TRUE then the service has failed. 
isStateful 
A boolean. If TRUE, this Service can be changed without affecting any other services. 
serviceDate 
A string. Date when the service was created (whatever its status). 
serviceType 
A string. Business type of the service. 
startDate 
A date time (DateTime). Date when the service starts. 
startMode 
A string. This attribute is an enumerated integer that indicates how the Service is 
started, such as: 0: Unknown; 1: Automatically by the managed environment; 2: 
Automatically by the owning device; 3: Manually by the Provider of the Service; 4: 
Manually by a Customer of the Provider; 5: Any of the above. 
feature 
A list of features (Feature [*]). A list of feature associated with this service. 
note 
A list of notes (Note [*]). A list of notes made on this service. 
place 
A list of related place ref or values (RelatedPlaceRefOrValue [*]). A list of places (Place 


[*]). Used to define a place useful for the service (for example a geographical place 
whre the service is installed). 
relatedEntity 
A list of related entity ref or values (RelatedEntityRefOrValue [*]). A list of related  
entity in relationship with this service. 
relatedParty 
A list of related parties (RelatedParty [*]). A list of related party references 
(RelatedParty [*]). A related party defines party or party role linked to a specific 
entity. 
serviceCharacteristic 
A list of characteristics (Characteristic [*]). A list of characteristics that characterize 
this service (ServiceCharacteristic [*]). 
serviceOrderItem 
A list of related service order items (RelatedServiceOrderItem [*]). A list of service 
order items related to this service. 
serviceRelationship 
A list of service relationships (ServiceRelationship [*]). A list of service relationships 
(ServiceRelationship [*]). Describes links with other service(s) in the inventory. 
serviceSpecification 
A service specification reference (ServiceSpecificationRef). The specification from 
which this service was instantiated. 
state 
A service state type (ServiceStateType). The life cycle state of the service, such as 
designed, reserved, active, etc... 
supportingResource 
A list of resource references (ResourceRef [*]). A list of supporting resources 
(SupportingResource [*]).Note: only Service of type RFS can be associated with 
Resources. 
supportingService 
A list of service ref or values (ServiceRefOrValue [*]). A list of supporting services 
(SupportingService [*]). A collection of services that support this service (bundling, 
link CFS to RFS). 
ServiceRelationship sub-resource 
 
relationshipType 
A string. 
service 
A service ref or value (ServiceRefOrValue). A Service to be created defined by 
value or existing defined by reference. The polymorphic attributes @type, 
@schemaLocation & @referredType are related to the Service entity and not 
the RelatedServiceRefOrValue class itself. 
serviceRelationshipCharacteristic A list of characteristics (Characteristic [*]). Describes a given characteristic of an 
object or entity through a name/value pair. 
ConstraintRef relationship 
Constraint reference. The Constraint resource represents a policy/rule applied to an entity or entity spec. 


@referredType 
A string. The (class) type of the referred constraint. 
href 
A string. Hyperlink reference to the target constraint. 
id 
A string. reference id to the target constraint. 
name 
A string. Name given to the constraint. 
version 
A string. constraint version. 
ResourceRef relationship 
 
@referredType 
A string. The actual type of the target instance when needed for disambiguation. 
name 
A string. Name of the related entity. 
href 
An uri (Uri). Hyperlink reference. 
id 
A string. unique identifier. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
ServiceCategoryRef relationship 
The (service) category resource is used to group service candidates in logical containers. Categories can contain 
other categories. 
@referredType 
A string. The actual type of the target instance when needed for disambiguation. 
name 
A string. Name of the related entity. 
href 
An uri (Uri). Hyperlink reference. 
id 
A string. unique identifier. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
version 
A string. Category version. 
 
 


ServiceSpecificationRef relationship 
Service specification reference: ServiceSpecification(s) required to realize a ProductSpecification. 
@referredType 
A string. The actual type of the target instance when needed for disambiguation. 
name 
A string. Name of the related entity. 
href 
An uri (Uri). Hyperlink reference. 
id 
A string. unique identifier. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
version 
A string. Service specification version. 
Json representation sample 
We provide below the json representation of an example of a 'QueryServiceQualification' resource object 
{ 
    "id": "54", 
    "href": "http://serverlocation:port/serviceQualificationManagement/v4/queryServiceQualification/54", 
    "description": "Query Service Qualification Illustration - 2 serviceSpec available at this place for this category", 
    "effectiveQualificationDate": "2020-04-13T13:51:41.218Z", 
    "estimatedResponseDate": "2020-04-13T14:00:00.218Z", 
    "expectedQualificationDate": "2020-04-13T13:51:41.218Z", 
    "expirationDate": "2020-04-15T13:51:41.218Z", 
    "externalId": "QSQ-456", 
    "instantSyncQualification": true, 
    "queryServiceQualificationDate": "2020-04-13T13:51:41.218Z", 
    "relatedParty": [ 
        { 
            "id": "456", 
            "href": "http://serverlocation:port/partyManagement/v4/party/456", 
            "name": "Jean Pontus", 
            "role": "Buyer contact", 
            "@type": "RelatedParty", 
            "@referredType": "Individual" 
        } 
    ], 
    "searchCriteria": { 
        "id": "1", 
        "category": { 
            "id": "1", 
            "href": "http://serverlocation:port/serviceCatalogManagement/v4/category/1", 
            "name": "Fiber Access", 
            "@type": "Category" 
        }, 


        "service": { 
            "place": [ 
                { 
                    "role": "Installation Place", 
                    "@type": "GeographicAddress", 
                    "city": "San Francisco", 
                    "postcode": "94121", 
                    "streetName": "25th", 
                    "streetType": "Avenue", 
                    "streetNr": "437", 
                    "geographicAddress": [ 
                        { 
                            "levelType": "floor", 
                            "levelNumber": "3" 
                        } 
                    ] 
                } 
            ] 
        }, 
        "@type": "SearchCriteria" 
    }, 
    "serviceQualificationItem": [ 
        { 
            "id": "1", 
            "service": { 
                "serviceSpecification": { 
                    "id": "78", 
                    "href": "http://serverlocation:port/serviceCatalogManagement/v4/serviceSpecification/78", 
                    "name": "X-Fiber Service", 
                    "@type": "ServiceSpecification" 
                }, 
                "@type": "Service" 
            }, 
            "@type": "ServiceQualificationItem" 
        }, 
        { 
            "id": "2", 
            "service": { 
                "serviceSpecification": { 
                    "id": "87", 
                    "href": "http://serverlocation:port/serviceCatalogManagement/v4/serviceSpecification/87", 
                    "name": "Standard Fiber Service", 
                    "@type": "ServiceSpecification" 
                }, 
                "@type": "Service" 
            }, 
            "@type": "ServiceQualificationItem" 
        } 
    ], 
    "state": "done", 
    "@type": "QueryServiceQualification" 
} 
 


A CheckServiceQualification is used to check a configured service eligibility (or a list of configured services). Each 
service qualification requests an item (one item per service). A qualification result is provided in response for each 
iotem. Requested could ask for unavailability reason and/or for alternate proposal (in case the service requested is 
not available).  
SECOND resource 
A Query Service Qualification is used to retrieve a list of service eligible in a given request provided by requester 
(via searchCriteria structure). Each available service is described using the service qualification item. If not service 
available â no item is retrieved. 
 
Notification Resource Models 
 
8 notifications are defined for this API 
Notifications related to CheckServiceQualification: 
    - CheckServiceQualificationCreateEvent 
    - CheckServiceQualificationAttributeValueChangeEvent 
    - CheckServiceQualificationStateChangeEvent 
    - CheckServiceQualificationDeleteEvent 
    - CheckServiceQualificationInformationRequiredEvent 
Notifications related to QueryServiceQualification: 
    - QueryServiceQualificationCreateEvent 
    - QueryServiceQualificationStateChangeEvent 
    - QueryServiceQualificationDeleteEvent 
The notification structure for all notifications in this API follow the pattern depicted by the figure below. 
A notification event resource (depicted by "SpecificEvent" placeholder) is a sub class of a generic Event structure 
containing at least an id of the event occurrence (eventId), an event timestamp (eventTime), and the name of the 
resource (eventType).  
This notification structure owns an event payload structure ("SpecificEventPayload" placeholder) linked to the 
resource concerned by the notification using the resource name as access field ("resourceName" placeholder). 


 
Check Service Qualification Create Event 
Notification CheckServiceQualificationCreateEvent case for resource CheckServiceQualification 
Json representation sample 
We provide below the json representation of an example of a 'CheckServiceQualificationCreateEvent' notification 
event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"CheckServiceQualificationCreateEvent", 
     "event": { 
        "checkServiceQualification" :  
            {-- SEE CheckServiceQualification RESOURCE SAMPLE --} 
    } 
} 
 
Check Service Qualification Attribute Value Change Event 
Notification CheckServiceQualificationAttributeValueChangeEvent case for resource CheckServiceQualification 
Json representation sample 


We provide below the json representation of an example of a 
'CheckServiceQualificationAttributeValueChangeEvent' notification event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"CheckServiceQualificationAttributeValueChangeEvent", 
     "event": { 
        "checkServiceQualification" :  
            {-- SEE CheckServiceQualification RESOURCE SAMPLE --} 
    } 
} 
 
Check Service Qualification State Change Event 
Notification CheckServiceQualificationStateChangeEvent case for resource CheckServiceQualification 
Json representation sample 
We provide below the json representation of an example of a 'CheckServiceQualificationStateChangeEvent' 
notification event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"CheckServiceQualificationStateChangeEvent", 
     "event": { 
        "checkServiceQualification" :  
            {-- SEE CheckServiceQualification RESOURCE SAMPLE --} 
    } 
} 
 
Check Service Qualification Delete Event 
Notification CheckServiceQualificationDeleteEvent case for resource CheckServiceQualification 
Json representation sample 
We provide below the json representation of an example of a 'CheckServiceQualificationDeleteEvent' notification 
event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"CheckServiceQualificationDeleteEvent", 
     "event": { 
        "checkServiceQualification" :  
            {-- SEE CheckServiceQualification RESOURCE SAMPLE --} 
    } 
} 
 


Check Service Qualification Information Required Event 
Notification CheckServiceQualificationInformationRequiredEvent case for resource CheckServiceQualification 
Json representation sample 
We provide below the json representation of an example of a 'CheckServiceQualificationInformationRequiredEvent' 
notification event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"CheckServiceQualificationInformationRequiredEvent", 
     "event": { 
        "checkServiceQualification" :  
            {-- SEE CheckServiceQualification RESOURCE SAMPLE --} 
    } 
} 
 
Query Service Qualification Create Event 
Notification QueryServiceQualificationCreateEvent case for resource QueryServiceQualification 
Json representation sample 
We provide below the json representation of an example of a 'QueryServiceQualificationCreateEvent' notification 
event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"QueryServiceQualificationCreateEvent", 
     "event": { 
        "queryServiceQualification" :  
            {-- SEE QueryServiceQualification RESOURCE SAMPLE --} 
    } 
} 
 
Query Service Qualification State Change Event 
Notification QueryServiceQualificationStateChangeEvent case for resource QueryServiceQualification 
Json representation sample 
We provide below the json representation of an example of a 'QueryServiceQualificationStateChangeEvent' 
notification event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"QueryServiceQualificationStateChangeEvent", 


     "event": { 
        "queryServiceQualification" :  
            {-- SEE QueryServiceQualification RESOURCE SAMPLE --} 
    } 
} 
 
Query Service Qualification Delete Event 
Notification QueryServiceQualificationDeleteEvent case for resource QueryServiceQualification 
Json representation sample 
We provide below the json representation of an example of a 'QueryServiceQualificationDeleteEvent' notification 
event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"QueryServiceQualificationDeleteEvent", 
     "event": { 
        "queryServiceQualification" :  
            {-- SEE QueryServiceQualification RESOURCE SAMPLE --} 
    } 
} 
 
 
 
 
 


 API OPERATIONS 
Remember the following Uniform Contract: 
Operation on Entities 
Uniform API Operation 
Description 
Query Entities 
GET Resource 
GET must be used to retrieve 
a representation of a 
resource. 
 
Create Entity 
POST Resource 
POST must be used to create 
a new resource 
Partial Update of an Entity 
PATCH Resource 
PATCH must be used to 
partially update a resource 
Remove an Entity 
DELETE Resource 
DELETE must be used to 
remove a resource 
 
Filtering and attribute selection rules are described in the TMF REST Design Guidelines Part 1 document. 
Notifications are also described in a subsequent section. 
 
Operations on Check Service Qualification 
List check service qualifications 
  GET /checkServiceQualification?fields=...&{filtering} 
Description 
This operation list check service qualification entities. 
Attribute selection is enabled for all first level attributes. 
Filtering may be available depending on the compliance level supported by an implementation. 
 
Usage Samples 
Here's an example of a request for retrieving all the CheckServiceQualification that were completed. 


 
Request 
 
GET /tmf-
api/serviceQualificationManagement/v4/checkServiceQualification?fields=id,description,expectedQualificationDate,qualific
ationResult&state=done 
Accept: application/json 
 
 
 
Response 
 
200 
 
[ 
    { 
        "id": "48", 
        "description": "check service qualification for IP", 
        "expectedQualificationDate": "2020-04-11T14:23:33.239Z", 
        "qualificationResult": "qualified" 
    }, 
    { 
        "id": "44", 
        "description": "check service qualification illustration", 
        "expectedQualificationDate": "2020-04-11T15:20:39.239Z", 
        "qualificationResult": "alternate" 
    }, 
    { 
        "id": "41", 
        "description": "check service qualification for an UNI access", 
        "expectedQualificationDate": "2020-04-11T17:10:39.239Z", 
        "qualificationResult": "qualified" 
    } 
] 
 
Retrieve check service qualification 
  GET /checkServiceQualification/{id}?fields=...&{filtering} 
Description 
This operation retrieves a check service qualification entity. 
Attribute selection is enabled for all first level attributes. 
Filtering on sub-resources may be available depending on the compliance level supported by an implementation. 
 
 
 


Usage Samples 
Here's a sample of a request for retrieving a CheckServiceQualification resource based on its id 
 
Request 
 
GET /tmf-api/serviceQualificationManagement/v4/checkServiceQualification/44 
Accept: application/json 
 
 
 
Response 
 
200 
 
{ 
    "id": "44", 
    "href": "ttp://serverlocation:port/serviceQualificationManagement/v4/checkServiceQualification/456", 
    "checkServiceQualificationDate": "2020-04-10T19:20:39.239Z", 
    "description": "check service qualification illustration", 
    "effectiveQualificationDate": "2020-04-11T15:20:39.239Z", 
    "expectedQualificationDate": "2020-04-11T15:20:39.239Z", 
    "expirationDate": "2020-04-24T19:20:39.239Z", 
    "externalId": "CSQ1", 
    "provideAlternative": true, 
    "provideUnavailabilityReason": true, 
    "instantSyncQualification": false, 
    "qualificationResult": "alternate", 
    "relatedParty": [ 
        { 
            "id": "456", 
            "href": "http://serverlocation:port/partyManagement/v4/party/456", 
            "name": "Jean Pontus", 
            "role": "Buyer contact", 
            "@type": "RelatedParty", 
            "@referredType": "Individual" 
        } 
    ], 
    "serviceQualificationItem": [ 
        { 
            "id": "1", 
            "expectedActivationDate": "2020-04-16T19:20:39.239Z", 
            "expectedServiceAvailabilityDate": "2020-04-11T19:20:39.239Z", 
            "expirationDate": "2020-04-24T19:20:39.239Z", 
            "qualificationResult": "alternate", 
            "state": "done", 
            "alternateServiceProposal": [ 
                { 
                    "id": "1", 
                    "alternateServiceAvailabilityDate": "2020-04-15T19:20:39.239Z", 
                    "alternateService": { 
                        "serviceCharacteristic": [ 
                            { 


                                "id": "1", 
                                "name": "BroadcastQuality", 
                                "valueType": "string", 
                                "value": "HD", 
                                "@type": "ServiceCharacteristic" 
                            } 
                        ], 
                        "serviceSpecification": { 
                            "id": "23", 
                            "href": "http://serverlocation:port/ServiceCatalog/v4/serviceSpecification/23", 
                            "name": "TVAccess", 
                            "@type": "ServiceSpecification" 
                        }, 
                        "@type": "Service" 
                    }, 
                    "@type": "AlternateServiceProposal" 
                } 
            ], 
            "eligibilityUnavailabilityReason": [ 
                { 
                    "code": "26-001", 
                    "label": "not enough bandwith at this place" 
                } 
            ], 
            "service": { 
                "place": [ 
                    { 
                        "id": "11", 
                        "href": "http://serverlocation:port/geographicSiteManagement/v4/geographicSite/11", 
                        "name": "Jean Pontus home", 
                        "role": "Installation place", 
                        "@referredType": "GeographicSite" 
                    } 
                ], 
                "serviceCharacteristic": [ 
                    { 
                        "id": "1", 
                        "name": "BroadcastQuqlity", 
                        "valueType": "string", 
                        "value": "4K" 
                    } 
                ], 
                "serviceSpecification": { 
                    "id": "23", 
                    "href": "http://serverlocation:port/serviceCatalog/v4/serviceSpecification/23", 
                    "name": "TVAccess", 
                    "@type": "ServiceSpecification" 
                }, 
                "@type": "Service" 
            }, 
            "@type": "ServiceQualificationItem" 
        } 
    ], 
    "state": "done", 
    "@type": "CheckServiceQualification" 


} 
 
Create check service qualification 
  POST /checkServiceQualification 
Description 
This operation creates a check service qualification entity. 
Mandatory and Non Mandatory Attributes 
The following tables provide the list of mandatory and non mandatory attributes when creating a 
CheckServiceQualification, including any possible rule conditions and applicable default values. Notice that it is up 
to an implementer to add additional mandatory attributes. 
Mandatory Attributes 
Rule 
serviceQualificationItem 
 
 
Non Mandatory Attributes 
Rule 
description 
 
effectiveQualificationDate 
 
estimatedResponseDate 
 
expectedQualificationDate 
 
expirationDate 
 
externalId 
 
instantSyncQualification 
 
checkServiceQualificationDate 
 
provideAlternative 
 
provideUnavailabilityReason 
 
qualificationResult 
 
relatedParty 
 
state 
 
 
Usage Samples 
Here's a sample of a request for creating a CheckServiceQualification resource. We use the âfieldsâ parameter to 
restrict the numbers of attributes returned in the response. 
 
Request 
 
POST /tmf-api/serviceQualificationManagement/v4/checkServiceQualification 
Content-Type: application/json 
 
{ 
    "description": "check service qualification illustration", 
    "expectedQualificationDate": "2020-04-11T15:20:39.239Z", 


    "externalId": "CSQ1", 
    "provideAlternative": true, 
    "instantSyncQualification": false, 
    "provideUnavailabilityReason": true, 
    "relatedParty": [ 
        { 
            "id": "456", 
            "href": "http://serverlocation:port/partyManagement/v4/party/456", 
            "name": "Jean Pontus", 
            "role": "Buyer contact", 
            "@type": "RelatedParty", 
            "@referredType": "Individual" 
        } 
    ], 
    "serviceQualificationItem": [ 
        { 
            "id": "1", 
            "expectedServiceAvailabilityDate": "2020-04-11T19:20:39.239Z", 
            "service": { 
                "place": [ 
                    { 
                        "id": "11", 
                        "href": "http://serverlocation:port/geographicSiteManagement/v4/geographicSite/11", 
                        "name": "Jean Pontus home", 
                        "role": "Installation place", 
                        "@referredType": "GeographicSite" 
                    } 
                ], 
                "serviceCharacteristic": [ 
                    { 
                        "id": "1", 
                        "name": "BroadcastQuality", 
                        "valueType": "string", 
                        "value": "4K" 
                    } 
                ], 
                "serviceSpecification": { 
                    "id": "23", 
                    "href": "http://serverlocation:port/serviceCatalog/v4/serviceSpecification/23", 
                    "name": "TVAccess", 
                    "@type": "ServiceSpecification" 
                }, 
                "@type": "Service" 
            }, 
            "@type": "ServiceQualificationItem" 
        } 
    ], 
    "@type": "CheckServiceQualification" 
} 
 
 
 
Response 
 
201 


 
{ 
    "id": "44", 
    "href": "ttp://serverlocation:port/serviceQualificationManagement/v4/checkServiceQualification/456", 
    "checkServiceQualificationDate": "2020-04-10T19:20:39.239Z", 
    "description": "check service qualification illustration", 
    "expectedQualificationDate": "2020-04-11T15:20:39.239Z", 
    "externalId": "CSQ1", 
    "provideAlternative": true, 
    "provideUnavailabilityReason": true, 
    "instantSyncQualification": false, 
    "qualificationResult": "unqualified", 
    "relatedParty": [ 
        { 
            "id": "456", 
            "href": "http://serverlocation:port/partyManagement/v4/party/456", 
            "name": "Jean Pontus", 
            "role": "Buyer contact", 
            "@type": "RelatedParty", 
            "@referredType": "Individual" 
        } 
    ], 
    "serviceQualificationItem": [ 
        { 
            "id": "1", 
            "expectedServiceAvailabilityDate": "2020-04-11T19:20:39.239Z", 
            "qualificationResult": "unqualified", 
            "state": "accepted", 
            "service": { 
                "place": [ 
                    { 
                        "id": "11", 
                        "href": "http://serverlocation:port/geographicSiteManagement/v4/geographicSite/11", 
                        "name": "Jean Pontus home", 
                        "role": "Installation place", 
                        "@referredType": "GeographicSite" 
                    } 
                ], 
                "serviceCharacteristic": [ 
                    { 
                        "id": "1", 
                        "name": "BroadcastQuality", 
                        "valueType": "string", 
                        "value": "4K" 
                    } 
                ], 
                "serviceSpecification": { 
                    "id": "23", 
                    "href": "http://serverlocation:port/serviceCatalog/v4/serviceSpecification/23", 
                    "name": "TVAccess", 
                    "@type": "ServiceSpecification" 
                }, 
                "@type": "Service" 
            }, 
            "@type": "ServiceQualificationItem" 


        } 
    ], 
    "state": "accepted", 
    "@type": "CheckServiceQualification" 
} 
 
Patch check service qualification 
  PATCH /checkServiceQualification/{id} 
Description 
This operation allows partial updates of a check service qualification entity. Support of json/merge 
(https://tools.ietf.org/html/rfc7386) is mandatory, support of json/patch (http://tools.ietf.org/html/rfc5789) is 
optional. 
 
Note: If the update operation yields to the creation of sub-resources or relationships, the same rules concerning 
mandatory sub-resource attributes and default value settings in the POST operation applies to the PATCH 
operation.  Hence these tables are not repeated here. 
Patchable and Non Patchable Attributes 
The tables below provide the list of patchable and non patchable attributes, including constraint rules on their 
usage. 
Patchable Attributes 
Rule 
description 
 
effectiveQualificationDate 
 
estimatedResponseDate 
 
expectedQualificationDate 
 
expirationDate 
 
externalId 
 
instantSyncQualification 
 
provideAlternative 
 
provideUnavailabilityReason 
 
qualificationResult 
 
serviceQualificationItem 
 
relatedParty 
 
state 
 
 
Non Patchable Attributes 
Rule 
id 
 
href 
 
checkServiceQualificationDate 
 
 
Usage Samples 


Here's an example of a request for patching a CheckServiceQualification resource (created via previous POST) with 
change on following attributes: externalId and expectedQualificationDate value 
 
Request 
 
PATCH /tmf-api/serviceQualificationManagement/v4/checkServiceQualification/42 
Content-Type: application/merge-patch+json 
 
{ 
    "id": "44", 
    "checkServiceQualificationDate": "2020-04-10T19:20:39.239Z", 
    "description": "check service qualification illustration", 
    "expectedQualificationDate": "2020-04-15T15:20:39.239Z", 
    "externalId": "CSQ1-001", 
    "provideAlternative": true, 
    "provideUnavailabilityReason": true, 
    "instantSyncQualification": false, 
    "relatedParty": [ 
        { 
            "id": "456", 
            "href": "http://serverlocation:port/partyManagement/v4/party/456", 
            "name": "Jean Pontus", 
            "role": "Buyer contact", 
            "@type": "RelatedParty", 
            "@referredType": "Individual" 
        } 
    ], 
    "serviceQualificationItem": [ 
        { 
            "id": "1", 
            "expectedServiceAvailabilityDate": "2020-04-11T19:20:39.239Z", 
            "service": { 
                "place": [ 
                    { 
                        "id": "11", 
                        "href": "http://serverlocation:port/geographicSiteManagement/v4/geographicSite/11", 
                        "name": "Jean Pontus home", 
                        "role": "Installation place", 
                        "@referredType": "GeographicSite" 
                    } 
                ], 
                "serviceCharacteristic": [ 
                    { 
                        "id": "1", 
                        "name": "BroadcastQuality", 
                        "valueType": "string", 
                        "value": "4K" 
                    } 
                ], 
                "serviceSpecification": { 
                    "id": "23", 
                    "href": "string", 
                    "name": "TVAccess", 
                    "@type": "ServiceSpecification" 


                }, 
                "@type": "Service" 
            }, 
            "@type": "ServiceQualificationItem" 
        } 
    ], 
    "@type": "CheckServiceQualification" 
} 
 
 
 
Response 
 
200 
 
{ 
    "id": "44", 
    "href": "ttp://serverlocation:port/serviceQualificationManagement/v4/checkServiceQualification/456", 
    "checkServiceQualificationDate": "2020-04-10T19:20:39.239Z", 
    "description": "check service qualification illustration", 
    "expectedQualificationDate": "2020-04-15T15:20:39.239Z", 
    "externalId": "CSQ1-001", 
    "provideAlternative": true, 
    "provideUnavailabilityReason": true, 
    "instantSyncQualification": false, 
    "qualificationResult": "unqualified", 
    "relatedParty": [ 
        { 
            "id": "456", 
            "href": "http://serverlocation:port/partyManagement/v4/party/456", 
            "name": "Jean Pontus", 
            "role": "Buyer contact", 
            "@type": "RelatedParty", 
            "@referredType": "Individual" 
        } 
    ], 
    "serviceQualificationItem": [ 
        { 
            "id": "1", 
            "expectedServiceAvailabilityDate": "2020-04-11T19:20:39.239Z", 
            "qualificationResult": "unqualified", 
            "state": "acknowledged", 
            "service": { 
                "place": [ 
                    { 
                        "id": "11", 
                        "href": "http://serverlocation:port/geographicSiteManagement/v4/geographicSite/11", 
                        "name": "Jean Pontus home", 
                        "role": "Installation place", 
                        "@referredType": "GeographicSite" 
                    } 
                ], 
                "serviceCharacteristic": [ 
                    { 
                        "id": "1", 


                        "name": "BroadcastQuality", 
                        "valueType": "string", 
                        "value": "4K" 
                    } 
                ], 
                "serviceSpecification": { 
                    "id": "23", 
                    "href": "string", 
                    "name": "TVAccess", 
                    "@type": "ServiceSpecification" 
                }, 
                "@type": "Service" 
            }, 
            "@type": "ServiceQualificationItem" 
        } 
    ], 
    "state": "acknowledged", 
    "@type": "CheckServiceQualification" 
} 
 
Delete check service qualification 
  DELETE /checkServiceQualification/{id} 
Description 
This operation deletes a check service qualification entity. 
 
Usage Samples 
Here's an example of a request for deleting a CheckServiceQualification. 
 
Request 
 
DELETE /tmf-api/serviceQualificationManagement/v4/checkServiceQualification/44 
 
 
 
Response 
 
204 
 
 
 
 
 


Operations on Query Service Qualification 
List query service qualifications 
  GET /queryServiceQualification?fields=...&{filtering} 
Description 
This operation list query service qualification entities. 
Attribute selection is enabled for all first level attributes. 
Filtering may be available depending on the compliance level supported by an implementation. 
 
Usage Samples 
Here's an example of a request for retrieving a list of query service qualification request(s). The given criteria is the 
query service qualification state (done). 
 
Request 
 
GET /tmf-
api/serviceQualificationManagement/v4/queryServiceQualification?fields=id,externalId,effectiveQualificationDate,expirati
onDate&state=done 
Accept: application/json 
 
 
 
Response 
 
200 
 
[ 
    { 
        "id": "48", 
        "externalId": "check service qualification for IP", 
        "effectiveQualificationDate": "2020-04-11T14:23:33.239Z", 
        "expirationDate": "2020-04-14T14:23:33.239Z" 
    }, 
    { 
        "id": "44", 
        "externalId": "check service qualification illustration", 
        "effectiveQualificationDate": "2020-04-12T14:23:33.239Z", 
        "expirationDate": "2020-04-15T14:23:33.239Z" 
    } 
] 
 
 
 
 


Retrieve query service qualification 
  GET /queryServiceQualification/{id}?fields=...&{filtering} 
Description 
This operation retrieves a query service qualification entity. 
Attribute selection is enabled for all first level attributes. 
Filtering on sub-resources may be available depending on the compliance level supported by an implementation. 
 
Usage Samples 
Here's an example of a query service qualification request retrieval. The given criteria is the query service 
qualification request cancel id 79. 
 
Request 
 
GET /tmf-api/serviceQualificationManagement/v4/queryServiceQualification/54 
Accept: application/json 
 
 
 
Response 
 
200 
 
{ 
    "id": "54", 
    "href": "http://serverlocation:port/serviceQualificationManagement/v4/queryServiceQualification/54", 
    "description": "Query Service Qualification Illustration - 2 serviceSpec available at this place for this category", 
    "effectiveQualificationDate": "2020-04-13T13:51:41.218Z", 
    "estimatedResponseDate": "2020-04-13T14:00:00.218Z", 
    "expectedQualificationDate": "2020-04-13T13:51:41.218Z", 
    "expirationDate": "2020-04-15T13:51:41.218Z", 
    "externalId": "QSQ-456", 
    "instantSyncQualification": false, 
    "queryServiceQualificationDate": "2020-04-13T13:51:41.218Z", 
    "relatedParty": [ 
        { 
            "id": "456", 
            "href": "http://serverlocation:port/partyManagement/v4/party/456", 
            "name": "Jean Pontus", 
            "role": "Buyer contact", 
            "@type": "RelatedParty", 
            "@referredType": "Individual" 
        } 
    ], 
    "searchCriteria": { 
        "id": "1", 
        "category": { 


            "id": "1", 
            "href": "http://serverlocation:port/serviceCatalogManagement/v4/category/1", 
            "name": "Fiber Access", 
            "@type": "Category" 
        }, 
        "service": { 
            "place": [ 
                { 
                    "role": "Installation Place", 
                    "@type": "GeographicAddress", 
                    "city": "San Francisco", 
                    "postcode": "94121", 
                    "streetName": "25th", 
                    "streetType": "Avenue", 
                    "streetNr": "437", 
                    "geographicAddress": [ 
                        { 
                            "levelType": "floor", 
                            "levelNumber": "3" 
                        } 
                    ] 
                } 
            ] 
        }, 
        "@type": "SearchCriteria" 
    }, 
    "serviceQualificationItem": [ 
        { 
            "id": "1", 
            "service": { 
                "serviceSpecification": { 
                    "id": "78", 
                    "href": "http://serverlocation:port/serviceCatalogManagement/v4/serviceSpecification/78", 
                    "name": "X-Fiber Service", 
                    "@type": "ServiceSpecification" 
                }, 
                "@type": "Service" 
            }, 
            "@type": "ServiceQualificationItem" 
        }, 
        { 
            "id": "2", 
            "service": { 
                "serviceSpecification": { 
                    "id": "87", 
                    "href": "http://serverlocation:port/serviceCatalogManagement/v4/serviceSpecification/87", 
                    "name": "Standard Fiber Service", 
                    "@type": "ServiceSpecification" 
                }, 
                "@type": "Service" 
            }, 
            "@type": "ServiceQualificationItem" 
        } 
    ], 
    "state": "done", 


    "@type": "QueryServiceQualification" 
} 
 
Create query service qualification 
  POST /queryServiceQualification 
Description 
This operation creates a query service qualification entity. 
Mandatory and Non Mandatory Attributes 
The following tables provide the list of mandatory and non mandatory attributes when creating a 
QueryServiceQualification, including any possible rule conditions and applicable default values. Notice that it is up 
to an implementer to add additional mandatory attributes. 
Mandatory Attributes 
Rule 
searchCriteria 
 
 
Non Mandatory Attributes 
Rule 
description 
 
effectiveQualificationDate 
 
estimatedResponseDate 
 
expectedQualificationDate 
 
expirationDate 
 
externalId 
 
instantSyncQualification 
 
queryServiceQualificationDate 
 
serviceQualificationItem 
 
relatedParty 
 
state 
 
 
Usage Samples 
Here's an example of a request for a query service qualification - the resulting queryServiceQualification request is 
55. For illustration prupose the service qualification is not done synchronously (state is accepted) 
 
Request 
 
POST /tmf-api/serviceQualificationManagement/v4/queryServiceQualification 
Content-Type: application/json 
 
{ 
    "description": "Query Service Qualification POST Illustration", 
    "expectedQualificationDate": "2020-04-13T13:51:41.218Z", 
    "instantSyncQualification": false, 


    "externalId": "QSQ-456", 
    "relatedParty": [ 
        { 
            "id": "456", 
            "href": "http://serverlocation:port/partyManagement/v4/party/456", 
            "name": "Jean Pontus", 
            "role": "Buyer contact", 
            "@type": "RelatedParty", 
            "@referredType": "Individual" 
        } 
    ], 
    "searchCriteria": { 
        "id": "1", 
        "category": { 
            "id": "1", 
            "href": "http://serverlocation:port/serviceCatalogManagement/v4/category/1", 
            "name": "Fiber Access", 
            "@type": "Category" 
        }, 
        "service": { 
            "place": [ 
                { 
                    "role": "Installation Place", 
                    "@type": "GeographicAddress", 
                    "city": "San Francisco", 
                    "postcode": "94121", 
                    "streetName": "25th", 
                    "streetType": "Avenue", 
                    "streetNr": "437", 
                    "geographicAddress": [ 
                        { 
                            "levelType": "floor", 
                            "levelNumber": "3" 
                        } 
                    ] 
                } 
            ] 
        }, 
        "@type": "SearchCriteria" 
    }, 
    "@type": "QueryServiceQualification" 
} 
 
 
 
Response 
 
201 
 
{ 
    "id": "55", 
    "href": "http://serverlocation:port/serviceQualificationManagement/v4/queryServiceQualification/55", 
    "description": "Query Service Qualification POST Illustration", 
    "estimatedResponseDate": "2020-04-13T14:00:00.218Z", 
    "expectedQualificationDate": "2020-04-13T13:51:41.218Z", 


    "externalId": "QSQ-456", 
    "instantSyncQualification": false, 
    "queryServiceQualificationDate": "2020-04-13T13:51:41.218Z", 
    "relatedParty": [ 
        { 
            "id": "456", 
            "href": "http://serverlocation:port/partyManagement/v4/party/456", 
            "name": "Jean Pontus", 
            "role": "Buyer contact", 
            "@type": "RelatedParty", 
            "@referredType": "Individual" 
        } 
    ], 
    "searchCriteria": { 
        "id": "1", 
        "category": { 
            "id": "1", 
            "href": "http://serverlocation:port/serviceCatalogManagement/v4/category/1", 
            "name": "Fiber Access", 
            "@type": "Category" 
        }, 
        "service": { 
            "place": [ 
                { 
                    "role": "Installation Place", 
                    "@type": "GeographicAddress", 
                    "city": "San Francisco", 
                    "postcode": "94121", 
                    "streetName": "25th", 
                    "streetType": "Avenue", 
                    "streetNr": "437", 
                    "geographicAddress": [ 
                        { 
                            "levelType": "floor", 
                            "levelNumber": "3" 
                        } 
                    ] 
                } 
            ] 
        }, 
        "@type": "SearchCriteria" 
    }, 
    "state": "accepted", 
    "@type": "QueryServiceQualification" 
} 
 
 
 
 


Patch query service qualification 
  PATCH /queryServiceQualification/{id} 
Description 
This operation allows partial updates of a query service qualification entity. Support of json/merge 
(https://tools.ietf.org/html/rfc7386) is mandatory, support of json/patch (http://tools.ietf.org/html/rfc5789) is 
optional. 
 
Note: If the update operation yields to the creation of sub-resources or relationships, the same rules concerning 
mandatory sub-resource attributes and default value settings in the POST operation applies to the PATCH 
operation.  Hence these tables are not repeated here. 
Patchable and Non Patchable Attributes 
The tables below provide the list of patchable and non patchable attributes, including constraint rules on their 
usage. 
Patchable Attributes 
Rule 
description 
 
effectiveQualificationDate 
 
estimatedResponseDate 
 
expectedQualificationDate 
 
expirationDate 
 
externalId 
 
instantSyncQualification 
 
searchCriteria 
 
serviceQualificationItem 
 
relatedParty 
 
state 
 
 
Non Patchable Attributes 
Rule 
id 
 
href 
 
queryServiceQualificationDate 
 
 
Usage Samples 
Here's an example of a request for patching a QueryServiceQualification resource (created via previous POST) with 
change on the address (24th instead of 25th and 2nd floor instead of 3rd). 
 
Request 
 
PATCH /tmf-api/serviceQualificationManagement/v4/queryServiceQualification/42 
Content-Type: application/merge-patch+json 
 


{ 
    "id": "55", 
    "description": "Query Service Qualification POST Illustration", 
    "expectedQualificationDate": "2020-04-13T13:51:41.218Z", 
    "externalId": "QSQ-456", 
    "relatedParty": [ 
        { 
            "id": "456", 
            "href": "http://serverlocation:port/partyManagement/v4/party/456", 
            "name": "Jean Pontus", 
            "role": "Buyer contact", 
            "@type": "RelatedParty", 
            "@referredType": "Individual" 
        } 
    ], 
    "searchCriteria": { 
        "id": "1", 
        "category": { 
            "id": "1", 
            "href": "http://serverlocation:port/serviceCatalogManagement/v4/category/1", 
            "name": "Fiber Access", 
            "@type": "Category" 
        }, 
        "service": { 
            "place": [ 
                { 
                    "role": "Installation Place", 
                    "@type": "GeographicAddress", 
                    "city": "San Francisco", 
                    "postcode": "94121", 
                    "streetName": "24th", 
                    "streetType": "Avenue", 
                    "streetNr": "437", 
                    "geographicAddress": [ 
                        { 
                            "levelType": "floor", 
                            "levelNumber": "2" 
                        } 
                    ] 
                } 
            ] 
        }, 
        "@type": "SearchCriteria" 
    }, 
    "@type": "QueryServiceQualification" 
} 
 
 
 
Response 
 
200 
 
{ 
    "id": "55", 


    "href": "http://serverlocation:port/serviceQualificationManagement/v4/queryServiceQualification/55", 
    "description": "Query Service Qualification POST Illustration", 
    "estimatedResponseDate": "2020-04-13T14:00:00.218Z", 
    "expectedQualificationDate": "2020-04-13T13:51:41.218Z", 
    "externalId": "QSQ-456", 
    "instantSyncQualification": false, 
    "queryServiceQualificationDate": "2020-04-13T13:51:41.218Z", 
    "relatedParty": [ 
        { 
            "id": "456", 
            "href": "http://serverlocation:port/partyManagement/v4/party/456", 
            "name": "Jean Pontus", 
            "role": "Buyer contact", 
            "@type": "RelatedParty", 
            "@referredType": "Individual" 
        } 
    ], 
    "searchCriteria": { 
        "id": "1", 
        "category": { 
            "id": "1", 
            "href": "http://serverlocation:port/serviceCatalogManagement/v4/category/1", 
            "name": "Fiber Access", 
            "@type": "Category" 
        }, 
        "service": { 
            "place": [ 
                { 
                    "role": "Installation Place", 
                    "@type": "GeographicAddress", 
                    "city": "San Francisco", 
                    "postcode": "94121", 
                    "streetName": "24th", 
                    "streetType": "Avenue", 
                    "streetNr": "437", 
                    "geographicAddress": [ 
                        { 
                            "levelType": "floor", 
                            "levelNumber": "2" 
                        } 
                    ] 
                } 
            ] 
        }, 
        "@type": "SearchCriteria" 
    }, 
    "state": "accepted", 
    "@type": "QueryServiceQualification" 
} 
 
 
 
 


Delete query service qualification 
  DELETE /queryServiceQualification/{id} 
Description 
This operation deletes a query service qualification entity. 
 
Usage Samples 
Here's an example of a request for deleting a QueryServiceQualification. 
 
Request 
 
DELETE /tmf-api/serviceQualificationManagement/v4/queryServiceQualification/54 
 
 
 
Response 
 
204 
 
 
 


API NOTIFICATIONS 
For every single of operation on the entities use the following templates and provide sample REST 
notification POST calls. 
It is assumed that the Pub/Sub uses the Register and UnRegister mechanisms described in the REST 
Guidelines part 1. Refer to the guidelines for more details. 
Register listener 
  POST /hub 
Description 
Sets the communication endpoint address the service instance must use to deliver information about its health 
state, execution state, failures and metrics. Subsequent POST calls will be rejected by the service if it does not 
support multiple listeners. In this case DELETE /api/hub/{id} must be called before an endpoint can be created 
again. 
Behavior 
Returns HTTP/1.1 status code 204 if the request was successful. 
Returns HTTP/1.1 status code 409 if request is not successful. 
Usage Samples 
Here's an example of a request for registering a listener. 
 
 
Request 
 
POST /api/hub 
Accept: application/json 
 
{"callback": "http://in.listener.com"} 
 
 
Response 
 
201 
Content-Type: application/json 
Location: /api/hub/42 
 
{"id":"42","callback":"http://in.listener.com","query":null} 
 
 


Unregister listener 
  DELETE /hub/{id} 
Description 
Clears the communication endpoint address that was set by creating the Hub. 
Behavior 
Returns HTTP/1.1 status code 204 if the request was successful. 
Returns HTTP/1.1 status code 404 if the resource is not found. 
Usage Samples 
Here's an example of a request for un-registering a listener. 
 
Request 
 
DELETE /api/hub/42 
Accept: application/json 
 
 
Response 
 
204 
 
Publish Event to listener 
  POST /client/listener 
Description 
Clears the communication endpoint address that was set by creating the Hub. 
Provides to a registered listener the description of the event that was raised. The /client/listener url is the 
callback url passed when registering the listener. 
Behavior 
Returns HTTP/1.1 status code 201 if the service is able to set the configuration.  
Usage Samples 
Here's an example of a notification received by the listener. In this example âEVENT TYPEâ should be replaced by 
one of the notification types supported by this API (see Notification resources Models section) and EVENT BODY 
refers to the data structure of the given notification type. 


 
Request 
 
POST /client/listener 
Accept: application/json 
 
{ 
    "event": {  
                EVENT BODY  
            }, 
    "eventType": "EVENT_TYPE" 
} 
 
 
Response 
 
201 
 
For detailed examples on the general TM Forum notification mechanism, see the TMF REST Design 
Guidelines Part 1 document. 
 
 
 


Acknowledgements 
Version History 
Release Number 
Date  
Release led by: 
Description  
Release 1.0 
15/04/2016 
Pierre Gauthier 
TM Forum 
pgauthier@tmforum.org 
Takayuki Nakamura  
NTT 
nakamura.takayuki@nttcom.jp 
Ludovic Robert 
Orange 
Ludovic.robert@orange.com 
First release of the document 
Release 2.0 
02/10/2017 
Mariano Belaunde 
Orange 
mariano.belaunde@orange.com 
Ludovic Robert 
Orange 
 
Generated from API Data 
Model. 
+update to comply with API new 
pattern 
+ AP 910 feedbacks 
+ MEF change requests 
redistribution to TMF 
Release 18.0.0 
Version 3.0.1 
05-Jan-2018 
Ludovic Robert 
Orange 
Ludovic.robert@orange.com 
Sophie Bouleau 
Orange 
Sophie.bouleau@orange.com 
Alignment with 
ProductOfferingQualification API 
Release 18.5.0 
 
13-Jan-2019 
Jonathan Goldberg 
Amdocs 
Jonathan.Goldberg@amdocs.com 
Schema alignment for NaaS APIs 
Version 4.0.0 
28-May-2020 
Ludovic Robert 
Orange 
Ludovic.robert@orange.com 
Split in 2 resources 
(checkServiceQualification & 
queryServiceQualification) 
Align with 4.0 patterns 
Version 4.0.1 
20-Jul-2020 
Adrienne Walcott 
Updated to reflect TM Forum 
Approved Status 
 
 
 


 
Release History 
 
Release Number 
Date  
Release led by: 
Description  
Pre-production 
28-May-2020 
Ludovic Robert 
Orange 
Ludovic.robert@orange.com 
Split in 2 resources 
(checkServiceQualification & 
queryServiceQualification) 
Align with 4.0 patterns 
Production 
20-Jul-2020 
Adrienne Walcott 
Updated to reflect TM Forum 
Approved Status 
 
 
Contributors to Document 
 
Mariano Belaunde 
Orange 
Pierre Gauthier 
TM Forum 
 
Takayuki Nakamura 
NTT 
Ludovic Robert 
Orange 
Sophie Bouleau 
Orange 
Jonathan Goldberg 
Amdocs 
 


