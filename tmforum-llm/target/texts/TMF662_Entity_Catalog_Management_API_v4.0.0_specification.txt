 
 
 
TM Forum Specification 
 
 
Entity Catalog Management API 
User Guide 
 
 
 
 
 
TMF662 
Team Approved Date: 05-Apr-2021 
 
Release Status: Production 
Approval Status: TM Forum Approved 
Version 4.0.0 
IPR Mode: RAND 
 
 
 


NOTICE 
Copyright Â© TM Forum 2021. All Rights Reserved. 
 
This document and translations of it may be copied and furnished to others, and derivative works that 
comment on or otherwise explain it or assist in its implementation may be prepared, copied, published, 
and distributed, in whole or in part, without restriction of any kind, provided that the above copyright 
notice and this section are included on all such copies and derivative works. However, this document 
itself may not be modified in any way, including by removing the copyright notice or references to TM 
FORUM, except as needed for the purpose of developing any document or deliverable produced by a TM 
FORUM Collaboration Project Team (in which case the rules applicable to copyrights, as set forth in the 
TM FORUM IPR Policy, must be followed) or as required to translate it into languages other than English. 
 
The limited permissions granted above are perpetual and will not be revoked by TM FORUM or its 
successors or assigns. 
 
This document and the information contained herein is provided on an "AS IS" basis and TM FORUM 
DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY 
THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP RIGHTS OR ANY 
IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. 
 
TM FORUM invites any TM FORUM Member or any other party that believes it has patent claims that 
would necessarily be infringed by implementations of this TM Forum Standards Final Deliverable, to 
notify the TM FORUM Team Administrator and provide an indication of its willingness to grant patent 
licenses to such patent claims in a manner consistent with the IPR Mode of the TM FORUM Collaboration 
Project Team that produced this deliverable. 
 
The TM FORUM invites any party to contact the TM FORUM Team Administrator if it is aware of a claim 
of ownership of any patent claims that would necessarily be infringed by implementations of this TM 
FORUM Standards Final Deliverable by a patent holder that is not willing to provide a license to such 
patent claims in a manner consistent with the IPR Mode of the TM FORUM Collaboration Project Team 
that produced this TM FORUM Standards Final Deliverable. TM FORUM may include such claims on its 
website but disclaims any obligation to do so. 
 
TM FORUM takes no position regarding the validity or scope of any intellectual property or other rights 
that might be claimed to pertain to the implementation or use of the technology described in this TM 
FORUM Standards Final Deliverable or the extent to which any license under such rights might or might 
not be available; neither does it represent that it has made any effort to identify any such rights. 
Information on TM FORUM's procedures with respect to rights in any document or deliverable produced 
by a TM FORUM Collaboration Project Team can be found on the TM FORUM website. Copies of claims 
of rights made available for publication and any assurances of licenses to be made available, or the result 
of an attempt made to obtain a general license or permission for the use of such proprietary rights by 
implementers or users of this TM FORUM Standards Final Deliverable, can be obtained from the TM 
FORUM Team Administrator. TM FORUM makes no representation that any information or list of 
intellectual property rights will at any time be complete, or that any claims in such list are, in fact, 
Essential Claims. 


Direct inquiries to the TM Forum office: 
 
181 New Road, Suite 304 
Parsippany, NJ 07054 USA 
Tel No. +1 862 227 1648 
TM Forum Web Page: www.tmforum.org 
 
 
 
 
 
 
 
 
 
 


Table of Contents 
 
NOTICE ..............................................................................................................................................................2 
Table of Contents ..............................................................................................................................................4 
List of Tables......................................................................................................................................................8 
Introduction ......................................................................................................................................................9 
SAMPLE USE CASES ........................................................................................................................................ 10 
Entity Catalog Management Use Cases ................................................................................................... 10 
Support of polymorphism and extension patterns ........................................................................................ 11 
RESOURCE MODEL ......................................................................................................................................... 12 
Managed Entity and Task Resource Models .................................................................................... 12 
Entity Catalog resource ........................................................................................................................ 12 
Entity Category resource ...................................................................................................................... 16 
Entity Catalog Item resource ................................................................................................................ 20 
Entity Specification resource................................................................................................................ 23 
Association Specification resource ...................................................................................................... 35 
Association resource ............................................................................................................................ 39 
Import Job resource ............................................................................................................................. 44 
Export Job resource .............................................................................................................................. 46 
Notification Resource Models ............................................................................................................. 48 
Entity Catalog Create Event ................................................................................................................. 50 
Entity Catalog Attribute Value Change Event ...................................................................................... 50 
Entity Catalog State Change Event ....................................................................................................... 50 
Entity Catalog Delete Event.................................................................................................................. 51 
Entity Catalog Batch Event ................................................................................................................... 51 
Entity Category Create Event ............................................................................................................... 52 
Entity Category Attribute Value Change Event .................................................................................... 52 
Entity Category State Change Event .................................................................................................... 52 
Entity Category Delete Event ............................................................................................................... 53 
Entity Catalog Item Create Event ......................................................................................................... 53 
Entity Catalog Item Attribute Value Change Event
54


Entity Catalog Item State Change Event .............................................................................................. 54 
Entity Catalog Item Delete Event ......................................................................................................... 54 
Entity Specification Create Event ......................................................................................................... 55 
Entity Specification Attribute Value Change Event .............................................................................. 55 
Entity Specification State Change Event .............................................................................................. 56 
Entity Specification Delete Event ......................................................................................................... 56 
Association Specification Create Event ................................................................................................ 56 
Association Specification Attribute Value Change Event ..................................................................... 57 
Association Specification State Change Event ..................................................................................... 57 
Association Specification Delete Event ................................................................................................ 58 
Association Create Event ..................................................................................................................... 58 
Association Attribute Value Change Event .......................................................................................... 58 
Association State Change Event ........................................................................................................... 59 
Association Delete Event ...................................................................................................................... 59 
API OPERATIONS ............................................................................................................................................ 61 
Operations on Entity Catalog ................................................................................................................... 62 
List entity catalogs ................................................................................................................................ 62 
Retrieve entity catalog ......................................................................................................................... 65 
Create entity catalog ............................................................................................................................ 66 
Patch entity catalog .............................................................................................................................. 69 
Delete entity catalog ............................................................................................................................ 71 
Operations on Entity Category ................................................................................................................ 72 
List entity categories ............................................................................................................................ 72 
Retrieve entity category ....................................................................................................................... 74 
Create entity category .......................................................................................................................... 75 
Patch entity category ........................................................................................................................... 77 
Delete entity category .......................................................................................................................... 79 
Operations on Entity Catalog Item .......................................................................................................... 80 
List entity catalog items ....................................................................................................................... 80 
Retrieve entity catalog item ................................................................................................................. 82 


Create entity catalog item .................................................................................................................... 83 
Patch entity catalog item ..................................................................................................................... 86 
Delete entity catalog item .................................................................................................................... 88 
Operations on Entity Specification .......................................................................................................... 88 
List entity specifications ....................................................................................................................... 88 
Retrieve entity specification ................................................................................................................ 96 
Create entity specification ................................................................................................................. 101 
Patch entity specification ................................................................................................................... 109 
Delete entity specification ................................................................................................................. 116 
Operations on Association Specification ............................................................................................... 117 
List association specifications ............................................................................................................ 117 
Retrieve association specification ...................................................................................................... 119 
Create association specification ......................................................................................................... 121 
Patch association specification .......................................................................................................... 124 
Delete association specification ......................................................................................................... 126 
Operations on Association ..................................................................................................................... 127 
List associations .................................................................................................................................. 127 
Retrieve association ........................................................................................................................... 131 
Create association .............................................................................................................................. 133 
Patch association ................................................................................................................................ 136 
Delete association .............................................................................................................................. 139 
Operations on Import Job ...................................................................................................................... 140 
List import jobs ................................................................................................................................... 140 
Retrieve import job ............................................................................................................................ 141 
Create import job ............................................................................................................................... 142 
Delete import job ............................................................................................................................... 143 
Operations on Export Job ...................................................................................................................... 144 
List export jobs ................................................................................................................................... 144 
Retrieve export job............................................................................................................................. 145 
Create export job ............................................................................................................................... 146 


Delete export job ............................................................................................................................... 147 
API NOTIFICATIONS ...................................................................................................................................... 148 
Register listener ..................................................................................................................................... 148 
Unregister listener ................................................................................................................................. 149 
Publish Event to listener ........................................................................................................................ 149 
Role based Access Control ........................................................................................................................... 151 
ACKNOWLEDGEMENTS ................................................................................................................................ 152 
Version History ...................................................................................................................................... 152 
Release History ...................................................................................................................................... 152 
CONTRIBUTORS TO DOCUMENT ........................................................................................................... 153 


List of Tables 
N/A 
 


Introduction 
The catalog management API allows the management of the entire lifecycle of the catalog elements, the 
consultation of catalog elements during several processes such as ordering process, campaign 
management, sales management. 
Entity Catalog is primarily intended to address those specifications which may not be addressed by any of 
Product, Service or Resource catalogs.  


SAMPLE USE CASES 
Entity Catalog Management Use Cases 
The entity catalog management API allows the lookup of the catalog elements to support relevant 
business processes such as: 
UC1: A wholesale SP organization wants to define a catalog of Price Condition specifications, so that the 
marketing department can assign Price Conditions to new product offerings in a consistent manner. 
UC2: A fieldforce organization requires a catalog of Job Plan specifications, which they may use to define 
and allocate Job Plans to their internal and external subcontractors when they undertake infrastructure 
tasks. 
UC3: A Catalog designer in charge of specifying the TOSCA Node Templates and the TOSCA Relationship 
Templates that will be available to build topology templates for the services in the SP organization. He 
requires defining a catalog of TOSCA Node Templates and TOSCA Relationship Templates. 
More details about entity catalog management use cases can be found in the Information Framework 
catalog guidebook GB922 and the Catalog guidebook GB978. 
 


Support of polymorphism and extension patterns 
 
Support of polymorphic collections and types and schema based extension is provided by means of a list 
of generic meta-attributes that we describe below. Polymorphism in collections occurs when entities 
inherit from base entities, for instance JobPlan and TOSCANodeSpecification inheriting properties from 
the abstract EntitySpecification entity. 
Generic support of polymorphism and pattern extensions is described in the TMF API Design Guidelines 
v4.0  (TMF630) document. 
The @type attribute provides a way to represent the actual class type of an entity. For example, within a 
list of EntitySpecification instances some may be instances of TOSCANodeSpecification where other 
could be instances of JobPlan. The @type gives this information. All resources and sub-resources of this 
API have a @type attributes that can be provided when this is useful. 
The @referredType can be used within reference entities (like for instance an EntitySpecificationRef 
object) to explicitly denote the actual entity type of the referred class. Notice that in reference entities 
the @type, when used, denotes the class type of the reference itself, such as EntitySpecificationRef, and 
not the class type of the referred object. 
The @schemaLocation property can be used in resources to allow specifying user-defined properties of 
an Entity or to specify the expected characteristics of an entity. 
The @baseType attribute gives a way to provide explicitly the base of class of a given resource that has 
been extended. 
 
 


RESOURCE MODEL 
Managed Entity and Task Resource Models 
Entity Catalog resource 
The root entity for entity catalog management. An entity catalog can be defined as a collection of entity 
catalog items and arranging them in a particular manner based on the need. 
In comparison to Product, Service and Resource catalogs, the entity catalog is intended for the purpose 
of providing any TMF data model entity to consumers via a catalog, with its specification and policy 
providing governance over its content. Even Entity catalog may have an overlap with Product, Service or 
Resource catalog, it does not replace them. It is primarily intended to address those entities which may 
not be addressed by any of Product, Service or Resource catalog. 
An entity catalog comprises of a list of RootEntities made available through EntityCatalogItems. This API 
addresses only RootEntity extended items as EntitySpecification. An entity catalog typically includes 
name, description and time period that it is valid for. 
Resource model 


 
Field descriptions 
EntityCatalog fields 
href 
An uri (Uri). Hyperlink reference. 
id 
A string. unique identifier. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
category 
A list of entity category references (EntityCategoryRef [*]). The categories used 


in this catalog. 
description 
A string. Description of this catalog. 
lastUpdate 
A date time (DateTime). Date and time of the last update. 
lifecycleStatus 
A string. Used to indicate the current lifecycle status. 
name 
A string. Name of the catalog. 
relatedParty 
A list of related parties (RelatedParty [*]). The parties who are involved or have 
an interest in this catalog. 
validFor 
A time period. The period for which the catalog is valid. 
version 
A string. Catalog version. 
RelatedParty sub-resource 
Related Entity reference. A related party defines party or party role linked to a specific entity. 
@referredType 
A string. The actual type of the target instance when needed for 
disambiguation. 
name 
A string. Name of the related entity. 
href 
An uri (Uri). Hyperlink reference. 
id 
A string. unique identifier. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
role 
A string. Role played by the related party. 
EntityCategoryRef relationship 
Reference to Entity Category object. The (entity) category resource is used to group entity catalog items 
in logical containers. Categories can contain other categories. 
Resource IDs for categories are strings and are defined by the catalog application. 
@referredType 
A string. The actual type of the target instance when needed for 
disambiguation. 


name 
A string. Name of the related entity. 
href 
An uri (Uri). Hyperlink reference. 
id 
A string. unique identifier. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
version 
A string. Category version. 
Json representation sample 
Provided below is the json representation of an example of an 'EntityCatalog' resource object 
{ 
    "id": "6421", 
    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCatalog/6421", 
    "name": "Home Security Catalog", 
    "description": "This catalog describes home security entities that address both wholesale/retailer business 
segment.", 
    "version": "2.0", 
    "validFor": { 
        "startDateTime": "2020-11-24T00:00", 
        "endDateTime": "2023-12-05T00:00" 
    }, 
    "lastUpdate": "2020-11-24T00:00", 
    "lifecycleStatus": "Active", 
    "relatedParty": [ 
        { 
            "href": "https:/host:port/tmf-api/partyRoleManagement/v4/partyRole/6733", 
            "id": "6733", 
            "name": "Home Security Ltd", 
            "role": "vendor", 
            "@referredType": "Supplier", 
            "@type": "RelatedParty", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/EngagedParty/RelatedParty.schema.json", 
            "@baseType": "" 
        } 
    ], 
    "category": [ 
        { 
            "id": "6073", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCategory/6073", 
            "version": "1.0", 
            "name": "SmartHome Security", 


            "@type": "EntityCategoryRef", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntityCategoryRef.schema.json", 
            "@baseType": "" 
        }, 
        { 
            "id": "6079", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCategory/6079", 
            "version": "1.0", 
            "name": "Sensors", 
            "@referredType": "EntityCategory", 
            "@type": "EntityCategoryRef", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntityCategoryRef.schema.json", 
            "@baseType": "" 
        } 
    ], 
    "@type": "EntityCatalog", 
    "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityCatalog.schema.json", 
    "@baseType": "Catalog" 
} 
Entity Category resource 
The (entity) category resource is used to group entity catalog items in logical containers. Categories can 
contain other categories. 
Resource IDs for categories are strings and are defined by the catalog application. 
Resource model 


 
Field descriptions 
EntityCategory fields 
href 
An uri (Uri). Hyperlink reference. 
id 
A string. unique identifier. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 


childCategory 
A list of entity category references (EntityCategoryRef [*]). The child 
category(ies) if any, contained in this category. 
description 
A string. Description of the category. 
entityCatalogItem 
A list of entity catalog item references (EntityCatalogItemRef [*]). The catalog 
items referred to by this category. 
isRoot 
A boolean. If true, this Boolean indicates that the category is a root of 
categories. 
lastUpdate 
A date time (DateTime). Date and time of the last update. 
lifecycleStatus 
A string. Used to indicate the current lifecycle status. 
name 
A string. Name of the category. 
parentId 
A string. Unique identifier of the parent category. 
validFor 
A time period. The period for which the category is valid. 
version 
A string. Category version. 
EntityCatalogItemRef relationship 
reference to EntityCatalogItem object. 
@referredType 
A string. The actual type of the target instance when needed for 
disambiguation. 
name 
A string. Name of the related entity. 
href 
An uri (Uri). Hyperlink reference. 
id 
A string. unique identifier. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
version 
A string. EntityCatalogItem version. 
 
 
 


EntityCategoryRef relationship 
Reference to Entity Category object. The (entity) category resource is used to group entity catalog items 
in logical containers. Categories can contain other categories. 
Resource IDs for categories are strings and are defined by the catalog application. 
@referredType 
A string. The actual type of the target instance when needed for 
disambiguation. 
name 
A string. Name of the related entity. 
href 
An uri (Uri). Hyperlink reference. 
id 
A string. unique identifier. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
version 
A string. Category version. 
Json representation sample 
Provided below is the json representation of an example of an 'EntityCategory' resource object 
{ 
    "id": "2027", 
    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCategory/2027", 
    "name": "Tosca Node Types", 
    "description": "A category to hold all available Tosca Node Types", 
    "version": "1.0", 
    "validFor": { 
        "startDateTime": "2020-08-25T00:00", 
        "endDateTime": "2023-11-24T00:00" 
    }, 
    "lifecycleStatus": "Active", 
    "lastUpdate": "2020-08-25T00:00", 
    "isRoot": true, 
    "parentId": "", 
    "entityCatalogItem": [], 
    "childCategory": [], 
    "@type": "EntityCategory", 
    "@schemalLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityCategory.schema.json", 
    "@baseType": "Category" 
} 
 
 


Entity Catalog Item resource 
An EntityCatalogItem is an entity that allows any ProductOffering, ServiceCandidate, ResourceCandidate, 
or even any object inheriting from RootEntity, to be available to a catalog. The CatalogSpecification and 
Policy of the catalog governs the content of the EntityCatalogItem. This API addresses only 
EntitySpecification items extended from RootEntity as EntityCatalogItem. 
The EntityCatalogItem resource (JSON format) represents a set of characteristics that define the values 
given by the EntityCatalogItem. 
Resource model 


Field descriptions 
EntityCatalogItem fields 
href 
An uri (Uri). Hyperlink reference. 
id 
A string. unique identifier. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
category 
A list of entity category references (EntityCategoryRef [*]). Reference to Entity 
Category object. The (entity) category resource is used to group entity catalog 
items in logical containers. Categories can contain other categories. 
Resource IDs for categories are strings and are defined by the catalog 
application. 
description 
A string. Description of this REST resource. 
lastUpdate 
A date time (DateTime). Date and time of the last update of this REST resource. 
lifecycleStatus 
A string. Used to indicate the current lifecycle status of this catalog item. 
name 
A string. Name given to this REST resource. 
specification 
An entity specification reference (EntitySpecificationRef). The specification 
implied by this candidate. 
validFor 
A time period. The period for which this REST resource is valid. 
version 
A string. EntityCatalogItem version. 
EntityCategoryRef relationship 
Reference to Entity Category object. The (entity) category resource is used to group entity catalog items 
in logical containers. Categories can contain other categories. 
Resource IDs for categories are strings and are defined by the catalog application. 
@referredType 
A string. The actual type of the target instance when needed for 
disambiguation. 
name 
A string. Name of the related entity. 


href 
An uri (Uri). Hyperlink reference. 
id 
A string. unique identifier. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
version 
A string. Category version. 
EntitySpecificationRef relationship 
reference to an EntitySpecification object. 
@referredType 
A string. The actual type of the target instance when needed for 
disambiguation. 
name 
A string. Name of the related entity. 
href 
An uri (Uri). Hyperlink reference. 
id 
A string. unique identifier. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
version 
A string. EntitySpecification version. 
Json representation sample 
Provided below is the json representation of an example of an 'EntityCatalogItem' resource object 
{ 
    "id": "6007", 
    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCatalogItem/6007", 
    "name": "ProjectTemplate", 
    "description": "This object Offers provision of a project template", 
    "version": "1.0", 
    "validFor": { 
        "startDateTime": "2020-11-06T00:00", 
        "endDateTime": "2023-09-10T00:00" 
    }, 
"lastUpdate": "2020-11-06T00:00"


    "lifecycleStatus": "Active", 
    "category": [ 
        { 
            "id": "6043", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCategory/6043", 
            "version": "1.0", 
            "name": "Template", 
            "@referredType": "Template", 
            "@type": "EntityCategoryRef", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntityCategoryRef.schema.json", 
            "@baseType": "" 
        } 
    ], 
    "specification": { 
        "id": "6823", 
        "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/6823", 
        "version": "1.0", 
        "name": "Task-focused project Specification", 
        "@referredType": "EntitySpecificationRef", 
        "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntitySpecificationRef.schema.json", 
        "@baseType": "", 
        "@type": "EntitySpecificationRef" 
    }, 
    "@type": "EntityCatalogItem", 
    "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityCatalogItem.schema.json", 
    "@baseType": "" 
} 
Entity Specification resource 
EntitySpecification is a class that offers characteristics to describe a type of entity. Entities are generic 
constructs that may be used to describe bespoke business entities that are not effectively covered by the 
existing SID model. 
Functionally, the entity specification acts as a template by which entities may be instantiated and 
described. By sharing the same specification, these entities would therefore share the same set of 
characteristics. 
Note: The âconfigurableâ attribute on the specCharacteristics determines if an entity instantiated from 
the entity specification can override the value of the attribute. When set to false, the entity instance may 
not define a value that differs from the value in the specification. 
 
 


Resource model 
 
 
 


Field descriptions 
EntitySpecification fields 
href 
An uri (Uri). Hyperlink reference. 
id 
A string. unique identifier. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
attachment 
A list of attachment ref or values (AttachmentRefOrValue [*]). Attachments 
that may be of relevance to this specification, such as picture, document, 
media. 
constraint 
A list of constraint references (ConstraintRef [*]). This is a list of constraint 
references applied to this specification. 
description 
A string. Description of the specification. 
entitySpecRelationship A list of entity specification relationships (EntitySpecificationRelationship [*]). 
Relationship to another specification. 
isBundle 
A boolean. isBundle determines whether specification represents a single 
specification (false), or a bundle of specifications (true). 
lastUpdate 
A date time (DateTime). Date and time of the last update of the specification. 
lifecycleStatus 
A string. Used to indicate the current lifecycle status of this catalog item. 
name 
A string. Name given to the specification. 
relatedParty 
A list of related parties (RelatedParty [*]). Parties who manage or otherwise 
have an interest in this specification. 
specCharacteristic 
A list of characteristic specifications (CharacteristicSpecification [*]). List of 
characteristics that the entity can take. 
targetEntitySchema 
A target entity schema (TargetEntitySchema). Pointer to a schema that defines 
the target entity. 
validFor 
A time period. The period for which this REST resource is valid. 
version 
A string. specification version. 


AttachmentRefOrValue sub-resource 
An attachment by value or by reference. An attachment complements the description of an element, for 
example through a document, a video, a picture. 
@referredType 
A string. The actual type of the target instance when needed for 
disambiguation. 
description 
A string. A narrative text describing the content of the attachment. 
href 
An uri (Uri). URI for this Attachment. 
id 
A string. Unique identifier for this particular attachment. 
url 
An uri (Uri). Uniform Resource Locator, is a web page address (a subset of URI). 
name 
A string. The name of the attachment. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
attachmentType 
A string. Attachment type such as video, picture. 
content 
A base 6 4 (Base64). The actual contents of the attachment object, if embedded, 
encoded as base64. 
mimeType 
A string. Attachment mime type such as extension file for video, picture and 
document. 
size 
A quantity (Quantity). The size of the attachment. 
validFor 
A time period. The period of time for which the attachment is valid. 
CharacteristicSpecification sub-resource 
This class defines a characteristic specification. 
@valueSchemaLocation 
A string. This (optional) field provides a link to the schema describing 
the value type. 
configurable 
A boolean. If true, the Boolean indicates that the target Characteristic 
is configurable. 
description 
A string. A narrative that explains the CharacteristicSpecification. 


extensible 
A boolean. An indicator that specifies that the values for the 
characteristic can be extended by adding new values when 
instantiating a characteristic for a resource. 
id 
A string. Unique ID for the characteristic. 
isUnique 
A boolean. An indicator that specifies if a value is unique for the 
specification. Possible values are; "unique while value is in effect" and 
"unique whether value is in effect or not". 
maxCardinality 
An integer. The maximum number of instances a CharacteristicValue 
can take on. For example, zero to five phone numbers in a group 
calling plan, where five is the value for the maxCardinality. 
minCardinality 
An integer. The minimum number of instances a CharacteristicValue 
can take on. For example, zero to five phone numbers in a group 
calling plan, where zero is the value for the minCardinality. 
name 
A string. A word, term, or phrase by which this characteristic 
specification is known and distinguished from other characteristic 
specifications. 
regex 
A string. A rule or principle represented in regular expression used to 
derive the value of a characteristic value. 
valueType 
A string. A kind of value that the characteristic can take on, such as 
numeric, text and so forth. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional 
attributes and relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible 
name. 
charSpecRelationship 
A list of characteristic specification relationships 
(CharacteristicSpecificationRelationship [*]). An aggregation, 
migration, substitution, dependency or exclusivity relationship 
between/among Specification Characteristics. 
characteristicValueSpecification A list of characteristic value specifications 
(CharacteristicValueSpecification [*]). A 
CharacteristicValueSpecification object is used to define a set of 
attributes, each of which can be assigned to a corresponding set of 
tt ib t
i
Ch
t
i ti S
ifi
ti
bj
t Th
l
f th


attributes in the CharacteristicValueSpecification object describe the 
values of the attributes that a corresponding Characteristic object can 
take on. 
validFor 
A time period. The period of time for which a characteristic is 
applicable. 
CharacteristicSpecificationRelationship sub-resource 
An aggregation, migration, substitution, dependency or exclusivity relationship between/among 
Characteristic specifications. The specification characteristic is embedded within the specification whose 
ID and href are in this entity, and identified by its ID. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes 
and relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
characteristicSpecificationId A string. Unique identifier of the characteristic within the specification. 
name 
A string. Name of the target characteristic within the specification. 
parentSpecificationHref 
An uri (Uri). Hyperlink reference to the parent specification containing the 
target characteristic. 
parentSpecificationId 
A string. Unique identifier of the parent specification containing the target 
characteristic. 
relationshipType 
A string. Type of relationship such as aggregation, migration, substitution, 
dependency, exclusivity. 
validFor 
A time period. The period for which the object is valid. 
CharacteristicValueSpecification sub-resource 
specification of a value (number or text or an object) that can be assigned to a Characteristic. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
isDefault 
A boolean. If true, the Boolean Indicates if the value is the default value for a 


characteristic. 
rangeInterval 
A string. An indicator that specifies the inclusion or exclusion of the valueFrom 
and valueTo attributes. If applicable, possible values are "open", "closed", 
"closedBottom" and "closedTop". 
regex 
A string. A regular expression constraint for given value. 
unitOfMeasure 
A string. A length, surface, volume, dry measure, liquid measure, money, 
weight, time, and the like. In general, a determinate quantity or magnitude of 
the kind designated, taken as a standard of comparison for others of the same 
kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square 
foot. 
validFor 
A time period. The period of time for which a value is applicable. 
value 
An any (Any). A discrete value that the characteristic can take on, or the actual 
value of the characteristic. 
valueFrom 
An integer. The low range value that a characteristic can take on. 
valueTo 
An integer. The upper range value that a characteristic can take on. 
valueType 
A string. A kind of value that the characteristic value can take on, such as 
numeric, text and so forth. 
EntitySpecificationRelationship sub-resource 
A migration, substitution, dependency or exclusivity relationship between/among entity specifications. 
@referredType 
A string. The actual type of the target instance when needed for 
disambiguation. 
name 
A string. Name of the related entity. 
href 
An uri (Uri). Hyperlink reference. 
id 
A string. unique identifier. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
associationSpec 
An association specification reference (AssociationSpecificationRef). A 


specification for an association used by this relationship. 
relationshipType 
A string. Type of relationship such as migration, substitution, dependency, 
exclusivity. 
role 
A string. The association role for this entity specification. 
validFor 
A time period. The period for which the entitySpecRelationship is valid. 
Quantity sub-resource 
An amount in a given unit. 
amount 
A float. Numeric value in a given unit. 
units 
A string. Unit. 
RelatedParty sub-resource 
Related Entity reference. A related party defines party or party role linked to a specific entity. 
@referredType 
A string. The actual type of the target instance when needed for 
disambiguation. 
name 
A string. Name of the related entity. 
href 
An uri (Uri). Hyperlink reference. 
id 
A string. unique identifier. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
role 
A string. Role played by the related party. 
TargetEntitySchema sub-resource 
The reference object to the schema and type of target entity which is described by a specification. 
@schemaLocation 
A string. This field provides a link to the schema describing the target entity. 
@type 
A string. Class type of the target entity. 
AssociationSpecificationRef relationship 
f
f
b


@referredType 
A string. The actual type of the target instance when needed for 
disambiguation. 
name 
A string. Name of the related entity. 
href 
An uri (Uri). Hyperlink reference. 
id 
A string. unique identifier. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
ConstraintRef relationship 
Constraint reference. The Constraint resource represents a policy/rule applied to an entity or entity spec. 
@referredType 
A string. The actual type of the target instance when needed for 
disambiguation. 
name 
A string. Name of the related entity. 
href 
An uri (Uri). Hyperlink reference. 
id 
A string. unique identifier. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
version 
A string. constraint version. 
Json representation sample 
Provided below is the json representation of an example of an 'EntitySpecification' resource object 
{ 
    "id": "6599", 
    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/6599", 
    "name": "TOSCA Node Template", 
    "description": "This entity specification represents a Tosca Node template that describes the (software) 
components that are used to compose cloud applications", 
    "version": "1.0", 
"
lidF
" {


        "startDateTime": "2020-12-05T00:00", 
        "endDateTime": "2023-12-31T11:59:59" 
    }, 
    "lastUpdate": "2020-12-05T00:00", 
    "lifecycleStatus": "Active", 
    "isBundle": false, 
    "attachment": [ 
        { 
            "description": "This attachment gives a description of the this entity specification with examples", 
            "href": "https://mycsp.com:8080/tmf-api/documentManagement/v4/attachment/6991", 
            "id": "6991", 
            "url": "https://mycsp.com:7070/docloader?docnum=3534536", 
            "@attachmentType": "Document", 
            "content": "", 
            "mimeType": ".pdf", 
            "validFor": { 
                "startDateTime": "2020-12-05T00:00", 
                "endDateTime": "2021-03-25T00:00" 
            }, 
            "size": { 
                "amount": 1741, 
                "units": "KB" 
            }, 
            "name": "TOSCA Node Template", 
            "@type": "Attachment", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/Attachment.schema.json" 
        } 
    ], 
    "specCharacteristic": [ 
        { 
            "name": "Platform", 
            "id": "4441", 
            "description": "This characteristic describes the platform of the node", 
            "valueType": "string", 
            "configurable": true, 
            "validFor": { 
                "startDateTime": "2020-12-05T00:00", 
                "endDateTime": "2023-12-31T11:59:59" 
            }, 
            "@valueSchemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/StringCharacteristic.schema.json", 
            "minCardinality": 0, 
            "maxCardinality": 1, 
            "isUnique": true, 
            "regex": "", 
            "extensible": false, 
            "characteristicValueSpecification": [ 
                { 
                    "valueType": "string", 
                    "isDefault": true, 
                    "value": "Windows", 


                        "startDateTime": "2020-12-05T00:00", 
                        "endDateTime": "2023-12-31T11:59:59" 
                    }, 
                    "regex": "", 
                    "valueFrom": "", 
                    "valueTo": "", 
                    "unitOfMeasure": "", 
                    "rangeInterval": "open", 
                    "@type": "CharacteristicValueSpecification", 
                    "@baseType": "", 
                    "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/CharacteristicValueSpecification.schema.json" 
                } 
            ], 
            "charSpecRelationship": [], 
            "@type": "SpecCharacteristic", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/SpecCharacteristic.schema.json" 
        } 
    ], 
    "relatedParty": [ 
        { 
            "href": "https://mycsp.com:8080/tmf-api/partyManagement/v4/individual/3001", 
            "id": "3001", 
            "name": "charles aznavour", 
            "role": "Creator", 
            "@referredType": "PartyRole", 
            "@type": "RelatedParty", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/EngagedParty/RelatedParty.schema.json" 
        } 
    ], 
    "targetEntitySchema": { 
        "@type": "ManagedEntity", 
        "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ManagedEntity.schema.json" 
    }, 
    "constraint": [ 
        { 
            "href": "https://mycsp.com:8080/tmf-api/policyManagement/v4/policy/3779", 
            "id": "3779", 
            "name": "Node Filter", 
            "version": "1.0", 
            "@referredType": "Constraint", 
            "@type": "ConstraintRef", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ConstraintRef.schema.json" 
        } 
    ], 
    "entitySpecRelationship": [ 
        { 


            "role": "nodeType", 
            "id": "8039", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8039", 
            "name": "Node Type Capability Definition", 
            "validFor": { 
                "startDateTime": "2020-12-05T00:00", 
                "endDateTime": "2023-12-31T11:59:59" 
            }, 
            "associationSpec": {}, 
            "@referredType": "CapabilitySpecification", 
            "@type": "EntitySpecRelationship", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntitySpecRelationship.schema.json" 
        }, 
        { 
            "relationshipType": "Includes", 
            "role": "nodeType", 
            "id": "8053", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8053", 
            "name": "Node Type Requirement Definition", 
            "validFor": { 
                "startDateTime": "2020-12-05T00:00", 
                "endDateTime": "2023-12-31T11:59:59" 
            }, 
            "associationSpec": {}, 
            "@referredType": "RequirementSpecification", 
            "@type": "EntitySpecRelationship", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntitySpecRelationship.schema.json" 
        }, 
        { 
            "relationshipType": "Includes", 
            "role": "nodeType", 
            "id": "8059", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8059", 
            "name": "Node Type Interface Definition", 
            "validFor": { 
                "startDateTime": "2020-12-05T00:00", 
                "endDateTime": "2023-12-31T11:59:59" 
            }, 
            "associationSpec": {}, 
            "@referredType": "InterfaceSpecification", 
            "@type": "EntitySpecRelationship", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntitySpecRelationship.schema.json" 
        }, 
        { 
            "relationshipType": "Includes", 
            "role": "nodeType", 


            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8069", 
            "name": "Node Type Artifact Definition", 
            "validFor": { 
                "startDateTime": "2020-12-05T00:00", 
                "endDateTime": "2023-12-31T11:59:59" 
            }, 
            "associationSpec": {}, 
            "@referredType": "ArtifactSpecification", 
            "@type": "EntitySpecRelationship", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntitySpecRelationship.schema.json" 
        } 
    ], 
    "@type": "ToscaNodeTemplate", 
    "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/ToscaNodeTemplate.schema.json", 
    "@baseType": "EntitySpecification" 
} 
Association Specification resource 
AssociationSpecification is an association class that describes a type of relationship between two entities. 
This is a generic construct that may be used to describe relationship types and roles. The role and type of 
each entity in the relationship is given by an association role specification. Two role specifications are 
embedded in the association specification. 
Resource model 


 
Field descriptions 
AssociationSpecification fields 
href 
An uri (Uri). Hyperlink reference. 
id 
A string. unique identifier. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 


associationRoleSpec 
An association role specification (AssociationRoleSpecification). Role 
specifications for this association. 
constraint 
A list of constraint references (ConstraintRef [*]). Constraints relating to this 
association. 
description 
A string. Description of the specification. 
lastUpdate 
A date time (DateTime). The last modified date of this specification. 
lifecycleStatus 
A string. Indicates the current lifecycle status. 
name 
A string. Name given to this association specification. 
validFor 
A time period. The period for which this specification is valid. 
version 
A string. Version of this association. 
AssociationRoleSpecification sub-resource 
This embedded object represents the role and type of each entity involved in a relationship. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
aggregation 
A string. A flag indicates that if this role is an aggregation or a simple 
relationship. 
defaultQuantity 
An integer. Default quantity of the association role. 
entityType 
A string. The target (root) entity type associated with this role. 
isNavigable 
A boolean. A flag indicating if access from the other end of association is 
allowed or not. 
isSource 
A boolean. A flag indicating if the participant involved in a uni-directional 
relationship is the source or not. This flag is true If the association is bi-
directional. 
maxQuantity 
An integer. Maximum allowed quantity of the association role. 
minQuantity 
An integer. Minimum allowed quantity of the association role. 
role 
A string. The association role of this relationship participant. 


ConstraintRef relationship 
Constraint reference. The Constraint resource represents a policy/rule applied to an entity or entity spec. 
@referredType 
A string. The actual type of the target instance when needed for 
disambiguation. 
name 
A string. Name of the related entity. 
href 
An uri (Uri). Hyperlink reference. 
id 
A string. unique identifier. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
version 
A string. constraint version. 
Json representation sample 
Provided below is the json representation of an example of an 'AssociationSpecification' resource object 
{ 
    "id": "7717", 
    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/associationSpecification/7717", 
    "name": "HostedOn", 
    "description": "An uni-directional association from TOSCA NodeDbmsSpec A to Tosca NodeComputeSpec Z 
indicating an instance of A hosted on an instance of B", 
    "version": "1.0", 
    "validFor": { 
        "startDateTime": "2020-12-05T00:00-04:00", 
        "endDateTime": "2023-12-31T11:59:59-04:00" 
    }, 
    "lastUpdate": "2020-12-05T00:00-04:00", 
    "lifecycleStatus": "Active", 
    "constraint": [ 
        { 
            "href": "https://mycsp.com:8080/tmf-api/policyManagement/v4/policy/3989", 
            "id": "3989", 
            "name": "EligibilityConstraint", 
            "version": "1.0", 
            "@referredType": "Constraint", 
            "@type": "ConstraintRef", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ConstraintRef.schema.json" 
        } 
]


    "associationRoleSpec": [ 
        { 
            "entityType": "NodeDbmsSpec", 
            "isNavigable": true, 
            "isSource": true, 
            "maxQuantity": 1, 
            "minQuantity": 1, 
            "role": "a_host", 
            "defaultQuantity": 1, 
            "aggregation": "None" 
        }, 
        { 
            "entityType": "NodeComputeSpec", 
            "isNavigable": true, 
            "isSource": false, 
            "maxQuantity": 1, 
            "minQuantity": 0, 
            "role": "z_host", 
            "defaultQuantity": 1, 
            "aggregation": "None" 
        } 
    ], 
    "@type": "AssociationSpecification", 
    "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/AssociationSpecification.schema.json", 
    "@baseType": "" 
} 
Association resource 
Association is the class that describes a relationship between two or more entities or entity specifications 
based on a given association specification. The role of each endpoint in the relationship is given by an 
association role. The type of endpoints in the relationship should match the ones as defined in the 
corresponding association role specification. A relationship between entity specifications may be 
governed by conditions and rules which are addressed by constraint references in this resource. 
Constraints for a relationship may include new rules and conditions in addition to those defined for the 
corresponding association specification. 
Resource model 


 
 
 


Field descriptions 
Association fields 
href 
An uri (Uri). Hyperlink reference. 
id 
A string. unique identifier. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
associationRole 
An association role (AssociationRole). The end point roles of this association. 
associationSpec 
An association specification reference (AssociationSpecificationRef). The 
specification of this association. 
constraint 
A list of constraint references (ConstraintRef [*]). Any constraints in this 
association. 
description 
A string. Description of the association. 
lastUpdate 
A date time (DateTime). The last modified date of this association object. 
lifecycleStatus 
A string. Indicates the current lifecycle status. 
name 
A string. Name given to this association. 
validFor 
A time period. The period for which this association is valid. 
version 
A string. Version of this REST resource. 
AssociationRole sub-resource 
This embedded object represents the role and type of each entity involved in a relationship. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
entity 
An entity reference (EntityRef). The entity being referred to. 
isSource 
A boolean. A flag indicating if the participant involved in a relationship is the 


source or not. If this flag is true for both roles in an association, the association 
is bi-directional (both end points are navigable). 
role 
A string. The association role of this relationship participant as defined in the 
associationRoleSpecification. 
AssociationSpecificationRef relationship 
reference to an AssociationSpecification object. 
@referredType 
A string. The actual type of the target instance when needed for 
disambiguation. 
name 
A string. Name of the related entity. 
href 
An uri (Uri). Hyperlink reference. 
id 
A string. unique identifier. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
ConstraintRef relationship 
Constraint reference. The Constraint resource represents a policy/rule applied to an entity or entity spec. 
@referredType 
A string. The actual type of the target instance when needed for 
disambiguation. 
name 
A string. Name of the related entity. 
href 
An uri (Uri). Hyperlink reference. 
id 
A string. unique identifier. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
version 
A string. constraint version. 
EntityRef relationship


Entity reference schema to be use for all entityRef class. 
href 
An uri (Uri). Hyperlink reference. 
id 
A string. unique identifier. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
@referredType 
A string. The actual type of the target instance when needed for 
disambiguation. 
name 
A string. Name of the related entity. 
Json representation sample 
Provided below is the json representation of an example of an 'Association' resource object 
{ 
    "id": "7757", 
    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/association/7757", 
    "name": "ReliesOn", 
    "description": "An Uni-directional ReliesOn association from Electrical Fire Protection Specification to 
Mechanical Fire Protection Specification", 
    "version": "1.0", 
    "validFor": { 
        "startDateTime": "2020-12-25T00:00Z", 
        "endDateTime": "2023-12-31T11:59:59Z" 
    }, 
    "lastUpdate": "2020-12-25T00:00Z", 
    "lifecycleStatus": "Active", 
    "associationSpec": { 
        "id": "7727", 
        "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/associationSpecification/7727", 
        "name": "ReliesOn", 
        "@referredType": "AssociationSpecfication", 
        "@type": "AssociationSpecficationRef", 
        "@baseType": "", 
        "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/AssociationSpecficationRef.schema.json" 
    }, 
    "constraint": [ 
        { 
            "href": "https://mycsp.com:8080/tmf-api/policyManagement/v4/policy/3947", 
            "id": "3947", 
            "name": "protectionDependencyRule", 
"version": "1 0"


            "@referredType": "Constraint", 
            "@type": "ConstraintRef", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ConstraintRef.schema.json" 
        } 
    ], 
    "associationRole": [ 
        { 
            "isSource": true, 
            "role": "a_ReliesOn", 
            "@type": "AssociationRole", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/AssociationRole.schema.json", 
            "@baseType": "", 
            "entity": { 
                "id": "8089", 
                "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8089", 
                "name": "Fire Protection Electrical", 
                "@type": "EntityRef", 
                "@baseType": "", 
                "referredType": "FireProtectionSpecification", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityRef.schema.json" 
            } 
        }, 
        { 
            "isSource": false, 
            "role": "z_ReliesOn", 
            "@type": "AssociationRole", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/AssociationRole.schema.json", 
            "@baseType": "", 
            "entity": { 
                "id": "8087", 
                "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8087", 
                "name": "Fire Protection Mechanical", 
                "@type": "EntityRef", 
                "@baseType": "", 
                "referredType": "FireProtectionSpecification", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityRef.schema.json" 
            } 
        } 
    ], 
    "@type": "Association", 
    "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/Association.schema.json", 
    "@baseType": "" 
} 
Import Job resource 
Represents a task used to import resources from a file. 
 
 


Resource model 
 
Field descriptions 
ImportJob fields 
href 
An uri (Uri). Reference of the import job. 
id 
A string. Identifier of the import job. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
completionDate 
A date time (DateTime). Date at which the job was completed. 
contentType 
A string. Indicates the format of the imported data. 
creationDate 
A date time (DateTime). Date at which the job was created. 
errorLog 
A string. Reason for failure if status is failed. 
href 
An uri (Uri). Reference of the import job. 
id 
A string. Identifier of the import job. 
path 
A string. URL of the root resource where the content of the file specified by the 
import job must be applied. 


status 
A job state type (JobStateType). Status of the import job (not started, running, 
succeeded, failed). 
url 
An uri (Uri). URL of the file containing the data to be imported. 
Json representation sample 
Provided below is the json representation of an example of a, 'ImportJob' resource object 
{ 
    "completionDate": "2020-09-23T00:03", 
    "contentType": "application/json", 
    "creationDate": "2020-09-23T00:00", 
    "errorLog": "http://my-platform/daily/logging/ImportJobErrors.log", 
    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/importJob/2011", 
    "id": "2011", 
    "path": "entityCatalogManagement/", 
    "status": "completed", 
    "url": "ftp://ftp.mycsp.com/entityCatalogManagement/ImportJob.json" 
} 
Export Job resource 
Represents a task used to export resources to a file. 
Resource model 
 
Field descriptions 
ExportJob fields 
href 
An uri (Uri). Reference of the export job. 


id 
A string. Identifier of the export job. 
@baseType 
A string. When sub-classing, this defines the super-class. 
@schemaLocation 
An uri (Uri). A URI to a JSON-Schema file that defines additional attributes and 
relationships. 
@type 
A string. When sub-classing, this defines the sub-class Extensible name. 
completionDate 
A date time (DateTime). Data at which the job was completed. 
contentType 
A string. The format of the exported data. 
creationDate 
A date time (DateTime). Date at which the job was created. 
errorLog 
A string. Reason for failure. 
href 
An uri (Uri). Reference of the export job. 
id 
A string. Identifier of the export job. 
path 
A string. URL of the root resource acting as the source for streaming content to 
the file specified by the export job. 
query 
A string. Used to scope the exported data. 
status 
A job state type (JobStateType). Status of the export job (not started, running, 
succeeded, failed). 
url 
An uri (Uri). URL of the file containing the data to be exported. 
Json representation sample 
We provide below the json representation of an example of an 'ExportJob' resource object 
{ 
    "completionDate": "2020-08-25T00:05", 
    "contentType": "application/json", 
    "creationDate": "2020-08-25T00:00", 
    "errorLog": "http://my-platform/daily/logging/exportJobErrors.log", 
    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/exportJob/2003", 
    "id": "2003", 
    "path": "entityCatalogManagement/", 
    "query": "@type=JobSpecification", 
    "status": "completed", 
    "url": "ftp://ftp.mycsp.com/entityCatalogManagement/exportJob.json" 
} 
 


 
Notification Resource Models 
 
25 notifications are defined for this API. 
Notifications related to EntityCatalog: 
    - EntityCatalogCreateEvent 
    - EntityCatalogAttributeValueChangeEvent 
    - EntityCatalogStateChangeEvent 
    - EntityCatalogDeleteEvent 
    - EntityCatalogBatchEvent 
Notifications related to EntityCategory: 
    - EntityCategoryCreateEvent 
    - EntityCategoryAttributeValueChangeEvent 
    - EntityCategoryStateChangeEvent 
    - EntityCategoryDeleteEvent 
Notifications related to EntityCatalogItem: 
    - EntityCatalogItemCreateEvent 
    - EntityCatalogItemAttributeValueChangeEvent 
    - EntityCatalogItemStateChangeEvent 
    - EntityCatalogItemDeleteEvent 
Notifications related to EntitySpecification: 
    - EntitySpecificationCreateEvent 
    - EntitySpecificationAttributeValueChangeEvent 
    - EntitySpecificationStateChangeEvent 
    - EntitySpecificationDeleteEvent 
Notifications related to AssociationSpecification: 
    - AssociationSpecificationCreateEvent 
    - AssociationSpecificationAttributeValueChangeEvent 
    - AssociationSpecificationStateChangeEvent 
    - AssociationSpecificationDeleteEvent 
Notifications related to Association: 
    - AssociationCreateEvent 
    - AssociationAttributeValueChangeEvent 
    - AssociationStateChangeEvent 
    - AssociationDeleteEvent 


The notification structure for all notifications in this API follow the pattern depicted by the figure below. 
A notification event resource (depicted by "SpecificEvent" placeholder) is a sub class of a generic Event 
structure containing at least an id of the event occurrence (eventId), an event timestamp (eventTime), 
and the name of the resource (eventType).  
This notification structure owns an event payload structure ("SpecificEventPayload" placeholder) linked 
to the resource concerned by the notification using the resource name as access field ("resourceName" 
placeholder). 
 


Entity Catalog Create Event 
Notification EntityCatalogCreateEvent case for resource EntityCatalog 
Json representation sample 
We provide below the json representation of an example of an 'EntityCatalogCreateEvent' notification 
event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"EntityCatalogCreateEvent", 
     "event": { 
        "entityCatalog" :  
            {-- SEE EntityCatalog RESOURCE SAMPLE --} 
    } 
} 
 
Entity Catalog Attribute Value Change Event 
Notification EntityCatalogAttributeValueChangeEvent case for resource EntityCatalog 
Json representation sample 
Provided below is the json representation of an example of an 'EntityCatalogAttributeValueChangeEvent' 
notification event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"EntityCatalogAttributeValueChangeEvent", 
     "event": { 
        "entityCatalog" :  
            {-- SEE EntityCatalog RESOURCE SAMPLE --} 
    } 
} 
 
Entity Catalog State Change Event 
Notification EntityCatalogStateChangeEvent case for resource EntityCatalog 
 
 


Json representation sample 
Provided below is the json representation of an example of an 'EntityCatalogStateChangeEvent' 
notification event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"EntityCatalogStateChangeEvent", 
     "event": { 
        "entityCatalog" :  
            {-- SEE EntityCatalog RESOURCE SAMPLE --} 
    } 
} 
 
Entity Catalog Delete Event 
Notification EntityCatalogDeleteEvent case for resource EntityCatalog 
Json representation sample 
Provided below is the json representation of an example of an 'EntityCatalogDeleteEvent' notification 
event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"EntityCatalogDeleteEvent", 
     "event": { 
        "entityCatalog" :  
            {-- SEE EntityCatalog RESOURCE SAMPLE --} 
    } 
} 
 
Entity Catalog Batch Event 
Notification EntityCatalogBatchEvent case for resource EntityCatalog 
Json representation sample 
Provided below is the json representation of an example of an 'EntityCatalogBatchEvent' notification 
event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"EntityCatalogBatchEvent", 
"event": {


        "entityCatalog" :  
            {-- SEE EntityCatalog RESOURCE SAMPLE --} 
    } 
} 
 
Entity Category Create Event 
Notification EntityCategoryCreateEvent case for resource EntityCategory 
Json representation sample 
Provided below is the json representation of an example of an 'EntityCategoryCreateEvent' notification 
event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"EntityCategoryCreateEvent", 
     "event": { 
        "entityCategory" :  
            {-- SEE EntityCategory RESOURCE SAMPLE --} 
    } 
} 
 
Entity Category Attribute Value Change Event 
Notification EntityCategoryAttributeValueChangeEvent case for resource EntityCategory 
Json representation sample 
Provided below is the json representation of an example of an 
'EntityCategoryAttributeValueChangeEvent' notification event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"EntityCategoryAttributeValueChangeEvent", 
     "event": { 
        "entityCategory" :  
            {-- SEE EntityCategory RESOURCE SAMPLE --} 
    } 
} 
 
Entity Category State Change Event 
Notification EntityCategoryStateChangeEvent case for resource EntityCategory 


Json representation sample 
Provided below is the json representation of an example of an 'EntityCategoryStateChangeEvent' 
notification event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"EntityCategoryStateChangeEvent", 
     "event": { 
        "entityCategory" :  
            {-- SEE EntityCategory RESOURCE SAMPLE --} 
    } 
} 
 
Entity Category Delete Event 
Notification EntityCategoryDeleteEvent case for resource EntityCategory 
Json representation sample 
Provided below is the json representation of an example of an 'EntityCategoryDeleteEvent' notification 
event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"EntityCategoryDeleteEvent", 
     "event": { 
        "entityCategory" :  
            {-- SEE EntityCategory RESOURCE SAMPLE --} 
    } 
} 
 
Entity Catalog Item Create Event 
Notification EntityCatalogItemCreateEvent case for resource EntityCatalogItem 
Json representation sample 
Provided below is the json representation of an example of an 'EntityCatalogItemCreateEvent' 
notification event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"EntityCatalogItemCreateEvent", 
"event": {


        "entityCatalogItem" :  
            {-- SEE EntityCatalogItem RESOURCE SAMPLE --} 
    } 
} 
 
Entity Catalog Item Attribute Value Change Event 
Notification EntityCatalogItemAttributeValueChangeEvent case for resource EntityCatalogItem 
Json representation sample 
Provided below is the json representation of an example of an 
'EntityCatalogItemAttributeValueChangeEvent' notification event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"EntityCatalogItemAttributeValueChangeEvent", 
     "event": { 
        "entityCatalogItem" :  
            {-- SEE EntityCatalogItem RESOURCE SAMPLE --} 
    } 
} 
 
Entity Catalog Item State Change Event 
Notification EntityCatalogItemStateChangeEvent case for resource EntityCatalogItem 
Json representation sample 
Provided below is the json representation of an example of an 'EntityCatalogItemStateChangeEvent' 
notification event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"EntityCatalogItemStateChangeEvent", 
     "event": { 
        "entityCatalogItem" :  
            {-- SEE EntityCatalogItem RESOURCE SAMPLE --} 
    } 
} 
 
Entity Catalog Item Delete Event 
Notification EntityCatalogItemDeleteEvent case for resource EntityCatalogItem 


Json representation sample 
Provided below is the json representation of an example of an 'EntityCatalogItemDeleteEvent' 
notification event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"EntityCatalogItemDeleteEvent", 
     "event": { 
        "entityCatalogItem" :  
            {-- SEE EntityCatalogItem RESOURCE SAMPLE --} 
    } 
} 
 
Entity Specification Create Event 
Notification EntitySpecificationCreateEvent case for resource EntitySpecification 
Json representation sample 
Provided below is the json representation of an example of an 'EntitySpecificationCreateEvent' 
notification event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"EntitySpecificationCreateEvent", 
     "event": { 
        "entitySpecification" :  
            {-- SEE EntitySpecification RESOURCE SAMPLE --} 
    } 
} 
 
Entity Specification Attribute Value Change Event 
Notification EntitySpecificationAttributeValueChangeEvent case for resource EntitySpecification 
Json representation sample 
Provided below is the json representation of an example of an 
'EntitySpecificationAttributeValueChangeEvent' notification event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"EntitySpecificationAttributeValueChangeEvent", 
"event": {


        "entitySpecification" :  
            {-- SEE EntitySpecification RESOURCE SAMPLE --} 
    } 
} 
 
Entity Specification State Change Event 
Notification EntitySpecificationStateChangeEvent case for resource EntitySpecification 
Json representation sample 
Provides below is the json representation of an example of an 'EntitySpecificationStateChangeEvent' 
notification event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"EntitySpecificationStateChangeEvent", 
     "event": { 
        "entitySpecification" :  
            {-- SEE EntitySpecification RESOURCE SAMPLE --} 
    } 
} 
 
Entity Specification Delete Event 
Notification EntitySpecificationDeleteEvent case for resource EntitySpecification 
Json representation sample 
Provides below is the json representation of an example of an 'EntitySpecificationDeleteEvent' 
notification event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"EntitySpecificationDeleteEvent", 
     "event": { 
        "entitySpecification" :  
            {-- SEE EntitySpecification RESOURCE SAMPLE --} 
    } 
} 
 
Association Specification Create Event 
Notification AssociationSpecificationCreateEvent case for resource AssociationSpecification 


Json representation sample 
Provides below is the json representation of an example of an 'AssociationSpecificationCreateEvent' 
notification event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"AssociationSpecificationCreateEvent", 
     "event": { 
        "associationSpecification" :  
            {-- SEE AssociationSpecification RESOURCE SAMPLE --} 
    } 
} 
 
Association Specification Attribute Value Change Event 
Notification AssociationSpecificationAttributeValueChangeEvent case for resource 
AssociationSpecification 
Json representation sample 
Provides below is the json representation of an example of an 
'AssociationSpecificationAttributeValueChangeEvent' notification event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"AssociationSpecificationAttributeValueChangeEvent", 
     "event": { 
        "associationSpecification" :  
            {-- SEE AssociationSpecification RESOURCE SAMPLE --} 
    } 
} 
 
Association Specification State Change Event 
Notification AssociationSpecificationStateChangeEvent case for resource AssociationSpecification 
Json representation sample 
Provides below is the json representation of an example of an 
'AssociationSpecificationStateChangeEvent' notification event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
"eventType":"AssociationSpecificationStateChangeEvent"


     "event": { 
        "associationSpecification" :  
            {-- SEE AssociationSpecification RESOURCE SAMPLE --} 
    } 
} 
 
Association Specification Delete Event 
Notification AssociationSpecificationDeleteEvent case for resource AssociationSpecification 
Json representation sample 
Provides below is the json representation of an example of an 'AssociationSpecificationDeleteEvent' 
notification event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"AssociationSpecificationDeleteEvent", 
     "event": { 
        "associationSpecification" :  
            {-- SEE AssociationSpecification RESOURCE SAMPLE --} 
    } 
} 
 
Association Create Event 
Notification AssociationCreateEvent case for resource Association 
Json representation sample 
Provides below is the json representation of an example of an 'AssociationCreateEvent' notification 
event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"AssociationCreateEvent", 
     "event": { 
        "association" :  
            {-- SEE Association RESOURCE SAMPLE --} 
    } 
} 
 
Association Attribute Value Change Event 
Notification AssociationAttributeValueChangeEvent case for resource Association


Json representation sample 
Provides below is the json representation of an example of an 'AssociationAttributeValueChangeEvent' 
notification event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"AssociationAttributeValueChangeEvent", 
     "event": { 
        "association" :  
            {-- SEE Association RESOURCE SAMPLE --} 
    } 
} 
 
Association State Change Event 
Notification AssociationStateChangeEvent case for resource Association 
Json representation sample 
Provides below is the json representation of an example of an 'AssociationStateChangeEvent' notification 
event object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"AssociationStateChangeEvent", 
     "event": { 
        "association" :  
            {-- SEE Association RESOURCE SAMPLE --} 
    } 
} 
 
Association Delete Event 
Notification AssociationDeleteEvent case for resource Association 
Json representation sample 
Provides below is the json representation of an example of an 'AssociationDeleteEvent' notification event 
object 
{ 
    "eventId":"00001", 
    "eventTime":"2015-11-16T16:42:25-04:00", 
    "eventType":"AssociationDeleteEvent", 
"event": {


        "association" :  
            {-- SEE Association RESOURCE SAMPLE --} 
    } 
} 
 
 


 API OPERATIONS 
Remember the following Uniform Contract: 
Operation on Entities 
Uniform API Operation 
Description 
Query Entities 
GET Resource 
GET must be used to 
retrieve a representation 
of a resource. 
 
Create Entity 
POST Resource 
POST must be used to 
create a new resource 
Partial Update of an Entity 
PATCH Resource 
PATCH must be used to 
partially update a resource 
Remove an Entity 
DELETE Resource 
DELETE must be used to 
remove a resource 
Execute an Action on an 
Entity  
POST on TASK Resource 
POST must be used to 
execute Task Resources 
Other Request Methods 
POST on TASK Resource 
GET and POST must not be 
used to tunnel other 
request methods. 
 
Filtering and attribute selection rules are described in the TMF REST Design Guidelines 
(TMF630). 
Notifications are also described in a subsequent section. 
 
 


Operations on Entity Catalog 
List entity catalogs 
  GET /entityCatalog?fields=...&{filtering} 
Description 
This operation list entity catalog entities. 
Attribute selection is enabled for all first level attributes. 
Filtering may be available depending on the compliance level supported by an implementation. 
 
Usage Samples 
Here's an example of a request for retrieving multiple entity catalogs. 
 
Request 
 
GET /tmf-api/entityCatalogManagement/v4/entityCatalog?lifecycleStatus=Active 
Accept: application/json 
 
 
 
Response 
 
200 
 
[ 
    { 
        "id": "6421", 
        "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCatalog/6421", 
        "name": "Home Security Catalog", 
        "description": "This catalog describes home security entities that address both wholesale/retailer business 
segment.", 
        "version": "2.0", 
        "validFor": { 
            "startDateTime": "2020-11-24T00:00", 
            "endDateTime": "2023-12-05T00:00" 
        }, 
        "lastUpdate": "2020-11-24T00:00", 
        "lifecycleStatus": "Active", 
        "relatedParty": [ 
            { 
                "href": "https:/host:port/tmf-api/partyRoleManagement/v4/partyRole/6733", 
"id" "6733"


                "name": "Home Security Ltd", 
                "role": "vendor", 
                "@referredType": "Supplier", 
                "@type": "RelatedParty", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/EngagedParty/RelatedParty.schema.json", 
                "@baseType": "" 
            } 
        ], 
        "category": [ 
            { 
                "id": "6073", 
                "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCategory/6073", 
                "version": "1.0", 
                "name": "SmartHome Security", 
                "@referredType": "EntityCategory", 
                "@type": "EntityCategoryRef", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntityCategoryRef.schema.json", 
                "@baseType": "" 
            }, 
            { 
                "id": "6079", 
                "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCategory/6079", 
                "version": "1.0", 
                "name": "Sensors", 
                "@referredType": "EntityCategory", 
                "@type": "EntityCategoryRef", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntityCategoryRef.schema.json", 
                "@baseType": "" 
            } 
        ], 
        "@type": "EntityCatalog", 
        "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityCatalog.schema.json", 
        "@baseType": "Catalog" 
    }, 
    { 
        "id": "6521", 
        "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCatalog/6521", 
        "name": "Certified IOT Device Catalog", 
        "description": "This catalog describes certified IOT device entities that address both wholesale/retailer 
business segment.", 
        "version": "1.0", 
        "validFor": { 
            "startDateTime": "2020-12-05T00:00", 
            "endDateTime": "2023-12-05T00:00" 
        }, 
        "lastUpdate": "2020-12-05T00:00", 
        "lifecycleStatus": "Active", 
        "relatedParty": [ 
            { 


                "href": "https:/host:port/tmf-api/partyRoleManagement/v4/partyRole/6733", 
                "id": "6733", 
                "name": "ABC IOT Vendor", 
                "role": "vendor", 
                "@referredType": "Supplier", 
                "@type": "RelatedParty", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/EngagedParty/RelatedParty.schema.json", 
                "@baseType": "" 
            } 
        ], 
        "category": [ 
            { 
                "id": "6073", 
                "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCategory/6073", 
                "version": "1.0", 
                "name": "Gateway", 
                "@referredType": "EntityCategory", 
                "@type": "EntityCategoryRef", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntityCategoryRef.schema.json", 
                "@baseType": "" 
            }, 
            { 
                "id": "6079", 
                "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCategory/6079", 
                "version": "1.0", 
                "name": "Telemetry", 
                "@referredType": "EntityCategory", 
                "@type": "EntityCategoryRef", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntityCategoryRef.schema.json", 
                "@baseType": "" 
            } 
        ], 
        "@type": "EntityCatalog", 
        "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityCatalog.schema.json", 
        "@baseType": "Catalog" 
    } 
] 
 
 
 
 


Retrieve entity catalog 
  GET /entityCatalog/{id}?fields=...&{filtering} 
Description 
This operation retrieves an entity catalog entity. 
Attribute selection is enabled for all first level attributes. 
Filtering on sub-resources may be available depending on the compliance level supported by an 
implementation. 
Usage Samples 
Here's an example of a request for retrieving a specific catalog. 
 
Request 
 
GET /tmf-api/entityCatalogManagement/v4/entityCatalog/6421 
Accept: application/json 
 
 
 
Response 
 
200 
 
{ 
    "id": "6421", 
    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCatalog/6421", 
    "name": "Home Security Catalog", 
    "description": "This catalog describes home security entities that address both wholesale/retailer business 
segment.", 
    "version": "1.0", 
    "validFor": { 
        "startDateTime": "2020-08-25T00:00", 
        "endDateTime": "2023-12-05T00:00" 
    }, 
    "lastUpdate": "2020-08-25T00:00", 
    "lifecycleStatus": "Provisional", 
    "relatedParty": [ 
        { 
            "href": "https:/host:port/tmf-api/partyRoleManagement/v4/partyRole/6733", 
            "id": "6733", 
            "name": "Home Security Ltd", 
            "role": "vendor", 
            "@referredType": "Supplier", 
            "@type": "RelatedParty", 


api/schema/EngagedParty/RelatedParty.schema.json", 
            "@baseType": "" 
        } 
    ], 
    "category": [ 
        { 
            "id": "6073", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCategory/6073", 
            "version": "1.0", 
            "name": "SmartHome Security", 
            "@referredType": "EntityCategory", 
            "@type": "EntityCategoryRef", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntityCategoryRef.schema.json", 
            "@baseType": "" 
        }, 
        { 
            "id": "6079", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCategory/6079", 
            "version": "1.0", 
            "name": "Sensors", 
            "@referredType": "EntityCategory", 
            "@type": "EntityCategoryRef", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntityCategoryRef.schema.json", 
            "@baseType": "" 
        } 
    ], 
    "@type": "EntityCatalog", 
    "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityCatalog.schema.json", 
    "@baseType": "Catalog" 
} 
 
Create entity catalog 
  POST /entityCatalog 
Description 
This operation creates an entity catalog entity. 
Mandatory and Non Mandatory Attributes 
The following tables provide the list of mandatory and non mandatory attributes when creating a 
EntityCatalog, including any possible rule conditions and applicable default values. Notice that it is up to 
an implementer to add additional mandatory attributes. 
 


Mandatory Attributes 
Rule 
name 
 
 
Non Mandatory Attributes 
Rule 
@baseType 
 
@schemaLocation 
 
@type 
 
category 
 
description 
 
lastUpdate 
 
lifecycleStatus 
 
relatedParty 
 
validFor 
 
version 
 
 
Usage Samples 
Here's an example of a request for creating a specific catalog. 
 
Request 
 
POST /tmf-api/entityCatalogManagement/v4/entityCatalog 
Content-Type: application/json 
 
{ 
    "name": "Home Security Catalog", 
    "description": "This catalog describes home security entities that address both wholesale/retailer business 
segment.", 
    "version": "1.0", 
    "validFor": { 
        "startDateTime": "2020-08-25T00:00", 
        "endDateTime": "2023-12-05T00:00" 
    }, 
    "lifecycleStatus": "Provisional", 
    "relatedParty": [ 
        { 
            "href": "https:/host:port/tmf-api/partyRoleManagement/v4/partyRole/6733", 
            "id": "6733", 
            "name": "Home Security Ltd", 
            "role": "vendor", 
            "@referredType": "Supplier", 
            "@type": "RelatedParty", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/EngagedParty/RelatedParty.schema.json" 
        } 
    ], 
"@t
" "E tit C t l
"


    "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityCatalog.schema.json ", 
    "@baseType": "Catalog" 
} 
 
 
 
Response 
 
201 
 
{ 
    "id": "6421", 
    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCatalog/6421", 
    "name": "Home Security Catalog", 
    "description": "This catalog describes home security entities that address both wholesale/retailer business 
segment.", 
    "version": "1.0", 
    "validFor": { 
        "startDateTime": "2020-08-25T00:00", 
        "endDateTime": "2023-12-05T00:00" 
    }, 
    "lastUpdate": "2020-08-25T00:00", 
    "lifecycleStatus": "Provisional", 
    "relatedParty": [ 
        { 
            "href": "https:/host:port/tmf-api/partyRoleManagement/v4/partyRole/6733", 
            "id": "6733", 
            "name": "Home Security Ltd", 
            "role": "vendor", 
            "@referredType": "Supplier", 
            "@type": "RelatedParty", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/EngagedParty/RelatedParty.schema.json", 
            "@baseType": "" 
        } 
    ], 
    "category": [], 
    "@type": "EntityCatalog", 
    "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityCatalog.schema.json", 
    "@baseType": "Catalog" 
} 
 
 
 
 


Patch entity catalog 
  PATCH /entityCatalog/{id} 
Description 
This operation allows partial updates of an entity catalog entity. Support of json/merge 
(https://tools.ietf.org/html/rfc7386) is mandatory, support of json/patch 
(http://tools.ietf.org/html/rfc5789) is optional. 
Note: If the update operation yields to the creation of sub-resources or relationships, the same rules 
concerning mandatory sub-resource attributes and default value settings in the POST operation applies 
to the PATCH operation.  Hence these tables are not repeated here. 
Patchable and Non Patchable Attributes 
The tables below provide the list of patchable and non patchable attributes, including constraint rules on 
their usage. 
Patchable Attributes 
Rule 
category 
 
description 
 
lifecycleStatus 
 
name 
 
relatedParty 
 
validFor 
 
version 
 
 
Non Patchable Attributes 
Rule 
id 
 
href 
 
lastUpdate 
 
@type 
 
@schemaLocation 
 
@baseType 
 
 
Usage Samples 
Here's an example of a request for patching a catalog. In this example, a new version is set, together with 
validity period and other modifications. 
 
Request 
 
PATCH /tmf-api/entityCatalogManagement/v4/entityCatalog/6421


Content-Type: application/merge-patch+json 
 
{ 
    "version": "2.0", 
    "validFor": { 
        "startDateTime": "2020-11-24T00:00", 
        "endDateTime": "2023-12-05T00:00" 
    }, 
    "lifecycleStatus": "Active", 
    "category": [ 
        { 
            "id": "6073", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCategory/6073", 
            "version": "1.0", 
            "name": "SmartHome Security", 
            "@referredType": "EntityCategory", 
            "@type": "EntityCategoryRef", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntityCategoryRef.schema.json" 
        }, 
        { 
            "id": "6079", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCategory/6079", 
            "version": "1.0", 
            "name": "Sensors", 
            "@referredType": "EntityCategory", 
            "@type": "EntityCategoryRef", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntityCategoryRef.schema.json" 
        } 
    ] 
} 
 
 
 
Response 
 
200 
 
{ 
    "id": "6421", 
    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCatalog/6421", 
    "name": "Home Security Catalog", 
    "description": "This catalog describes home security entities that address both wholesale/retailer business 
segment.", 
    "version": "2.0", 
    "validFor": { 
        "startDateTime": "2020-11-24T00:00", 
        "endDateTime": "2023-12-05T00:00" 
    }, 
    "lastUpdate": "2020-11-24T00:00", 
"lifecycleStatus": "Active"


    "relatedParty": [ 
        { 
            "href": "https:/host:port/tmf-api/partyRoleManagement/v4/partyRole/6733", 
            "id": "6733", 
            "name": "Home Security Ltd", 
            "role": "vendor", 
            "@referredType": "Supplier", 
            "@type": "RelatedParty", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/EngagedParty/RelatedParty.schema.json", 
            "@baseType": "" 
        } 
    ], 
    "category": [ 
        { 
            "id": "6073", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCategory/6073", 
            "version": "1.0", 
            "name": "SmartHome Security", 
            "@referredType": "EntityCategory", 
            "@type": "EntityCategoryRef", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntityCategoryRef.schema.json", 
            "@baseType": "" 
        }, 
        { 
            "id": "6079", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCategory/6079", 
            "version": "1.0", 
            "name": "Sensors", 
            "@referredType": "EntityCategory", 
            "@type": "EntityCategoryRef", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntityCategoryRef.schema.json", 
            "@baseType": "" 
        } 
    ], 
    "@type": "EntityCatalog", 
    "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityCatalog.schema.json", 
    "@baseType": "Catalog" 
} 
 
Delete entity catalog 
  DELETE /entityCatalog/{id} 
 
 


Description 
This operation deletes an entity catalog entity. 
 
Usage Samples 
Here's an example of a request for deleting a catalog. 
 
Request 
 
DELETE /tmf-api/entityCatalogManagement/v4/entityCatalog/6421 
 
 
 
Response 
 
204 
 
 
Operations on Entity Category 
List entity categories 
  GET /entityCategory?fields=...&{filtering} 
Description 
This operation list entity category entities. 
Attribute selection is enabled for all first level attributes. 
Filtering may be available depending on the compliance level supported by an implementation. 
 
Usage Samples 
Here's an example of a request for retrieving multiple entity categories. 
 
Request 
 
GET /tmf-api/entityCatalogManagement/v4/entityCategory 
Accept: application/json 


 
 
Response 
 
200 
 
[ 
    { 
        "id": "2027", 
        "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCategory/2027", 
        "name": "Tosca Node Types", 
        "description": "A category to hold all available Tosca Node Types", 
        "version": "2.0", 
        "validFor": { 
            "startDateTime": "2020-11-06T00:00", 
            "endDateTime": "2025-11-24T00:00" 
        }, 
        "lifecycleStatus": "Active", 
        "lastUpdate": "2020-11-06T00:00", 
        "isRoot": true, 
        "parentId": "", 
        "entityCatalogItem": [], 
        "childCategory": [ 
            { 
                "id": "2029", 
                "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCategory/2029", 
                "name": "SoftwareComponent", 
                "version": "1.0", 
                "@referredType": "EntityCategory", 
                "@type": "EntityCategoryRef", 
                "@schemalLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntityCategoryRef.schema.json", 
                "@baseType": "" 
            } 
        ], 
        "@type": "EntityCategory", 
        "@schemalLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityCategory.schema.json", 
        "@baseType": "Category" 
    }, 
    { 
        "id": "2029", 
        "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCategory/2029", 
        "name": "SoftwareComponent", 
        "description": "A category to hold all available Software Components", 
        "version": "1.0", 
        "validFor": { 
            "startDateTime": "2020-11-06T00:00", 
            "endDateTime": "2025-11-24T00:00" 
        }, 
        "lifecycleStatus": "Active", 
        "lastUpdate": "2020-11-06T00:00", 
"isRoot": false


        "parentId": "2027", 
        "entityCatalogItem": [ 
            { 
                "id": "2039", 
                "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCatalogItem/2039", 
                "name": "Database", 
                "version": "1.0", 
                "@referredType": "EntityCatalogItem", 
                "@type": "EntityCatalogItemRef", 
                "@schemalLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntityCatalogItemRef.schema.json", 
                "@baseType": "" 
            } 
        ], 
        "childCategory": [], 
        "@type": "EntityCategory", 
        "@schemalLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityCategory.schema.json", 
        "@baseType": "Category" 
    } 
] 
 
Retrieve entity category 
  GET /entityCategory/{id}?fields=...&{filtering} 
Description 
This operation retrieves an entity category entity. 
Attribute selection is enabled for all first level attributes. 
Filtering on sub-resources may be available depending on the compliance level supported by an 
implementation. 
Usage Samples 
Here's an example of a request for retrieving a specific category. 
 
Request 
 
GET /tmf-api/entityCatalogManagement/v4/entityCategory/2027 
Accept: application/json 
 
 
 
Response 
 
200


 
{ 
    "id": "2027", 
    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCategory/2027", 
    "name": "Tosca Node Types", 
    "description": "A category to hold all available Tosca Node Types", 
    "version": "1.0", 
    "validFor": { 
        "startDateTime": "2020-08-25T00:00", 
        "endDateTime": "2023-11-24T00:00" 
    }, 
    "lifecycleStatus": "Active", 
    "lastUpdate": "2020-08-25T00:00", 
    "isRoot": true, 
    "parentId": "", 
    "entityCatalogItem": [], 
    "childCategory": [], 
    "@type": "EntityCategory", 
    "@schemalLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityCategory.schema.json", 
    "@baseType": "Category" 
} 
 
Create entity category 
  POST /entityCategory 
Description 
This operation creates an entity category entity. 
Mandatory and Non Mandatory Attributes 
The following tables provide the list of mandatory and non mandatory attributes when creating a 
EntityCategory, including any possible rule conditions and applicable default values. Notice that it is up to 
an implementer to add additional mandatory attributes. 
Mandatory Attributes 
Rule 
name 
 
 
Non Mandatory Attributes 
Rule 
@baseType 
 
@schemaLocation 
 
@type 
 
childCategory 
 
description 
 
entityCatalogItem 
 
isRoot 
 


Non Mandatory Attributes 
Rule 
lastUpdate 
 
lifecycleStatus 
 
parentId 
 
validFor 
 
version 
 
 
Usage Samples 
Here's an example of a request for creating a specific category. In this example the request only passes 
mandatory attributes. 
 
Request 
 
POST /tmf-api/entityCatalogManagement/v4/entityCategory 
Content-Type: application/json 
 
{ 
    "name": "Tosca Node Types", 
    "description": "A category to hold all available Tosca Node Types", 
    "version": "1.0", 
    "validFor": { 
        "startDateTime": "2020-08-25T00:00", 
        "endDateTime": "2023-11-24T00:00" 
    }, 
    "lifecycleStatus": "Active", 
    "isRoot": true, 
    "@type": "EntityCategory", 
    "@schemalLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityCategory.schema.json", 
    "@baseType": "Category" 
} 
 
 
 
Response 
 
201 
 
{ 
    "id": "2027", 
    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCategory/2027", 
    "name": "Tosca Node Types", 
    "description": "A category to hold all available Tosca Node Types", 
    "version": "1.0", 
    "validFor": { 
        "startDateTime": "2020-08-25T00:00", 
        "endDateTime": "2023-11-24T00:00" 
},


    "lifecycleStatus": "Active", 
    "lastUpdate": "2020-08-25T00:00", 
    "isRoot": true, 
    "parentId": "", 
    "entityCatalogItem": [], 
    "childCategory": [], 
    "@type": "EntityCategory", 
    "@schemalLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityCategory.schema.json", 
    "@baseType": "Category" 
} 
 
Patch entity category 
  PATCH /entityCategory/{id} 
Description 
This operation allows partial updates of an entity category entity. Support of json/merge 
(https://tools.ietf.org/html/rfc7386) is mandatory, support of json/patch 
(http://tools.ietf.org/html/rfc5789) is optional. 
 
Note: If the update operation yields to the creation of sub-resources or relationships, the same rules 
concerning mandatory sub-resource attributes and default value settings in the POST operation applies 
to the PATCH operation.  Hence these tables are not repeated here. 
Patchable and Non Patchable Attributes 
The tables below provide the list of patchable and non patchable attributes, including constraint rules on 
their usage. 
Patchable Attributes 
Rule 
childCategory 
 
description 
 
entityCatalogItem 
 
isRoot 
 
lifecycleStatus 
 
name 
 
parentId 
 
validFor 
 
version 
 
 
Non Patchable Attributes 
Rule 
id 
 
href 
 
lastUpdate 
 


Non Patchable Attributes 
Rule 
@type 
 
@schemaLocation 
 
@baseType 
 
 
Usage Samples 
Here's an example of a request for patching a category. In this example, a new version is set, together 
with validity period. 
 
Request 
 
PATCH /tmf-api/entityCatalogManagement/v4/entityCategory/2027 
Content-Type: application/merge-patch+json 
 
{ 
    "version": "2.0", 
    "validFor": { 
        "startDateTime": "2020-11-06T00:00", 
        "endDateTime": "2025-11-24T00:00" 
    }, 
    "childCategory": [ 
        { 
            "id": "2029", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCategory/2029", 
            "name": "SoftwareComponent", 
            "version": "1.0", 
            "@referredType": "EntityCategory", 
            "@type": "EntityCategoryRef", 
            "@schemalLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntityCategoryRef.schema.json", 
            "@baseType": "Category" 
        } 
    ] 
} 
 
 
 
Response 
 
200 
 
{ 
    "id": "2027", 
    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCategory/2027", 
    "name": "Tosca Node Types", 
    "description": "A category to hold all available Tosca Node Types", 
    "version": "2.0", 


        "startDateTime": "2020-11-06T00:00", 
        "endDateTime": "2025-11-24T00:00" 
    }, 
    "lifecycleStatus": "Active", 
    "lastUpdate": "2020-11-06T00:00", 
    "isRoot": true, 
    "parentId": "", 
    "entityCatalogItem": [], 
    "childCategory": [ 
        { 
            "id": "2029", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCategory/2029", 
            "name": "SoftwareComponent", 
            "version": "1.0", 
            "@referredType": "EntityCategory", 
            "@type": "EntityCategoryRef", 
            "@schemalLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntityCategoryRef.schema.json", 
            "@baseType": "" 
        } 
    ], 
    "@type": "EntityCategory", 
    "@schemalLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityCategory.schema.json", 
    "@baseType": "Category" 
} 
 
Delete entity category 
  DELETE /entityCategory/{id} 
Description 
This operation deletes an entity category entity. 
Usage Samples 
Here's an example of a request for deleting a category. 
 
Request 
 
DELETE /tmf-api/entityCatalogManagement/v4/entityCategory/2027 
 
 
 
Response 
 
204 
 


 
Operations on Entity Catalog Item 
List entity catalog items 
  GET /entityCatalogItem?fields=...&{filtering} 
Description 
This operation list entity catalog item entities. 
Attribute selection is enabled for all first level attributes. 
Filtering may be available depending on the compliance level supported by an implementation. 
 
Usage Samples 
Here's an example of a request for retrieving multiple entity offers. 
 
Request 
 
GET /tmf-api/entityCatalogManagement/v4/entityCatalogItem?version=1.0 
Accept: application/json 
 
 
 
Response 
 
200 
 
[ 
    { 
        "id": "6007", 
        "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCatalogItem/6007", 
        "name": "ProjectTemplate", 
        "description": "This object Offers provision of a project template", 
        "version": "1.0", 
        "validFor": { 
            "startDateTime": "2020-11-06T00:00", 
            "endDateTime": "2023-09-10T00:00" 
        }, 
        "lastUpdate": "2020-11-06T00:00", 
        "lifecycleStatus": "Active", 
        "category": [ 
            { 
"id" "6043"


                "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCategory/6043", 
                "version": "1.0", 
                "name": "Template", 
                "@referredType": "EntityCategory", 
                "@type": "EntityCategoryRef", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntityCategoryRef.schema.json", 
                "@baseType": "" 
            } 
        ], 
        "specification": { 
            "id": "6823", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/6823", 
            "version": "1.0", 
            "name": "Task-focused project Specification", 
            "@referredType": "EntitySpecificationRef", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntitySpecificationRef.schema.json", 
            "@baseType": "", 
            "@type": "EntitySpecificationRef" 
        }, 
        "@type": "EntityCatalogItem", 
        "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityCatalogItem.schema.json", 
        "@baseType": "" 
    }, 
    { 
        "id": "6277", 
        "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCatalogItem/6277", 
        "name": "Service Graph", 
        "description": "This object Offers provision of a service graph", 
        "version": "1.0", 
        "validFor": { 
            "startDateTime": "2020-11-24T00:00", 
            "endDateTime": "2025-09-10T00:00" 
        }, 
        "lastUpdate": "2020-11-24T00:00", 
        "lifecycleStatus": "Active", 
        "category": [ 
            { 
                "id": "6053", 
                "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCategory/6053", 
                "version": "1.0", 
                "name": "Graph", 
                "@referredType": "EntityCategory", 
                "@type": "EntityCategoryRef", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntityCategoryRef.schema.json", 
                "@baseType": "" 
            } 
        ], 
        "specification": { 
            "id": "6827", 


            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/6827", 
            "version": "1.0", 
            "name": "Service Graph Specification", 
            "@referredType": "EntitySpecification", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntitySpecificationRef.schema.json", 
            "@baseType": "", 
            "@type": "EntitySpecificationRef" 
        }, 
        "@type": "EntityCatalogItem", 
        "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityCatalogItem.schema.json", 
        "@baseType": "" 
    } 
] 
 
Retrieve entity catalog item 
  GET /entityCatalogItem/{id}?fields=...&{filtering} 
Description 
This operation retrieves an entity catalog item entity. 
Attribute selection is enabled for all first level attributes. 
Filtering on sub-resources may be available depending on the compliance level supported by an 
implementation. 
Usage Samples 
Here's an example of a request for retrieving a specific entity offer. 
 
Request 
 
GET /tmf-api/entityCatalogManagement/v4/entityCatalogItem/6007 
Accept: application/json 
 
 
 
Response 
 
200 
 
{ 
    "id": "6007", 
    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCatalogItem/6007", 
    "name": "ProjectTemplate", 
"description": "This object Offers provision of a project template"


    "version": "1.0", 
    "validFor": { 
        "startDateTime": "2020-11-06T00:00", 
        "endDateTime": "2023-09-10T00:00" 
    }, 
    "lastUpdate": "2020-11-06T00:00", 
    "lifecycleStatus": "Active", 
    "category": [ 
        { 
            "id": "6043", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCategory/6043", 
            "version": "1.0", 
            "name": "Template", 
            "@referredType": "EntityCategory", 
            "@type": "EntityCategoryRef", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntityCategoryRef.schema.json", 
            "@baseType": "" 
        } 
    ], 
    "specification": { 
        "id": "6823", 
        "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/6823", 
        "version": "1.0", 
        "name": "Task-focused project Specification", 
        "@referredType": "EntitySpecification", 
        "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntitySpecificationRef.schema.json", 
        "@baseType": "", 
        "@type": "EntitySpecificationRef" 
    }, 
    "@type": "EntityCatalogItem", 
    "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityCatalogItem.schema.json", 
    "@baseType": "" 
} 
 
Create entity catalog item 
  POST /entityCatalogItem 
Description 
This operation creates an entity catalog item entity. 
Mandatory and Non Mandatory Attributes 
The following tables provide the list of mandatory and non mandatory attributes when creating a 
EntityCatalogItem, including any possible rule conditions and applicable default values. Notice that it is 
up to an implementer to add additional mandatory attributes. 


Mandatory Attributes 
Rule 
name 
 
specification 
 
 
Non Mandatory Attributes 
Rule 
@baseType 
 
@schemaLocation 
 
@type 
 
category 
 
description 
 
lastUpdate 
 
lifecycleStatus 
 
validFor 
 
version 
 
 
Usage Samples 
Here's an example of a request for creating a specific entity offer. The request includes the entity 
specification and the category. 
 
Request 
 
POST /tmf-api/entityCatalogManagement/v4/entityCatalogItem 
Content-Type: application/json 
 
{ 
    "name": "ProjectTemplate", 
    "description": "This object Offers provision of a project template", 
    "version": "1.0", 
    "validFor": { 
        "startDateTime": "2020-11-06T00:00", 
        "endDateTime": "2023-09-10T00:00" 
    }, 
    "lifecycleStatus": "Active", 
    "category": [ 
        { 
            "id": "6043", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCategory/6043", 
            "version": "1.0", 
            "name": "Template", 
            "@referredType": "EntityCategory", 
            "@type": "EntityCategoryRef", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntityCategoryRef.schema.json" 
        } 
    ], 


        "id": "6823", 
        "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/6823", 
        "version": "1.0", 
        "name": "Task-focused project Specification", 
        "@referredType": "EntitySpecification", 
        "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntitySpecificationRef.schema.json", 
        "@type": "EntitySpecificationRef" 
    }, 
    "@type": "EntityCatalogItem", 
    "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityCatalogItem.schema.json" 
} 
 
 
 
Response 
 
201 
 
{ 
    "id": "6007", 
    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCatalogItem/6007", 
    "name": "ProjectTemplate", 
    "description": "This object Offers provision of a project template", 
    "version": "1.0", 
    "validFor": { 
        "startDateTime": "2020-11-06T00:00", 
        "endDateTime": "2023-09-10T00:00" 
    }, 
    "lastUpdate": "2020-11-06T00:00", 
    "lifecycleStatus": "Active", 
    "category": [ 
        { 
            "id": "6043", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCategory/6043", 
            "version": "1.0", 
            "name": "Template", 
            "@referredType": "EntityCategory", 
            "@type": "EntityCategoryRef", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntityCategoryRef.schema.json", 
            "@baseType": "" 
        } 
    ], 
    "specification": { 
        "id": "6823", 
        "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/6823", 
        "version": "1.0", 
        "name": "Task-focused project Specification", 
        "@referredType": "EntitySpecification", 
        "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntitySpecificationRef schema json"


        "@baseType": "", 
        "@type": "EntitySpecificationRef" 
    }, 
    "@type": "EntityCatalogItem", 
    "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityCatalogItem.schema.json", 
    "@baseType": "" 
} 
 
Patch entity catalog item 
  PATCH /entityCatalogItem/{id} 
Description 
This operation allows partial updates of an entity catalog item entity. Support of json/merge 
(https://tools.ietf.org/html/rfc7386) is mandatory, support of json/patch 
(http://tools.ietf.org/html/rfc5789) is optional. 
Note: If the update operation yields to the creation of sub-resources or relationships, the same rules 
concerning mandatory sub-resource attributes and default value settings in the POST operation applies 
to the PATCH operation.  Hence these tables are not repeated here. 
Patchable and Non Patchable Attributes 
The tables below provide the list of patchable and non patchable attributes, including constraint rules on 
their usage. 
Patchable Attributes 
Rule 
category 
 
description 
 
lifecycleStatus 
 
name 
 
specification 
 
validFor 
 
version 
 
 
Non Patchable Attributes 
Rule 
id 
 
href 
 
lastUpdate 
 
@type 
 
@schemaLocation 
 
@baseType 
 
 


Here's an example of a request for patching an entity offer. In this example, a new version is set, name 
and description are modified altogether with validity period. 
 
Request 
 
PATCH /tmf-api/entityCatalogManagement/v4/entityCatalogItem/6007 
Content-Type: application/merge-patch+json 
 
{ 
    "id": "6007", 
    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCatalogItem/6007", 
    "name": "Task-Based Project Template", 
    "description": "This object Offers provision of a Task-Based project template", 
    "version": "2.0", 
    "validFor": { 
        "startDateTime": "2020-12-05T00:00", 
        "endDateTime": "2023-09-10T00:00" 
    } 
} 
 
 
 
Response 
 
200 
 
{ 
    "id": "6007", 
    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCatalogItem/6007", 
    "name": "Task-Based Project Template", 
    "description": "This object Offers provision of a Task-Based project template", 
    "version": "2.0", 
    "validFor": { 
        "startDateTime": "2020-12-05T00:00", 
        "endDateTime": "2023-09-10T00:00" 
    }, 
    "lastUpdate": "2020-12-05T00:00", 
    "lifecycleStatus": "Active", 
    "category": [ 
        { 
            "id": "6043", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entityCategory/6043", 
            "version": "1.0", 
            "name": "Template", 
            "@referredType": "EntityCategory", 
            "@type": "EntityCategoryRef", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntityCategoryRef.schema.json", 
            "@baseType": "" 
}


    ], 
    "specification": { 
        "id": "6823", 
        "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/6823", 
        "version": "1.0", 
        "name": "Task-focused project Specification", 
        "@referredType": "EntitySpecification", 
        "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntitySpecificationRef.schema.json", 
        "@baseType": "", 
        "@type": "EntitySpecificationRef" 
    }, 
    "@type": "EntityCatalogItem", 
    "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityCatalogItem.schema.json", 
    "@baseType": "" 
} 
 
Delete entity catalog item 
  DELETE /entityCatalogItem/{id} 
Description 
This operation deletes an entity catalog item entity. 
Usage Samples 
Here's an example of a request for deleting an entity offer. 
 
Request 
 
DELETE /tmf-api/entityCatalogManagement/v4/entityCatalogItem/6007 
 
 
 
Response 
 
204 
 
 
Operations on Entity Specification 
List entity specifications 
  GET /entitySpecification?fields=...&{filtering} 


Description 
This operation list entity specification entities. 
Attribute selection is enabled for all first level attributes. 
Filtering may be available depending on the compliance level supported by an implementation. 
 
Usage Samples 
Here's an example of a request for retrieving multiple entity specifications. 
 
Request 
 
GET /tmf-api/entityCatalogManagement/v4/entitySpecification?targetEntitySchema.@type=ManagedEntity 
Accept: application/json 
 
 
 
Response 
 
200 
 
[ 
    { 
        "id": "6599", 
        "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/6599", 
        "name": "TOSCA Node Template", 
        "description": "This entity specification represents a Tosca Node template that describes the (software) 
components that are used to compose cloud applications", 
        "version": "2.0", 
        "validFor": { 
            "startDateTime": "2021-01-01T00:00", 
            "endDateTime": "2023-12-31T11:59:59" 
        }, 
        "lastUpdate": "2021-01-01T00:00", 
        "lifecycleStatus": "Active", 
        "isBundle": false, 
        "attachment": [ 
            { 
                "description": "This attachment gives a description of the this entity specification with examples", 
                "href": "https://mycsp.com:8080/tmf-api/documentManagement/v4/attachment/6991", 
                "id": "6991", 
                "url": "https://mycsp.com:7070/docloader?docnum=3534536", 
                "@attachmentType": "Document", 
                "content": "", 
                "mimeType": ".pdf", 
"validFor": {


                    "startDateTime": "2020-12-05T00:00", 
                    "endDateTime": "2021-03-25T00:00" 
                }, 
                "size": { 
                    "amount": 1741, 
                    "units": "KB" 
                }, 
                "name": "TOSCA Node Template", 
                "@type": "Attachment", 
                "@baseType": "", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/Attachment.schema.json" 
            } 
        ], 
        "specCharacteristic": [ 
            { 
                "name": "Platform", 
                "id": "4441", 
                "description": "This characteristic describes the platform of the node", 
                "valueType": "string", 
                "configurable": true, 
                "validFor": { 
                    "startDateTime": "2020-12-05T00:00", 
                    "endDateTime": "2023-12-31T11:59:59" 
                }, 
                "@valueSchemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/StringCharacteristic.schema.json", 
                "minCardinality": 0, 
                "maxCardinality": 1, 
                "isUnique": true, 
                "regex": "", 
                "extensible": false, 
                "characteristicValueSpecification": [ 
                    { 
                        "valueType": "string", 
                        "isDefault": true, 
                        "value": "Windows", 
                        "validFor": { 
                            "startDateTime": "2020-12-05T00:00", 
                            "endDateTime": "2023-12-31T11:59:59" 
                        }, 
                        "regex": "", 
                        "valueFrom": "", 
                        "valueTo": "", 
                        "unitOfMeasure": "", 
                        "rangeInterval": "open", 
                        "@type": "CharacteristicValueSpecification", 
                        "@baseType": "", 
                        "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/CharacteristicValueSpecification.schema.json" 
                    } 
                ], 
                "charSpecRelationship": [], 


                "@type": "SpecCharacteristic", 
                "@baseType": "", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/SpecCharacteristic.schema.json" 
            }, 
            { 
                "name": "copy", 
                "id": "4447", 
                "description": "The optional (symbolic) name of another node template to copy into (all keynames and 
values) and use as a basis for this node template", 
                "valueType": "string", 
                "configurable": true, 
                "validFor": { 
                    "startDateTime": "2021-01-01T00:00", 
                    "endDateTime": "2023-12-31T11:59:59" 
                }, 
                "@valueSchemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/StringCharacteristic.schema.json", 
                "minCardinality": 0, 
                "maxCardinality": 1, 
                "isUnique": true, 
                "regex": "", 
                "extensible": false, 
                "characteristicValueSpecification": [ 
                    { 
                        "valueType": "string", 
                        "isDefault": true, 
                        "value": "", 
                        "validFor": { 
                            "startDateTime": "2021-01-01T00:00", 
                            "endDateTime": "2023-12-31T11:59:59" 
                        }, 
                        "regex": "", 
                        "valueFrom": "", 
                        "valueTo": "", 
                        "unitOfMeasure": "", 
                        "rangeInterval": "open", 
                        "@type": "CharacteristicValueSpecification", 
                        "@baseType": "", 
                        "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/CharacteristicValueSpecification.schema.json" 
                    } 
                ], 
                "charSpecRelationship": [], 
                "@type": "SpecCharacteristic", 
                "@baseType": "", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/SpecCharacteristic.schema.json" 
            } 
        ], 
        "relatedParty": [ 
            { 


                "href": "https://mycsp.com:8080/tmf-api/partyManagement/v4/individual/3001", 
                "id": "3001", 
                "name": "charles aznavour", 
                "role": "Creator", 
                "@referredType": "PartyRole", 
                "@type": "RelatedParty", 
                "@baseType": "", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/EngagedParty/RelatedParty.schema.json" 
            } 
        ], 
        "targetEntitySchema": { 
            "@type": "ManagedEntity", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ManagedEntity.schema.json" 
        }, 
        "constraint": [ 
            { 
                "href": "https://mycsp.com:8080/tmf-api/policyManagement/v4/policy/3779", 
                "id": "3779", 
                "name": "Node Filter", 
                "version": "1.0", 
                "@referredType": "Constraint", 
                "@type": "ConstraintRef", 
                "@baseType": "", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ConstraintRef.schema.json" 
            } 
        ], 
        "entitySpecRelationship": [ 
            { 
                "relationshipType": "Includes", 
                "role": "nodeType", 
                "id": "8039", 
                "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8039", 
                "name": "Node Type Capability Definition", 
                "validFor": { 
                    "startDateTime": "2020-12-05T00:00", 
                    "endDateTime": "2023-12-31T11:59:59" 
                }, 
                "associationSpec": {}, 
                "@referredType": "CapabilitySpecification", 
                "@type": "EntitySpecRelationship", 
                "@baseType": "", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntitySpecRelationship.schema.json" 
            }, 
            { 
                "relationshipType": "Includes", 
                "role": "nodeType", 
                "id": "8053", 
                "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8053", 
                "name": "Node Type Requirement Definition", 
                "validFor": { 


                    "startDateTime": "2020-12-05T00:00", 
                    "endDateTime": "2023-12-31T11:59:59" 
                }, 
                "associationSpec": {}, 
                "@referredType": "RequirementSpecification", 
                "@type": "EntitySpecRelationship", 
                "@baseType": "", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntitySpecRelationship.schema.json" 
            }, 
            { 
                "relationshipType": "Includes", 
                "role": "nodeType", 
                "id": "8059", 
                "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8059", 
                "name": "Node Type Interface Definition", 
                "validFor": { 
                    "startDateTime": "2020-12-05T00:00", 
                    "endDateTime": "2023-12-31T11:59:59" 
                }, 
                "associationSpec": {}, 
                "@referredType": "InterfaceSpecification", 
                "@type": "EntitySpecRelationship", 
                "@baseType": "", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntitySpecRelationship.schema.json" 
            }, 
            { 
                "relationshipType": "Includes", 
                "role": "nodeType", 
                "id": "8069", 
                "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8069", 
                "name": "Node Type Artifact Definition", 
                "validFor": { 
                    "startDateTime": "2020-12-05T00:00", 
                    "endDateTime": "2023-12-31T11:59:59" 
                }, 
                "associationSpec": {}, 
                "@referredType": "ArtifactSpecification", 
                "@type": "EntitySpecRelationship", 
                "@baseType": "", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntitySpecRelationship.schema.json" 
            } 
        ], 
        "@type": "ToscaNodeTemplate", 
        "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/ToscaNodeTemplate.schema.json", 
        "@baseType": "EntitySpecification" 
    }, 
    { 
        "id": "8039", 


        "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8039", 
        "name": "Tosca Capability Definition", 
        "description": "This entity specification represents a Tosca Capability Definition that describes a typed set 
of data that a node can expose and is used to describe a relevant feature of the component described by the 
node.", 
        "version": "1.0", 
        "validFor": { 
            "startDateTime": "2020-12-05T00:00", 
            "endDateTime": "2023-12-31T11:59:59" 
        }, 
        "lastUpdate": "2020-12-05T00:00", 
        "lifecycleStatus": "Active", 
        "isBundle": false, 
        "attachment": [], 
        "specCharacteristic": [ 
            { 
                "name": "valid_source_types", 
                "id": "4111", 
                "description": "This characteristic represents the optional list of one or more names of Node Templates 
that the Capability definition supports as valid sources for a successful relationship to be established to it", 
                "valueType": "Array", 
                "configurable": true, 
                "validFor": { 
                    "startDateTime": "2020-12-05T00:00", 
                    "endDateTime": "2023-12-31T11:59:59" 
                }, 
                "@valueSchemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/StringArrayCharacteristic.schema.json", 
                "minCardinality": 0, 
                "maxCardinality": 7, 
                "isUnique": true, 
                "regex": "", 
                "extensible": true, 
                "characteristicValueSpecification": [ 
                    { 
                        "valueType": "string", 
                        "isDefault": true, 
                        "value": "", 
                        "validFor": { 
                            "startDateTime": "2020-12-05T00:00", 
                            "endDateTime": "2023-12-31T11:59:59" 
                        }, 
                        "regex": "", 
                        "valueFrom": "", 
                        "valueTo": "", 
                        "unitOfMeasure": "", 
                        "rangeInterval": "open", 
                        "@type": "CharacteristicValueSpecification", 
                        "@baseType": "", 
                        "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/CharacteristicValueSpecification.schema.json" 
                    } 


                ], 
                "charSpecRelationship": [], 
                "@type": "SpecCharacteristic", 
                "@baseType": "", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/SpecCharacteristic.schema.json" 
            }, 
            { 
                "name": "occurrences", 
                "id": "4211", 
                "description": "This characteristic represents the optional minimum and maximum occurrences for the 
capability", 
                "valueType": "Integer", 
                "configurable": false, 
                "validFor": { 
                    "startDateTime": "2020-12-05T00:00", 
                    "endDateTime": "2023-12-31T11:59:59" 
                }, 
                "@valueSchemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/IntegerCharacteristic.schema.json", 
                "minCardinality": 1, 
                "maxCardinality": 1, 
                "isUnique": true, 
                "regex": "", 
                "extensible": false, 
                "characteristicValueSpecification": [ 
                    { 
                        "valueType": "Integer", 
                        "isDefault": true, 
                        "value": 1, 
                        "validFor": { 
                            "startDateTime": "2020-12-05T00:00", 
                            "endDateTime": "2023-12-31T11:59:59" 
                        }, 
                        "regex": "[0-8]", 
                        "valueFrom": "", 
                        "valueTo": "", 
                        "unitOfMeasure": "", 
                        "rangeInterval": "close", 
                        "@type": "CharacteristicValueSpecification", 
                        "@baseType": "", 
                        "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/CharacteristicValueSpecification.schema.json" 
                    } 
                ], 
                "charSpecRelationship": [], 
                "@type": "SpecCharacteristic", 
                "@baseType": "", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/SpecCharacteristic.schema.json" 
            } 
        ], 


        "relatedParty": [ 
            { 
                "href": "https://mycsp.com:8080/tmf-api/partyManagement/v4/individual/3001", 
                "id": "3001", 
                "name": "charles aznavour", 
                "role": "Creator", 
                "@referredType": "PartyRole", 
                "@type": "RelatedParty", 
                "@baseType": "", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/EngagedParty/RelatedParty.schema.json" 
            } 
        ], 
        "targetEntitySchema": { 
            "@type": "ManagedEntity", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ManagedEntity.schema.json" 
        }, 
        "constraint": [ 
            { 
                "href": "https://mycsp.com:8080/tmf-api/policyManagement/v4/policy/3793", 
                "id": "3793", 
                "name": "Refinement Rule", 
                "version": "1.0", 
                "@referredType": "Constraint", 
                "@type": "ConstraintRef", 
                "@baseType": "", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ConstraintRef.schema.json" 
            } 
        ], 
        "entitySpecRelationship": [], 
        "@type": "CapabilitySpecification", 
        "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/CapabilitySpecification.schema.json", 
        "@baseType": "EntitySpecification" 
    } 
] 
 
Retrieve entity specification 
  GET /entitySpecification/{id}?fields=...&{filtering} 
Description 
This operation retrieves an entity specification entity. 
Attribute selection is enabled for all first level attributes. 
Filtering on sub-resources may be available depending on the compliance level supported by an 
implementation. 


 
Usage Samples 
Here's an example of a request for retrieving a specific specification. 
 
Request 
 
GET /tmf-api/entityCatalogManagement/v4/entitySpecification/6599 
Accept: application/json 
 
 
 
Response 
 
200 
 
{ 
    "id": "6599", 
    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/6599", 
    "name": "TOSCA Node Template", 
    "description": "This entity specification represents a Tosca Node template that describes the (software) 
components that are used to compose cloud applications", 
    "version": "1.0", 
    "validFor": { 
        "startDateTime": "2020-12-05T00:00", 
        "endDateTime": "2023-12-31T11:59:59" 
    }, 
    "lastUpdate": "2020-12-05T00:00", 
    "lifecycleStatus": "Active", 
    "isBundle": false, 
    "attachment": [ 
        { 
            "description": "This attachment gives a description of the this entity specification with examples", 
            "href": "https://mycsp.com:8080/tmf-api/documentManagement/v4/attachment/6991", 
            "id": "6991", 
            "url": "https://mycsp.com:7070/docloader?docnum=3534536", 
            "@attachmentType": "Document", 
            "content": "", 
            "mimeType": ".pdf", 
            "validFor": { 
                "startDateTime": "2020-12-05T00:00", 
                "endDateTime": "2021-03-25T00:00" 
            }, 
            "size": { 
                "amount": 1741, 
                "units": "KB" 
            }, 
            "name": "TOSCA Node Template", 
            "@type": "Attachment", 


            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/Attachment.schema.json" 
        } 
    ], 
    "specCharacteristic": [ 
        { 
            "name": "Platform", 
            "id": "4441", 
            "description": "This characteristic describes the platform of the node", 
            "valueType": "string", 
            "configurable": true, 
            "validFor": { 
                "startDateTime": "2020-12-05T00:00", 
                "endDateTime": "2023-12-31T11:59:59" 
            }, 
            "@valueSchemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/StringCharacteristic.schema.json", 
            "minCardinality": 0, 
            "maxCardinality": 1, 
            "isUnique": true, 
            "regex": "", 
            "extensible": false, 
            "characteristicValueSpecification": [ 
                { 
                    "valueType": "string", 
                    "isDefault": true, 
                    "value": "Windows", 
                    "validFor": { 
                        "startDateTime": "2020-12-05T00:00", 
                        "endDateTime": "2023-12-31T11:59:59" 
                    }, 
                    "regex": "", 
                    "valueFrom": "", 
                    "valueTo": "", 
                    "unitOfMeasure": "", 
                    "rangeInterval": "open", 
                    "@type": "CharacteristicValueSpecification", 
                    "@baseType": "", 
                    "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/CharacteristicValueSpecification.schema.json" 
                } 
            ], 
            "charSpecRelationship": [], 
            "@type": "SpecCharacteristic", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/SpecCharacteristic.schema.json" 
        } 
    ], 
    "relatedParty": [ 
        { 
            "href": "https://mycsp.com:8080/tmf-api/partyManagement/v4/individual/3001", 


            "id": "3001", 
            "name": "charles aznavour", 
            "role": "Creator", 
            "@referredType": "PartyRole", 
            "@type": "RelatedParty", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/EngagedParty/RelatedParty.schema.json" 
        } 
    ], 
    "targetEntitySchema": { 
        "@type": "ManagedEntity", 
        "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ManagedEntity.schema.json" 
    }, 
    "constraint": [ 
        { 
            "href": "https://mycsp.com:8080/tmf-api/policyManagement/v4/policy/3779", 
            "id": "3779", 
            "name": "Node Filter", 
            "version": "1.0", 
            "@referredType": "Constraint", 
            "@type": "ConstraintRef", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ConstraintRef.schema.json" 
        } 
    ], 
    "entitySpecRelationship": [ 
        { 
            "relationshipType": "Includes", 
            "role": "nodeType", 
            "id": "8039", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8039", 
            "name": "Node Type Capability Definition", 
            "validFor": { 
                "startDateTime": "2020-12-05T00:00", 
                "endDateTime": "2023-12-31T11:59:59" 
            }, 
            "associationSpec": {}, 
            "@referredType": "CapabilitySpecification", 
            "@type": "EntitySpecRelationship", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntitySpecRelationship.schema.json" 
        }, 
        { 
            "relationshipType": "Includes", 
            "role": "nodeType", 
            "id": "8053", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8053", 
            "name": "Node Type Requirement Definition", 
            "validFor": { 
                "startDateTime": "2020-12-05T00:00", 


                "endDateTime": "2023-12-31T11:59:59" 
            }, 
            "associationSpec": {}, 
            "@referredType": "RequirementSpecification", 
            "@type": "EntitySpecRelationship", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntitySpecRelationship.schema.json" 
        }, 
        { 
            "relationshipType": "Includes", 
            "role": "nodeType", 
            "id": "8059", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8059", 
            "name": "Node Type Interface Definition", 
            "validFor": { 
                "startDateTime": "2020-12-05T00:00", 
                "endDateTime": "2023-12-31T11:59:59" 
            }, 
            "associationSpec": {}, 
            "@referredType": "InterfaceSpecification", 
            "@type": "EntitySpecRelationship", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntitySpecRelationship.schema.json" 
        }, 
        { 
            "relationshipType": "Includes", 
            "role": "nodeType", 
            "id": "8069", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8069", 
            "name": "Node Type Artifact Definition", 
            "validFor": { 
                "startDateTime": "2020-12-05T00:00", 
                "endDateTime": "2023-12-31T11:59:59" 
            }, 
            "associationSpec": {}, 
            "@referredType": "ArtifactSpecification", 
            "@type": "EntitySpecRelationship", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntitySpecRelationship.schema.json" 
        } 
    ], 
    "@type": "ToscaNodeTemplate", 
    "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/ToscaNodeTemplate.schema.json", 
    "@baseType": "EntitySpecification" 
} 
 
 
 


Create entity specification 
  POST /entitySpecification 
Description 
This operation creates an entity specification entity. 
Mandatory and Non Mandatory Attributes 
The following tables provide the list of mandatory and non mandatory attributes when creating a 
EntitySpecification, including any possible rule conditions and applicable default values. Notice that it is 
up to an implementer to add additional mandatory attributes. 
Mandatory Attributes 
Rule 
name 
 
@type 
 
 
Non Mandatory Attributes 
Rule 
@baseType 
 
@schemaLocation 
 
attachment 
 
constraint 
 
description 
 
entitySpecRelationship 
 
isBundle 
 
lastUpdate 
 
lifecycleStatus 
 
relatedParty 
 
specCharacteristic 
 
targetEntitySchema 
 
validFor 
 
version 
 
 
Additional Rules 
The following table provides additional rules indicating mandatory fields in sub-resources or relationships 
when creating a EntitySpecification resource. 
Context 
Mandatory Sub-Attributes 
entitySpecRelationship 
relationshipType 
 
 
 


 
Usage Samples 
Here's an example of a request for creating a specification. 
 
Request 
 
POST /tmf-api/entityCatalogManagement/v4/entitySpecification 
Content-Type: application/json 
 
{ 
    "name": "TOSCA Node Template", 
    "description": "This entity specification represents a Tosca Node template that describes the (software) 
components that are used to compose cloud applications", 
    "version": "1.0", 
    "validFor": { 
        "startDateTime": "2020-12-05T00:00", 
        "endDateTime": "2023-12-31T11:59:59" 
    }, 
    "lastUpdate": "2020-12-05T00:00", 
    "lifecycleStatus": "Active", 
    "isBundle": false, 
    "attachment": [ 
        { 
            "description": "This attachment gives a description of the this entity specification with examples", 
            "href": "https://mycsp.com:8080/tmf-api/documentManagement/v4/attachment/6991", 
            "id": "6991", 
            "url": "https://mycsp.com:7070/docloader?docnum=3534536", 
            "@attachmentType": "Document", 
            "mimeType": ".pdf", 
            "validFor": { 
                "startDateTime": "2020-12-05T00:00", 
                "endDateTime": "2021-03-25T00:00" 
            }, 
            "size": { 
                "amount": 1741, 
                "units": "KB" 
            }, 
            "name": "TOSCA Node Template", 
            "@type": "Attachment", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/Attachment.schema.json" 
        } 
    ], 
    "specCharacteristic": [ 
        { 
            "name": "Platform", 
            "id": "4441", 
            "description": "This characteristic describes the platform of the node", 
            "valueType": "string", 
"
fi
bl " t


            "validFor": { 
                "startDateTime": "2020-12-05T00:00", 
                "endDateTime": "2023-12-31T11:59:59" 
            }, 
            "@valueSchemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/StringCharacteristic.schema.json", 
            "minCardinality": 0, 
            "maxCardinality": 1, 
            "isUnique": true, 
            "extensible": false, 
            "characteristicValueSpecification": [ 
                { 
                    "valueType": "string", 
                    "isDefault": true, 
                    "value": "Windows", 
                    "validFor": { 
                        "startDateTime": "2020-12-05T00:00", 
                        "endDateTime": "2023-12-31T11:59:59" 
                    }, 
                    "rangeInterval": "open", 
                    "@type": "CharacteristicValueSpecification", 
                    "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/CharacteristicValueSpecification.schema.json" 
                } 
            ], 
            "charSpecRelationship": [], 
            "@type": "SpecCharacteristic", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/SpecCharacteristic.schema.json" 
        } 
    ], 
    "relatedParty": [ 
        { 
            "href": "https://mycsp.com:8080/tmf-api/partyManagement/v4/individual/3001", 
            "id": "3001", 
            "name": "charles aznavour", 
            "role": "Creator", 
            "@referredType": "PartyRole", 
            "@type": "RelatedParty", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/EngagedParty/RelatedParty.schema.json" 
        } 
    ], 
    "targetEntitySchema": { 
        "@type": "ManagedEntity", 
        "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ManagedEntity.schema.json" 
    }, 
    "constraint": [ 
        { 
            "href": "https://mycsp.com:8080/tmf-api/policyManagement/v4/policy/3779", 
            "id": "3779", 
            "name": "Node Filter", 


            "version": "1.0", 
            "@referredType": "Constraint", 
            "@type": "ConstraintRef", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ConstraintRef.schema.json" 
        } 
    ], 
    "entitySpecRelationship": [ 
        { 
            "relationshipType": "Includes", 
            "role": "nodeType", 
            "id": "8039", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8039", 
            "name": "Node Type Capability Definition", 
            "validFor": { 
                "startDateTime": "2020-12-05T00:00", 
                "endDateTime": "2023-12-31T11:59:59" 
            }, 
            "associationSpec": {}, 
            "@referredType": "CapabilitySpecification", 
            "@type": "EntitySpecRelationship", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntitySpecRelationship.schema.json" 
        }, 
        { 
            "relationshipType": "Includes", 
            "role": "nodeType", 
            "id": "8053", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8053", 
            "name": "Node Type Requirement Definition", 
            "validFor": { 
                "startDateTime": "2020-12-05T00:00", 
                "endDateTime": "2023-12-31T11:59:59" 
            }, 
            "associationSpec": {}, 
            "@referredType": "RequirementSpecification", 
            "@type": "EntitySpecRelationship", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntitySpecRelationship.schema.json" 
        }, 
        { 
            "relationshipType": "Includes", 
            "role": "nodeType", 
            "id": "8059", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8059", 
            "name": "Node Type Interface Definition", 
            "validFor": { 
                "startDateTime": "2020-12-05T00:00", 
                "endDateTime": "2023-12-31T11:59:59" 
            }, 
            "associationSpec": {}, 
            "@referredType": "InterfaceSpecification", 
            "@type": "EntitySpecRelationship", 


            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntitySpecRelationship.schema.json" 
        }, 
        { 
            "relationshipType": "Includes", 
            "role": "nodeType", 
            "id": "8069", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8069", 
            "name": "Node Type Artifact Definition", 
            "validFor": { 
                "startDateTime": "2020-12-05T00:00", 
                "endDateTime": "2023-12-31T11:59:59" 
            }, 
            "associationSpec": {}, 
            "@referredType": "ArtifactSpecification", 
            "@type": "EntitySpecRelationship", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntitySpecRelationship.schema.json" 
        } 
    ], 
    "@type": "ToscaNodeTemplate", 
    "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/ToscaNodeTemplate.schema.json", 
    "@baseType": "EntitySpecification" 
} 
 
 
 
Response 
 
201 
 
{ 
    "id": "6599", 
    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/6599", 
    "name": "TOSCA Node Template", 
    "description": "This entity specification represents a Tosca Node template that describes the (software) 
components that are used to compose cloud applications", 
    "version": "1.0", 
    "validFor": { 
        "startDateTime": "2020-12-05T00:00", 
        "endDateTime": "2023-12-31T11:59:59" 
    }, 
    "lastUpdate": "2020-12-05T00:00", 
    "lifecycleStatus": "Active", 
    "isBundle": false, 
    "attachment": [ 
        { 
            "description": "This attachment gives a description of the this entity specification with examples", 
            "href": "https://mycsp.com:8080/tmf-api/documentManagement/v4/attachment/6991", 
            "id": "6991", 
"url": "https://mycsp com:7070/docloader?docnum=3534536"


            "@attachmentType": "Document", 
            "content": "", 
            "mimeType": ".pdf", 
            "validFor": { 
                "startDateTime": "2020-12-05T00:00", 
                "endDateTime": "2021-03-25T00:00" 
            }, 
            "size": { 
                "amount": 1741, 
                "units": "KB" 
            }, 
            "name": "TOSCA Node Template", 
            "@type": "Attachment", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/Attachment.schema.json" 
        } 
    ], 
    "specCharacteristic": [ 
        { 
            "name": "Platform", 
            "id": "4441", 
            "description": "This characteristic describes the platform of the node", 
            "valueType": "string", 
            "configurable": true, 
            "validFor": { 
                "startDateTime": "2020-12-05T00:00", 
                "endDateTime": "2023-12-31T11:59:59" 
            }, 
            "@valueSchemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/StringCharacteristic.schema.json", 
            "minCardinality": 0, 
            "maxCardinality": 1, 
            "isUnique": true, 
            "regex": "", 
            "extensible": false, 
            "characteristicValueSpecification": [ 
                { 
                    "valueType": "string", 
                    "isDefault": true, 
                    "value": "Windows", 
                    "validFor": { 
                        "startDateTime": "2020-12-05T00:00", 
                        "endDateTime": "2023-12-31T11:59:59" 
                    }, 
                    "regex": "", 
                    "valueFrom": "", 
                    "valueTo": "", 
                    "unitOfMeasure": "", 
                    "rangeInterval": "open", 
                    "@type": "CharacteristicValueSpecification", 
                    "@baseType": "", 
                    "@schemaLocation": "https://mycsp.com:8080/tmf-


api/schema/Common/CharacteristicValueSpecification.schema.json" 
                } 
            ], 
            "charSpecRelationship": [], 
            "@type": "SpecCharacteristic", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/SpecCharacteristic.schema.json" 
        } 
    ], 
    "relatedParty": [ 
        { 
            "href": "https://mycsp.com:8080/tmf-api/partyManagement/v4/individual/3001", 
            "id": "3001", 
            "name": "charles aznavour", 
            "role": "Creator", 
            "@referredType": "PartyRole", 
            "@type": "RelatedParty", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/EngagedParty/RelatedParty.schema.json" 
        } 
    ], 
    "targetEntitySchema": { 
        "@type": "ManagedEntity", 
        "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ManagedEntity.schema.json" 
    }, 
    "constraint": [ 
        { 
            "href": "https://mycsp.com:8080/tmf-api/policyManagement/v4/policy/3779", 
            "id": "3779", 
            "name": "Node Filter", 
            "version": "1.0", 
            "@referredType": "Constraint", 
            "@type": "ConstraintRef", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ConstraintRef.schema.json" 
        } 
    ], 
    "entitySpecRelationship": [ 
        { 
            "relationshipType": "Includes", 
            "role": "nodeType", 
            "id": "8039", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8039", 
            "name": "Node Type Capability Definition", 
            "validFor": { 
                "startDateTime": "2020-12-05T00:00", 
                "endDateTime": "2023-12-31T11:59:59" 
            }, 
            "associationSpec": {}, 
            "@referredType": "CapabilitySpecification", 


            "@type": "EntitySpecRelationship", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntitySpecRelationship.schema.json" 
        }, 
        { 
            "relationshipType": "Includes", 
            "role": "nodeType", 
            "id": "8053", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8053", 
            "name": "Node Type Requirement Definition", 
            "validFor": { 
                "startDateTime": "2020-12-05T00:00", 
                "endDateTime": "2023-12-31T11:59:59" 
            }, 
            "associationSpec": {}, 
            "@referredType": "RequirementSpecification", 
            "@type": "EntitySpecRelationship", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntitySpecRelationship.schema.json" 
        }, 
        { 
            "relationshipType": "Includes", 
            "role": "nodeType", 
            "id": "8059", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8059", 
            "name": "Node Type Interface Definition", 
            "validFor": { 
                "startDateTime": "2020-12-05T00:00", 
                "endDateTime": "2023-12-31T11:59:59" 
            }, 
            "associationSpec": {}, 
            "@referredType": "InterfaceSpecification", 
            "@type": "EntitySpecRelationship", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntitySpecRelationship.schema.json" 
        }, 
        { 
            "relationshipType": "Includes", 
            "role": "nodeType", 
            "id": "8069", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8069", 
            "name": "Node Type Artifact Definition", 
            "validFor": { 
                "startDateTime": "2020-12-05T00:00", 
                "endDateTime": "2023-12-31T11:59:59" 
            }, 
            "associationSpec": {}, 
            "@referredType": "ArtifactSpecification", 
            "@type": "EntitySpecRelationship", 


            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntitySpecRelationship.schema.json" 
        } 
    ], 
    "@type": "ToscaNodeTemplate", 
    "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/ToscaNodeTemplate.schema.json", 
    "@baseType": "EntitySpecification" 
} 
 
Patch entity specification 
  PATCH /entitySpecification/{id} 
Description 
This operation allows partial updates of an entity specification entity. Support of json/merge 
(https://tools.ietf.org/html/rfc7386) is mandatory, support of json/patch 
(http://tools.ietf.org/html/rfc5789) is optional. 
 
Note: If the update operation yields to the creation of sub-resources or relationships, the same rules 
concerning mandatory sub-resource attributes and default value settings in the POST operation applies 
to the PATCH operation.  Hence these tables are not repeated here. 
Patchable and Non Patchable Attributes 
The tables below provide the list of patchable and non patchable attributes, including constraint rules on 
their usage. 
Patchable Attributes 
Rule 
attachment 
 
constraint 
 
description 
 
entitySpecRelationship 
 
isBundle 
 
lifecycleStatus 
 
name 
 
relatedParty 
 
specCharacteristic 
 
targetEntitySchema 
 
validFor 
 
version 
 
 
 
 


 
Non Patchable Attributes 
Rule 
id 
 
href 
 
lastUpdate 
 
@type 
 
@schemaLocation 
 
@baseType 
 
 
Usage Samples 
Here's an example of a request for patching a specification. In this example, a new version is set, 
together with validity period and a new characteristic. 
 
Request 
 
PATCH /tmf-api/entityCatalogManagement/v4/entitySpecification/6599 
Content-Type: application/merge-patch+json 
 
{ 
    "version": "2.0", 
    "validFor": { 
        "startDateTime": "2021-01-01T00:00", 
        "endDateTime": "2023-12-31T11:59:59" 
    }, 
    "specCharacteristic": [ 
        { 
            "name": "Platform", 
            "id": "4441", 
            "description": "This characteristic describes the platform of the node", 
            "valueType": "string", 
            "configurable": true, 
            "validFor": { 
                "startDateTime": "2020-12-05T00:00", 
                "endDateTime": "2023-12-31T11:59:59" 
            }, 
            "@valueSchemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/StringCharacteristic.schema.json", 
            "minCardinality": 0, 
            "maxCardinality": 1, 
            "isUnique": true, 
            "extensible": false, 
            "characteristicValueSpecification": [ 
                { 
                    "valueType": "string", 
                    "isDefault": true, 
                    "value": "Windows", 


                        "startDateTime": "2020-12-05T00:00", 
                        "endDateTime": "2023-12-31T11:59:59" 
                    }, 
                    "rangeInterval": "open", 
                    "@type": "CharacteristicValueSpecification", 
                    "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/CharacteristicValueSpecification.schema.json" 
                } 
            ], 
            "@type": "SpecCharacteristic", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/SpecCharacteristic.schema.json" 
        }, 
        { 
            "name": "copy", 
            "id": "4447", 
            "description": "The optional (symbolic) name of another node template to copy into (all keynames and 
values) and use as a basis for this node template", 
            "valueType": "string", 
            "configurable": true, 
            "validFor": { 
                "startDateTime": "2021-01-01T00:00", 
                "endDateTime": "2023-12-31T11:59:59" 
            }, 
            "@valueSchemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/StringCharacteristic.schema.json", 
            "minCardinality": 0, 
            "maxCardinality": 1, 
            "isUnique": true, 
            "extensible": false, 
            "characteristicValueSpecification": [ 
                { 
                    "valueType": "string", 
                    "isDefault": true, 
                    "value": "", 
                    "validFor": { 
                        "startDateTime": "2021-01-01T00:00", 
                        "endDateTime": "2023-12-31T11:59:59" 
                    }, 
                    "rangeInterval": "open", 
                    "@type": "CharacteristicValueSpecification", 
                    "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/CharacteristicValueSpecification.schema.json" 
                } 
            ], 
            "@type": "SpecCharacteristic", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/SpecCharacteristic.schema.json" 
        } 
    ] 
} 
 


 
 
Response 
 
200 
 
{ 
    "id": "6599", 
    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/6599", 
    "name": "TOSCA Node Template", 
    "description": "This entity specification represents a Tosca Node template that describes the (software) 
components that are used to compose cloud applications", 
    "version": "2.0", 
    "validFor": { 
        "startDateTime": "2021-01-01T00:00", 
        "endDateTime": "2023-12-31T11:59:59" 
    }, 
    "lastUpdate": "2021-01-01T00:00", 
    "lifecycleStatus": "Active", 
    "isBundle": false, 
    "attachment": [ 
        { 
            "description": "This attachment gives a description of the this entity specification with examples", 
            "href": "https://mycsp.com:8080/tmf-api/documentManagement/v4/attachment/6991", 
            "id": "6991", 
            "url": "https://mycsp.com:7070/docloader?docnum=3534536", 
            "@attachmentType": "Document", 
            "content": "", 
            "mimeType": ".pdf", 
            "validFor": { 
                "startDateTime": "2020-12-05T00:00", 
                "endDateTime": "2021-03-25T00:00" 
            }, 
            "size": { 
                "amount": 1741, 
                "units": "KB" 
            }, 
            "name": "TOSCA Node Template", 
            "@type": "Attachment", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/Attachment.schema.json" 
        } 
    ], 
    "specCharacteristic": [ 
        { 
            "name": "Platform", 
            "id": "4441", 
            "description": "This characteristic describes the platform of the node", 
            "valueType": "string", 
            "configurable": true, 
            "validFor": { 
"startDateTime": "2020 12 05T00:00"


                "endDateTime": "2023-12-31T11:59:59" 
            }, 
            "@valueSchemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/StringCharacteristic.schema.json", 
            "minCardinality": 0, 
            "maxCardinality": 1, 
            "isUnique": true, 
            "regex": "", 
            "extensible": false, 
            "characteristicValueSpecification": [ 
                { 
                    "valueType": "string", 
                    "isDefault": true, 
                    "value": "Windows", 
                    "validFor": { 
                        "startDateTime": "2020-12-05T00:00", 
                        "endDateTime": "2023-12-31T11:59:59" 
                    }, 
                    "regex": "", 
                    "valueFrom": "", 
                    "valueTo": "", 
                    "unitOfMeasure": "", 
                    "rangeInterval": "open", 
                    "@type": "CharacteristicValueSpecification", 
                    "@baseType": "", 
                    "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/CharacteristicValueSpecification.schema.json" 
                } 
            ], 
            "charSpecRelationship": [], 
            "@type": "SpecCharacteristic", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/SpecCharacteristic.schema.json" 
        }, 
        { 
            "name": "copy", 
            "id": "4447", 
            "description": "The optional (symbolic) name of another node template to copy into (all keynames and 
values) and use as a basis for this node template", 
            "valueType": "string", 
            "configurable": true, 
            "validFor": { 
                "startDateTime": "2021-01-01T00:00", 
                "endDateTime": "2023-12-31T11:59:59" 
            }, 
            "@valueSchemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/StringCharacteristic.schema.json", 
            "minCardinality": 0, 
            "maxCardinality": 1, 
            "isUnique": true, 
            "regex": "", 


            "extensible": false, 
            "characteristicValueSpecification": [ 
                { 
                    "valueType": "string", 
                    "isDefault": true, 
                    "value": "", 
                    "validFor": { 
                        "startDateTime": "2021-01-01T00:00", 
                        "endDateTime": "2023-12-31T11:59:59" 
                    }, 
                    "regex": "", 
                    "valueFrom": "", 
                    "valueTo": "", 
                    "unitOfMeasure": "", 
                    "rangeInterval": "open", 
                    "@type": "CharacteristicValueSpecification", 
                    "@baseType": "", 
                    "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/CharacteristicValueSpecification.schema.json" 
                } 
            ], 
            "charSpecRelationship": [], 
            "@type": "SpecCharacteristic", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/SpecCharacteristic.schema.json" 
        } 
    ], 
    "relatedParty": [ 
        { 
            "href": "https://mycsp.com:8080/tmf-api/partyManagement/v4/individual/3001", 
            "id": "3001", 
            "name": "charles aznavour", 
            "role": "Creator", 
            "@referredType": "PartyRole", 
            "@type": "RelatedParty", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/EngagedParty/RelatedParty.schema.json" 
        } 
    ], 
    "targetEntitySchema": { 
        "@type": "ManagedEntity", 
        "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ManagedEntity.schema.json" 
    }, 
    "constraint": [ 
        { 
            "href": "https://mycsp.com:8080/tmf-api/policyManagement/v4/policy/3779", 
            "id": "3779", 
            "name": "Node Filter", 
            "version": "1.0", 
            "@referredType": "Constraint", 


            "@type": "ConstraintRef", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ConstraintRef.schema.json" 
        } 
    ], 
    "entitySpecRelationship": [ 
        { 
            "relationshipType": "Includes", 
            "role": "nodeType", 
            "id": "8039", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8039", 
            "name": "Node Type Capability Definition", 
            "validFor": { 
                "startDateTime": "2020-12-05T00:00", 
                "endDateTime": "2023-12-31T11:59:59" 
            }, 
            "associationSpec": {}, 
            "@referredType": "CapabilitySpecification", 
            "@type": "EntitySpecRelationship", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntitySpecRelationship.schema.json" 
        }, 
        { 
            "relationshipType": "Includes", 
            "role": "nodeType", 
            "id": "8053", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8053", 
            "name": "Node Type Requirement Definition", 
            "validFor": { 
                "startDateTime": "2020-12-05T00:00", 
                "endDateTime": "2023-12-31T11:59:59" 
            }, 
            "associationSpec": {}, 
            "@referredType": "RequirementSpecification", 
            "@type": "EntitySpecRelationship", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntitySpecRelationship.schema.json" 
        }, 
        { 
            "relationshipType": "Includes", 
            "role": "nodeType", 
            "id": "8059", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8059", 
            "name": "Node Type Interface Definition", 
            "validFor": { 
                "startDateTime": "2020-12-05T00:00", 
                "endDateTime": "2023-12-31T11:59:59" 
            }, 
            "associationSpec": {}, 
            "@referredType": "InterfaceSpecification", 


            "@type": "EntitySpecRelationship", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntitySpecRelationship.schema.json" 
        }, 
        { 
            "relationshipType": "Includes", 
            "role": "nodeType", 
            "id": "8069", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8069", 
            "name": "Node Type Artifact Definition", 
            "validFor": { 
                "startDateTime": "2020-12-05T00:00", 
                "endDateTime": "2023-12-31T11:59:59" 
            }, 
            "associationSpec": {}, 
            "@referredType": "ArtifactSpecification", 
            "@type": "EntitySpecRelationship", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/EntitySpecRelationship.schema.json" 
        } 
    ], 
    "@type": "ToscaNodeTemplate", 
    "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/ToscaNodeTemplate.schema.json", 
    "@baseType": "EntitySpecification" 
} 
 
Delete entity specification 
  DELETE /entitySpecification/{id} 
Description 
This operation deletes an entity specification entity. 
Usage Samples 
Here's an example of a request for deleting a specification. 
 
Request 
 
DELETE /tmf-api/entityCatalogManagement/v4/entitySpecification/6599 
 
 
 
Response 


204 
 
 
Operations on Association Specification 
List association specifications 
  GET /associationSpecification?fields=...&{filtering} 
Description 
This operation list association specification entities. 
Attribute selection is enabled for all first level attributes. 
Filtering may be available depending on the compliance level supported by an implementation. 
 
Usage Samples 
Here's an example of a request for retrieving multiple association specifications. 
 
Request 
 
GET /tmf-api/entityCatalogManagement/v4/associationSpecification?lifecycleStatus=Active 
Accept: application/json 
 
 
 
Response 
 
200 
 
[ 
    { 
        "id": "7717", 
        "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/associationSpecification/7717", 
        "name": "HostedOn", 
        "description": "An uni-directional association from TOSCA NodeDbmsSpec A to Tosca NodeComputeSpec Z 
indicating an instance of A hosted on an instance of B", 
        "version": "2.0", 
        "validFor": { 
            "startDateTime": "2021-01-01T00:00-04:00", 
            "endDateTime": "2023-12-31T11:59:59-04:00" 
        }, 
        "lastUpdate": "2021-01-01T00:00-04:00", 
"lif
l St t
" "A ti
"


        "constraint": [ 
            { 
                "href": "https://mycsp.com:8080/tmf-api/policyManagement/v4/policy/3989", 
                "id": "3989", 
                "name": "EligibilityConstraint", 
                "version": "1.0", 
                "@referredType": "Constraint", 
                "@type": "ConstraintRef", 
                "@baseType": "", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ConstraintRef.schema.json" 
            } 
        ], 
        "associationRoleSpec": [ 
            { 
                "entityType": "NodeDbmsSpec", 
                "isNavigable": true, 
                "isSource": true, 
                "maxQuantity": 1, 
                "minQuantity": 1, 
                "role": "hostee", 
                "defaultQuantity": 1, 
                "aggregation": "None" 
            }, 
            { 
                "entityType": "NodeComputeSpec", 
                "isNavigable": true, 
                "isSource": false, 
                "maxQuantity": 1, 
                "minQuantity": 0, 
                "role": "hoster", 
                "defaultQuantity": 1, 
                "aggregation": "None" 
            } 
        ], 
        "@type": "AssociationSpecification", 
        "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/AssociationSpecification.schema.json", 
        "@baseType": "" 
    }, 
    { 
        "id": "7727", 
        "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/associationSpecification/7727", 
        "name": "ReliesOn", 
        "description": "An uni-directional association from EntitySpecification A to EntitySpecification B indicating 
an instance of A relies on an instance of B", 
        "version": "1.0", 
        "validFor": { 
            "startDateTime": "2020-12-25T00:00Z", 
            "endDateTime": "2024-12-25T11:59:59Z" 
        }, 
        "lastUpdate": "2020-12-25T00:00Z", 
        "lifecycleStatus": "Active", 


        "constraint": [], 
        "associationRoleSpec": [ 
            { 
                "entityType": "ElecFireProtectionSpec", 
                "isNavigable": true, 
                "isSource": true, 
                "maxQuantity": 1, 
                "minQuantity": 1, 
                "role": "a_ReliesOn", 
                "defaultQuantity": 1, 
                "aggregation": "None" 
            }, 
            { 
                "entityType": "MechFireProtectionSpec", 
                "isNavigable": true, 
                "isSource": false, 
                "maxQuantity": 1, 
                "minQuantity": 0, 
                "role": "z_ReliesOn", 
                "defaultQuantity": 1, 
                "aggregation": "None" 
            } 
        ], 
        "@type": "AssociationSpecification", 
        "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/AssociationSpecification.schema.json", 
        "@baseType": "" 
    } 
] 
 
Retrieve association specification 
  GET 
/associationSpecification/{id}?fields=...&{filtering} 
Description 
This operation retrieves an association specification entity. 
Attribute selection is enabled for all first level attributes. 
Filtering on sub-resources may be available depending on the compliance level supported by an 
implementation. 
 
 


 
Usage Samples 
Here's an example of a request for retrieving a specific association specification. 
 
Request 
 
GET /tmf-api/entityCatalogManagement/v4/associationSpecification/7717 
Accept: application/json 
 
 
 
Response 
 
200 
 
{ 
    "id": "7717", 
    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/associationSpecification/7717", 
    "name": "HostedOn", 
    "description": "An uni-directional association from TOSCA NodeDbmsSpec A to Tosca NodeComputeSpec Z 
indicating an instance of A hosted on an instance of B", 
    "version": "1.0", 
    "validFor": { 
        "startDateTime": "2020-12-05T00:00-04:00", 
        "endDateTime": "2023-12-31T11:59:59-04:00" 
    }, 
    "lastUpdate": "2020-12-05T00:00-04:00", 
    "lifecycleStatus": "Active", 
    "constraint": [ 
        { 
            "href": "https://mycsp.com:8080/tmf-api/policyManagement/v4/policy/3989", 
            "id": "3989", 
            "name": "EligibilityConstraint", 
            "version": "1.0", 
            "@referredType": "Constraint", 
            "@type": "ConstraintRef", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ConstraintRef.schema.json" 
        } 
    ], 
    "associationRoleSpec": [ 
        { 
            "entityType": "NodeDbmsSpec", 
            "isNavigable": true, 
            "isSource": true, 
            "maxQuantity": 1, 
            "minQuantity": 1, 
            "role": "a host", 


            "defaultQuantity": 1, 
            "aggregation": "None" 
        }, 
        { 
            "entityType": "NodeComputeSpec", 
            "isNavigable": true, 
            "isSource": false, 
            "maxQuantity": 1, 
            "minQuantity": 0, 
            "role": "z_host", 
            "defaultQuantity": 1, 
            "aggregation": "None" 
        } 
    ], 
    "@type": "AssociationSpecification", 
    "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/AssociationSpecification.schema.json", 
    "@baseType": "" 
} 
 
Create association specification 
  POST /associationSpecification 
Description 
This operation creates an association specification entity. 
Mandatory and Non Mandatory Attributes 
The following tables provide the list of mandatory and non mandatory attributes when creating a 
AssociationSpecification, including any possible rule conditions and applicable default values. Notice that 
it is up to an implementer to add additional mandatory attributes. 
 
Mandatory Attributes 
Rule 
name 
 
associationRoleSpec 
 
 
Non Mandatory Attributes 
Rule 
@baseType 
 
@schemaLocation 
 
@type 
 
constraint 
 
description 
 
lastUpdate


Non Mandatory Attributes 
Rule 
lifecycleStatus 
 
validFor 
 
version 
 
 
Usage Samples 
Here's an example of a request for creating an association specification. 
 
Request 
 
POST /tmf-api/entityCatalogManagement/v4/associationSpecification 
Content-Type: application/json 
 
{ 
    "name": "ReliesOn", 
    "description": "An uni-directional association from TOSCA NodeDbmsSpec A to Tosca NodeComputeSpec Z 
indicating an instance of A hosted on an instance of B", 
    "version": "1.0", 
    "validFor": { 
        "startDateTime": "2020-12-05T00:00-04:00", 
        "endDateTime": "2023-12-31T11:59:59-04:00" 
    }, 
    "lifecycleStatus": "Active", 
    "constraint": [ 
        { 
            "href": "https://mycsp.com:8080/tmf-api/policyManagement/v4/policy/3989", 
            "id": "3989", 
            "name": "EligibilityConstraint", 
            "version": "1.0", 
            "@referredType": "Constraint", 
            "@type": "ConstraintRef", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ConstraintRef.schema.json" 
        } 
    ], 
    "associationRoleSpec": [ 
        { 
            "entityType": "NodeDbmsSpec", 
            "isNavigable": true, 
            "isSource": true, 
            "maxQuantity": 1, 
            "minQuantity": 1, 
            "role": "a_host", 
            "defaultQuantity": 1, 
            "aggregation": "None" 
        }, 
        { 
            "entityType": "NodeComputeSpec", 
"isNavigable": true,


            "isSource": false, 
            "maxQuantity": 1, 
            "minQuantity": 0, 
            "role": "z_host", 
            "defaultQuantity": 1, 
            "aggregation": "None" 
        } 
    ], 
    "@type": "AssociationSpecification", 
    "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/AssociationSpecification.schema.json" 
} 
 
 
 
Response 
 
201 
 
{ 
    "id": "7717", 
    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/associationSpecification/7717", 
    "name": "HostedOn", 
    "description": "An uni-directional association from TOSCA NodeDbmsSpec A to Tosca NodeComputeSpec Z 
indicating an instance of A hosted on an instance of B", 
    "version": "1.0", 
    "validFor": { 
        "startDateTime": "2020-12-05T00:00-04:00", 
        "endDateTime": "2023-12-31T11:59:59-04:00" 
    }, 
    "lastUpdate": "2020-12-05T00:00-04:00", 
    "lifecycleStatus": "Active", 
    "constraint": [ 
        { 
            "href": "https://mycsp.com:8080/tmf-api/policyManagement/v4/policy/3989", 
            "id": "3989", 
            "name": "EligibilityConstraint", 
            "version": "1.0", 
            "@referredType": "Constraint", 
            "@type": "ConstraintRef", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ConstraintRef.schema.json" 
        } 
    ], 
    "associationRoleSpec": [ 
        { 
            "entityType": "NodeDbmsSpec", 
            "isNavigable": true, 
            "isSource": true, 
            "maxQuantity": 1, 
            "minQuantity": 1, 
"role": "a host"


            "defaultQuantity": 1, 
            "aggregation": "None" 
        }, 
        { 
            "entityType": "NodeComputeSpec", 
            "isNavigable": true, 
            "isSource": false, 
            "maxQuantity": 1, 
            "minQuantity": 0, 
            "role": "z_host", 
            "defaultQuantity": 1, 
            "aggregation": "None" 
        } 
    ], 
    "@type": "AssociationSpecification", 
    "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/AssociationSpecification.schema.json", 
    "@baseType": "" 
} 
 
Patch association specification 
  PATCH /associationSpecification/{id} 
Description 
This operation allows partial updates of an association specification entity. Support of json/merge 
(https://tools.ietf.org/html/rfc7386) is mandatory, support of json/patch 
(http://tools.ietf.org/html/rfc5789) is optional. 
 
Note: If the update operation yields to the creation of sub-resources or relationships, the same rules 
concerning mandatory sub-resource attributes and default value settings in the POST operation applies 
to the PATCH operation.  Hence these tables are not repeated here. 
Patchable and Non Patchable Attributes 
The tables below provide the list of patchable and non patchable attributes, including constraint rules on 
their usage. 
Patchable Attributes 
Rule 
associationRoleSpec 
 
constraint 
 
description 
 
lifecycleStatus 
 
name 
 
validFor 
 
version 
 


 
Non Patchable Attributes 
Rule 
id 
 
href 
 
lastUpdate 
 
@type 
 
@schemaLocation 
 
@baseType 
 
 
Usage Samples 
Here's an example of a request for patching a AssociationSpecification resource. 
 
Request 
 
PATCH /tmf-api/entityCatalogManagement/v4/associationSpecification/7717 
Content-Type: application/merge-patch+json 
 
{ 
    "name": "new name" 
} 
 
 
 
Response 
 
200 
 
{ 
    "id": "7717", 
    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/associationSpecification/7717", 
    "name": "new name", 
    "description": "An uni-directional association from TOSCA NodeDbmsSpec A to Tosca NodeComputeSpec Z 
indicating an instance of A hosted on an instance of B", 
    "version": "1.0", 
    "validFor": { 
        "startDateTime": "2020-12-05T00:00-04:00", 
        "endDateTime": "2023-12-31T11:59:59-04:00" 
    }, 
    "lastUpdate": "2020-12-05T00:00-04:00", 
    "lifecycleStatus": "Active", 
    "constraint": [ 
        { 
            "href": "https://mycsp.com:8080/tmf-api/policyManagement/v4/policy/3989", 
            "id": "3989", 
            "name": "EligibilityConstraint", 
"version": "1.0",


            "@referredType": "Constraint", 
            "@type": "ConstraintRef", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ConstraintRef.schema.json" 
        } 
    ], 
    "associationRoleSpec": [ 
        { 
            "entityType": "NodeDbmsSpec", 
            "isNavigable": true, 
            "isSource": true, 
            "maxQuantity": 1, 
            "minQuantity": 1, 
            "role": "a_host", 
            "defaultQuantity": 1, 
            "aggregation": "None" 
        }, 
        { 
            "entityType": "NodeComputeSpec", 
            "isNavigable": true, 
            "isSource": false, 
            "maxQuantity": 1, 
            "minQuantity": 0, 
            "role": "z_host", 
            "defaultQuantity": 1, 
            "aggregation": "None" 
        } 
    ], 
    "@type": "AssociationSpecification", 
    "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/AssociationSpecification.schema.json", 
    "@baseType": "" 
} 
 
Delete association specification 
  DELETE /associationSpecification/{id} 
Description 
This operation deletes an association specification entity. 
 
 


 
Usage Samples 
Here's an example of a request for deleting an association specification. 
 
Request 
 
DELETE /tmf-api/entityCatalogManagement/v4/associationSpecification/7717 
 
 
 
Response 
 
204 
 
 
Operations on Association 
List associations 
  GET /association?fields=...&{filtering} 
Description 
This operation list association entities. 
Attribute selection is enabled for all first level attributes. 
Filtering may be available depending on the compliance level supported by an implementation. 
 
Usage Samples 
Here's an example of a request for retrieving multiple associations. 
 
Request 
 
GET /tmf-api/entityCatalogManagement/v4/association?lifecycleStatus=Active 
Accept: application/json 
 
 
 
Response 


200 
 
[ 
    { 
        "id": "7757", 
        "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/association/7757", 
        "name": "ReliesOn", 
        "description": "An Uni-directional ReliesOn association from Electrical Fire Protection Specification to 
Mechanical Fire Protection Specification", 
        "version": "1.0", 
        "validFor": { 
            "startDateTime": "2020-12-25T00:00Z", 
            "endDateTime": "2023-12-31T11:59:59Z" 
        }, 
        "lastUpdate": "2020-12-25T00:00Z", 
        "lifecycleStatus": "Active", 
        "associationSpec": { 
            "id": "7727", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/associationSpecification/7727", 
            "name": "ReliesOn", 
            "@referredType": "AssociationSpecfication", 
            "@type": "AssociationSpecficationRef", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/AssociationSpecficationRef.schema.json" 
        }, 
        "constraint": [ 
            { 
                "href": "https://mycsp.com:8080/tmf-api/policyManagement/v4/policy/3947", 
                "id": "3947", 
                "name": "protectionDependencyRule", 
                "version": "1.0", 
                "@referredType": "Constraint", 
                "@type": "ConstraintRef", 
                "@baseType": "", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ConstraintRef.schema.json" 
            } 
        ], 
        "associationRole": [ 
            { 
                "isSource": true, 
                "role": "a_ReliesOn", 
                "@type": "AssociationRole", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/AssociationRole.schema.json", 
                "@baseType": "", 
                "entity": { 
                    "id": "8089", 
                    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8089", 
                    "name": "Fire Protection Electrical", 
                    "@type": "EntityRef", 
                    "@baseType": "", 


                    "referredType": "FireProtectionSpecification", 
                    "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityRef.schema.json" 
                } 
            }, 
            { 
                "isSource": false, 
                "role": "z_ReliesOn", 
                "@type": "AssociationRole", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/AssociationRole.schema.json", 
                "@baseType": "", 
                "entity": { 
                    "id": "8087", 
                    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8087", 
                    "name": "Fire Protection Mechanical", 
                    "@type": "EntityRef", 
                    "@baseType": "", 
                    "referredType": "FireProtectionSpecification", 
                    "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityRef.schema.json" 
                } 
            } 
        ], 
        "@type": "Association", 
        "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/Association.schema.json", 
        "@baseType": "" 
    }, 
    { 
        "id": "7759", 
        "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/association/7759", 
        "name": "HostedOn", 
        "description": "A host requirement for a Tosca Database Node", 
        "version": "1.0", 
        "validFor": { 
            "startDateTime": "2021-01-01T00:00Z", 
            "endDateTime": "2023-12-31T11:59:59Z" 
        }, 
        "lastUpdate": "2021-01-01T00:00Z", 
        "lifecycleStatus": "Active", 
        "associationSpec": { 
            "id": "7717", 
            "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/associationSpecification/7717", 
            "name": "HostedOn", 
            "@referredType": "AssociationSpecfication", 
            "@type": "AssociationSpecficationRef", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/AssociationSpecficationRef.schema.json" 
        }, 
        "constraint": [ 
            { 
                "href": "https://mycsp.com:8080/tmf-api/policyManagement/v4/policy/3989", 
                "id": "3989", 


                "name": "EligibilityConstraint", 
                "version": "1.0", 
                "@referredType": "Constraint", 
                "@type": "ConstraintRef", 
                "@baseType": "", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ConstraintRef.schema.json" 
            } 
        ], 
        "associationRole": [ 
            { 
                "isSource": true, 
                "role": "hostee", 
                "@type": "AssociationRole", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/AssociationRole.schema.json", 
                "@baseType": "", 
                "entity": { 
                    "id": "8009", 
                    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8009", 
                    "name": "mysql", 
                    "referredType": "NodeDbmsSpec", 
                    "@type": "EntityRef", 
                    "@baseType": "", 
                    "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityRef.schema.json" 
                } 
            }, 
            { 
                "isSource": false, 
                "role": "hoster", 
                "@type": "AssociationRole", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/AssociationRole.schema.json", 
                "@baseType": "", 
                "entity": { 
                    "id": "8011", 
                    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8011", 
                    "name": "db_server", 
                    "referredType": "NodeComputeSpec", 
                    "@type": "EntityRef", 
                    "@baseType": "", 
                    "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityRef.schema.json" 
                } 
            } 
        ], 
        "@type": "Association", 
        "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/Association.schema.json", 
        "@baseType": "" 
    } 
] 
 
 
 


Retrieve association 
  GET /association/{id}?fields=...&{filtering} 
Description 
This operation retrieves an association entity. 
Attribute selection is enabled for all first level attributes. 
Filtering on sub-resources may be available depending on the compliance level supported by an 
implementation. 
 
Usage Samples 
Here's an example of a request for retrieving a specific association. 
 
Request 
 
GET /tmf-api/entityCatalogManagement/v4/association/7757 
Accept: application/json 
 
 
 
Response 
 
200 
 
{ 
    "id": "7757", 
    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/association/7757", 
    "name": "ReliesOn", 
    "description": "An Uni-directional ReliesOn association from Electrical Fire Protection Specification to 
Mechanical Fire Protection Specification", 
    "version": "1.0", 
    "validFor": { 
        "startDateTime": "2020-12-25T00:00Z", 
        "endDateTime": "2023-12-31T11:59:59Z" 
    }, 
    "lastUpdate": "2020-12-25T00:00Z", 
    "lifecycleStatus": "Active", 
    "associationSpec": { 
        "id": "7727", 
        "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/associationSpecification/7727", 
        "name": "ReliesOn", 
        "@referredType": "AssociationSpecfication", 
        "@type": "AssociationSpecficationRef", 


        "@baseType": "", 
        "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/AssociationSpecficationRef.schema.json" 
    }, 
    "constraint": [ 
        { 
            "href": "https://mycsp.com:8080/tmf-api/policyManagement/v4/policy/3947", 
            "id": "3947", 
            "name": "protectionDependencyRule", 
            "version": "1.0", 
            "@referredType": "Constraint", 
            "@type": "ConstraintRef", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ConstraintRef.schema.json" 
        } 
    ], 
    "associationRole": [ 
        { 
            "isSource": true, 
            "role": "a_ReliesOn", 
            "@type": "AssociationRole", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/AssociationRole.schema.json", 
            "@baseType": "", 
            "entity": { 
                "id": "8089", 
                "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8089", 
                "name": "Fire Protection Electrical", 
                "@type": "EntityRef", 
                "@baseType": "", 
                "referredType": "FireProtectionSpecification", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityRef.schema.json" 
            } 
        }, 
        { 
            "isSource": false, 
            "role": "z_ReliesOn", 
            "@type": "AssociationRole", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/AssociationRole.schema.json", 
            "@baseType": "", 
            "entity": { 
                "id": "8087", 
                "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8087", 
                "name": "Fire Protection Mechanical", 
                "@type": "EntityRef", 
                "@baseType": "", 
                "referredType": "FireProtectionSpecification", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityRef.schema.json" 
            } 
        } 
    ], 
    "@type": "Association", 
    "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/Association.schema.json", 


    "@baseType": "" 
} 
 
Create association 
  POST /association 
Description 
This operation creates an association entity. 
Mandatory and Non Mandatory Attributes 
The following tables provide the list of mandatory and non mandatory attributes when creating an 
Association, including any possible rule conditions and applicable default values. Notice that it is up to an 
implementer to add additional mandatory attributes. 
Mandatory Attributes 
Rule 
name 
 
associationRole 
 
 
Non Mandatory Attributes 
Rule 
@baseType 
 
@schemaLocation 
 
@type 
 
associationSpec 
 
constraint 
 
description 
 
lastUpdate 
 
lifecycleStatus 
 
validFor 
 
version 
 
 
Usage Samples 
Here's an example of a request for creating an association. 
 
Request 
 
POST /tmf-api/entityCatalogManagement/v4/association 
Content-Type: application/json 
 
{ 
"name": "ReliesOn"


    "description": "An Uni-directional ReliesOn association from Electrical Fire Protection Specification to 
Mechanical Fire Protection Specification", 
    "version": "1.0", 
    "validFor": { 
        "startDateTime": "2020-12-25T00:00Z", 
        "endDateTime": "2023-12-31T11:59:59Z" 
    }, 
    "lifecycleStatus": "Active", 
    "associationSpec": { 
        "id": "7727", 
        "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/associationSpecification/7727", 
        "name": "ReliesOn", 
        "@referredType": "AssociationSpecfication", 
        "@type": "AssociationSpecficationRef", 
        "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/AssociationSpecficationRef.schema.json" 
    }, 
    "constraint": [ 
        { 
            "href": "https://mycsp.com:8080/tmf-api/policyManagement/v4/policy/3947", 
            "id": "3947", 
            "name": "protectionDependencyRule", 
            "version": "1.0", 
            "@referredType": "Constraint", 
            "@type": "ConstraintRef", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ConstraintRef.schema.json" 
        } 
    ], 
    "associationRole": [ 
        { 
            "isSource": true, 
            "role": "a_ReliesOn", 
            "@type": "AssociationRole", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/AssociationRole.schema.json", 
            "entity": { 
                "id": "8089", 
                "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8089", 
                "name": "Fire Protection Electrical", 
                "@type": "EntityRef", 
                "@baseType": "", 
                "referredType": "FireProtectionSpecification", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityRef.schema.json" 
            } 
        }, 
        { 
            "isSource": false, 
            "role": "z_ReliesOn", 
            "@type": "AssociationRole", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/AssociationRole.schema.json", 
            "entity": { 
                "id": "8087", 
                "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8087", 


                "name": "Fire Protection Mechanical", 
                "@type": "EntityRef", 
                "referredType": "FireProtectionSpecification", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityRef.schema.json" 
            } 
        } 
    ], 
    "@type": "Association", 
    "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/Association.schema.json" 
} 
 
 
 
Response 
 
201 
 
{ 
    "id": "7757", 
    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/association/7757", 
    "name": "ReliesOn", 
    "description": "An Uni-directional ReliesOn association from Electrical Fire Protection Specification to 
Mechanical Fire Protection Specification", 
    "version": "1.0", 
    "validFor": { 
        "startDateTime": "2020-12-25T00:00Z", 
        "endDateTime": "2023-12-31T11:59:59Z" 
    }, 
    "lastUpdate": "2020-12-25T00:00Z", 
    "lifecycleStatus": "Active", 
    "associationSpec": { 
        "id": "7727", 
        "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/associationSpecification/7727", 
        "name": "ReliesOn", 
        "@referredType": "AssociationSpecfication", 
        "@type": "AssociationSpecficationRef", 
        "@baseType": "", 
        "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/AssociationSpecficationRef.schema.json" 
    }, 
    "constraint": [ 
        { 
            "href": "https://mycsp.com:8080/tmf-api/policyManagement/v4/policy/3947", 
            "id": "3947", 
            "name": "protectionDependencyRule", 
            "version": "1.0", 
            "@referredType": "Constraint", 
            "@type": "ConstraintRef", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ConstraintRef.schema.json" 
        } 
]


    "associationRole": [ 
        { 
            "isSource": true, 
            "role": "a_ReliesOn", 
            "@type": "AssociationRole", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/AssociationRole.schema.json", 
            "@baseType": "", 
            "entity": { 
                "id": "8089", 
                "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8089", 
                "name": "Fire Protection Electrical", 
                "@type": "EntityRef", 
                "@baseType": "", 
                "referredType": "FireProtectionSpecification", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityRef.schema.json" 
            } 
        }, 
        { 
            "isSource": false, 
            "role": "z_ReliesOn", 
            "@type": "AssociationRole", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/AssociationRole.schema.json", 
            "@baseType": "", 
            "entity": { 
                "id": "8087", 
                "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8087", 
                "name": "Fire Protection Mechanical", 
                "@type": "EntityRef", 
                "@baseType": "", 
                "referredType": "FireProtectionSpecification", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityRef.schema.json" 
            } 
        } 
    ], 
    "@type": "Association", 
    "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/Association.schema.json", 
    "@baseType": "" 
} 
 
Patch association 
  PATCH /association/{id} 
Description 
This operation allows partial updates of an association entity. Support of json/merge 
(https://tools.ietf.org/html/rfc7386) is mandatory, support of json/patch 
(http://tools.ietf.org/html/rfc5789) is optional. 


Note: If the update operation yields to the creation of sub-resources or relationships, the same rules 
concerning mandatory sub-resource attributes and default value settings in the POST operation applies 
to the PATCH operation.  Hence these tables are not repeated here. 
Patchable and Non Patchable Attributes 
The tables below provide the list of patchable and non patchable attributes, including constraint rules on 
their usage. 
Patchable Attributes 
Rule 
associationRole 
 
associationSpec 
 
constraint 
 
description 
 
lifecycleStatus 
 
name 
 
validFor 
 
version 
 
 
Non Patchable Attributes 
Rule 
id 
 
href 
 
lastUpdate 
 
@type 
 
@schemaLocation 
 
@baseType 
 
 
Usage Samples 
Here's an example of a request for patching an Association resource. 
 
Request 
 
PATCH /tmf-api/entityCatalogManagement/v4/association/7757 
Content-Type: application/merge-patch+json 
 
{ 
    "name": "new name" 
} 
 
 
 
Response 
 
200


 
{ 
    "id": "7757", 
    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/association/7757", 
    "name": "new name", 
    "description": "An Uni-directional ReliesOn association from Electrical Fire Protection Specification to 
Mechanical Fire Protection Specification", 
    "version": "1.0", 
    "validFor": { 
        "startDateTime": "2020-12-25T00:00Z", 
        "endDateTime": "2023-12-31T11:59:59Z" 
    }, 
    "lastUpdate": "2020-12-25T00:00Z", 
    "lifecycleStatus": "Active", 
    "associationSpec": { 
        "id": "7727", 
        "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/associationSpecification/7727", 
        "name": "ReliesOn", 
        "@referredType": "AssociationSpecfication", 
        "@type": "AssociationSpecficationRef", 
        "@baseType": "", 
        "@schemaLocation": "https://mycsp.com:8080/tmf-
api/schema/Common/AssociationSpecficationRef.schema.json" 
    }, 
    "constraint": [ 
        { 
            "href": "https://mycsp.com:8080/tmf-api/policyManagement/v4/policy/3947", 
            "id": "3947", 
            "name": "protectionDependencyRule", 
            "version": "1.0", 
            "@referredType": "Constraint", 
            "@type": "ConstraintRef", 
            "@baseType": "", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/ConstraintRef.schema.json" 
        } 
    ], 
    "associationRole": [ 
        { 
            "isSource": true, 
            "role": "a_ReliesOn", 
            "@type": "AssociationRole", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/AssociationRole.schema.json", 
            "@baseType": "", 
            "entity": { 
                "id": "8089", 
                "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8089", 
                "name": "Fire Protection Electrical", 
                "@type": "EntityRef", 
                "@baseType": "", 
                "referredType": "FireProtectionSpecification", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityRef.schema.json" 
            } 


        }, 
        { 
            "isSource": false, 
            "role": "z_ReliesOn", 
            "@type": "AssociationRole", 
            "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/AssociationRole.schema.json", 
            "@baseType": "", 
            "entity": { 
                "id": "8087", 
                "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/entitySpecification/8087", 
                "name": "Fire Protection Mechanical", 
                "@type": "EntityRef", 
                "@baseType": "", 
                "referredType": "FireProtectionSpecification", 
                "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/EntityRef.schema.json" 
            } 
        } 
    ], 
    "@type": "Association", 
    "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/Association.schema.json", 
    "@baseType": "" 
} 
 
Delete association 
  DELETE /association/{id} 
Description 
This operation deletes an association entity. 
 
Usage Samples 
Here's an example of a request for deleting an association. 
 
Request 
 
DELETE /tmf-api/entityCatalogManagement/v4/association/7757 
 
 
 
Response 
 
204 
 
 


Operations on Import Job 
List import jobs 
  GET /importJob?fields=...&{filtering} 
Description 
This operation list import job entities. 
Attribute selection is enabled for all first level attributes. 
Filtering may be available depending on the compliance level supported by an implementation. 
 
Usage Samples 
Here's an example of a request for retrieving multiple import jobs. 
 
Request 
 
GET /tmf-api/entityCatalogManagement/v4/importJob?creationDate=2020-10-28 
Accept: application/json 
 
 
 
Response 
 
200 
 
[ 
    { 
        "completionDate": "2020-10-28T00:03", 
        "contentType": "application/json", 
        "creationDate": "2020-10-28T00:00", 
        "errorLog": "http://my-platform/daily/logging/ImportJobErrors.log", 
        "href": "https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/importJob/2011", 
        "id": "2011", 
        "path": "entityCatalogManagement/", 
        "status": "completed", 
        "url": "ftp://ftp.mycsp.com/entityCatalogManagement/ImportJob.json" 
    }, 
    { 
        "completionDate": "", 
        "contentType": "application/json", 
        "creationDate": "2020-10-28T00:06", 
        "errorLog": "http://my-platform/daily/logging/ImportJob2Errors.log", 
"h
f" "htt
//
8080/t
f
i/
tit C t l
M
t/ 4/i
tJ b/2027"


        "id": "2027", 
        "path": "entityCatalogManagement/", 
        "status": "started", 
        "url": "ftp://ftp.mycsp.com/entityCatalogManagement/ImportJob2.json" 
    } 
] 
 
Retrieve import job 
  GET /importJob/{id}?fields=...&{filtering} 
Description 
This operation retrieves an import job entity. 
Attribute selection is enabled for all first level attributes. 
Filtering on sub-resources may be available depending on the compliance level supported by an 
implementation. 
 
Usage Samples 
Here's an example of a request for retrieving a specific import job. 
 
Request 
 
GET /tmf-api/entityCatalogManagement/v4/importJob/2011 
Accept: application/json 
 
 
 
Response 
 
200 
 
{ 
    "completionDate": "2020-09-23T00:03", 
    "contentType": "application/json", 
    "creationDate": "2020-09-23T00:00", 
    "errorLog": "http://my-platform/daily/logging/ImportJobErrors.log", 
    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/importJob/2011", 
    "id": "2011", 
    "path": "entityCatalogManagement/", 
    "status": "completed", 
    "url": "ftp://ftp.mycsp.com/entityCatalogManagement/ImportJob.json" 
}


 
Create import job 
  POST /importJob 
Description 
This operation creates an import job entity. 
Mandatory and Non Mandatory Attributes 
The following tables provide the list of mandatory and non mandatory attributes when creating a 
ImportJob, including any possible rule conditions and applicable default values. Notice that it is up to an 
implementer to add additional mandatory attributes. 
Mandatory Attributes 
Rule 
url 
 
 
Non Mandatory Attributes 
Rule 
@baseType 
 
@schemaLocation 
 
@type 
 
completionDate 
 
contentType 
 
creationDate 
 
errorLog 
 
path 
 
status 
 
 
Usage Samples 
Here's an example of a request for creating an import job. 
 
Request 
 
POST /tmf-api/entityCatalogManagement/v4/importJob 
Content-Type: application/json 
 
{ 
    "contentType": "application/json", 
    "errorLog": "http://my-platform/daily/logging/ImportJobErrors.log", 
    "path": "entityCatalogManagement/", 
    "url": "ftp://ftp.mycsp.com/entityCatalogManagement/ImportJob.json" 
} 


 
 
 
Response 
 
201 
 
{ 
    "completionDate": "2020-09-23T00:03", 
    "contentType": "application/json", 
    "creationDate": "2020-09-23T00:00", 
    "errorLog": "http://my-platform/daily/logging/ImportJobErrors.log", 
    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/importJob/2011", 
    "id": "2011", 
    "path": "entityCatalogManagement/", 
    "status": "completed", 
    "url": "ftp://ftp.mycsp.com/entityCatalogManagement/ImportJob.json" 
} 
 
Delete import job 
  DELETE /importJob/{id} 
Description 
This operation deletes an import job entity. 
Usage Samples 
Here's an example of a request for deleting an import job. 
 
Request 
 
DELETE /tmf-api/entityCatalogManagement/v4/importJob/2011 
 
 
 
Response 
 
204 
 
 
 
 
 


Operations on Export Job 
List export jobs 
  GET /exportJob?fields=...&{filtering} 
Description 
This operation list export job entities. 
Attribute selection is enabled for all first level attributes. 
Filtering may be available depending on the compliance level supported by an implementation. 
Usage Samples 
Here's an example of a request for retrieving multiple export jobs. 
 
Request 
 
GET /tmf-api/entityCatalogManagement/v4/exportJob?creationDate=2020-08-25 
Accept: application/json 
 
 
 
Response 
 
200 
 
[ 
    { 
        "completionDate": "2020-08-25T01:07", 
        "contentType": "application/json", 
        "creationDate": "2020-08-25T01:00", 
        "errorLog": "http://my-platform/daily/logging/exportJob2Errors.log", 
        "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/exportJob/2017", 
        "id": "2017", 
        "path": "entityCatalogManagement/", 
        "query": "@type=TestSpecification", 
        "status": "completed", 
        "url": "ftp://ftp.mycsp.com/entityCatalogManagement/exportJob2.json" 
    }, 
    { 
        "completionDate": "2020-08-25T00:05", 
        "contentType": "application/json", 
        "creationDate": "2020-08-25T00:00", 
        "errorLog": "http://my-platform/daily/logging/exportJobErrors.log", 
        "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/exportJob/2003", 
"id": "2003"


        "path": "entityCatalogManagement/", 
        "query": "@type=JobSpecification", 
        "status": "completed", 
        "url": "ftp://ftp.mycsp.com/entityCatalogManagement/exportJob.json" 
    } 
] 
 
Retrieve export job 
  GET /exportJob/{id}?fields=...&{filtering} 
Description 
This operation retrieves an export job entity. 
Attribute selection is enabled for all first level attributes. 
Filtering on sub-resources may be available depending on the compliance level supported by an 
implementation. 
 
Usage Samples 
Here's an example of a request for retrieving a specific export job. 
 
Request 
 
GET /tmf-api/entityCatalogManagement/v4/exportJob/2003 
Accept: application/json 
 
 
 
Response 
 
200 
 
{ 
    "completionDate": "2020-08-25T00:05", 
    "contentType": "application/json", 
    "creationDate": "2020-08-25T00:00", 
    "errorLog": "http://my-platform/daily/logging/exportJobErrors.log", 
    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/exportJob/2003", 
    "id": "2003", 
    "path": "entityCatalogManagement/", 
    "query": "@type=JobSpecification", 
    "status": "completed", 
"url": "ftp://ftp mycsp com/entityCatalogManagement/exportJob json"


} 
 
Create export job 
  POST /exportJob 
Description 
This operation creates an export job entity. 
Mandatory and Non Mandatory Attributes 
The following tables provide the list of mandatory and non mandatory attributes when creating a 
ExportJob, including any possible rule conditions and applicable default values. Notice that it is up to an 
implementer to add additional mandatory attributes. 
Mandatory Attributes 
Rule 
url 
 
 
Non Mandatory Attributes 
Rule 
@baseType 
 
@schemaLocation 
 
@type 
 
completionDate 
 
contentType 
 
creationDate 
 
errorLog 
 
path 
 
query 
 
status 
 
 
Usage Samples 
Here's an example of a request for creating an export job. 
 
Request 
 
POST /tmf-api/entityCatalogManagement/v4/exportJob 
Content-Type: application/json 
 
{ 
    "contentType": "application/json", 
    "errorLog": "http://my-platform/daily/logging/exportJobErrors.log", 
"path": "entityCatalogManagement/",


    "query": "@type=JobSpecification", 
    "url": "ftp://ftp.mycsp.com/entityCatalogManagement/exportJob.json" 
} 
 
 
 
Response 
 
201 
 
{ 
    "completionDate": "2020-08-25T00:05", 
    "contentType": "application/json", 
    "creationDate": "2020-08-25T00:00", 
    "errorLog": "http://my-platform/daily/logging/exportJobErrors.log", 
    "href": "https://mycsp.com:8080/tmf-api/entityCatalogManagement/v4/exportJob/2003", 
    "id": "2003", 
    "path": "entityCatalogManagement/", 
    "query": "@type=JobSpecification", 
    "status": "completed", 
    "url": "ftp://ftp.mycsp.com/entityCatalogManagement/exportJob.json" 
} 
 
Delete export job 
  DELETE /exportJob/{id} 
Description 
This operation deletes an export job entity. 
Usage Samples 
Here's an example of a request for deleting an export job. 
 
Request 
 
DELETE /tmf-api/entityCatalogManagement/v4/exportJob/2003 
 
 
 
Response 
 
204 
 
 


API NOTIFICATIONS 
For every single of operation on the entities use the following templates and provide sample 
REST notification POST calls. 
It is assumed that the Pub/Sub uses the Register and UnRegister mechanisms described in the 
REST Guidelines reproduced below. 
Register listener 
  POST /hub 
Description 
Sets the communication endpoint address the service instance must use to deliver information about its 
health state, execution state, failures and metrics. Subsequent POST calls will be rejected by the service if 
it does not support multiple listeners. In this case DELETE /api/hub/{id} must be called before an 
endpoint can be created again. 
Behavior 
Returns HTTP/1.1 status code 204 if the request was successful. 
Returns HTTP/1.1 status code 409 if request is not successful. 
Usage Samples 
Here's an example of a request for registering a listener. 
 
Request 
 
POST /api/hub 
Accept: application/json 
 
{"callback": "http://in.listener.com"} 
 
 
Response 
 
201 
Content-Type: application/json 
Location: /api/hub/42 
 
{"id":"42","callback":"http://in.listener.com","query":null} 
 


Unregister listener 
  DELETE /hub/{id} 
Description 
Clears the communication endpoint address that was set by creating the Hub. 
Behavior 
Returns HTTP/1.1 status code 204 if the request was successful. 
Returns HTTP/1.1 status code 404 if the resource is not found. 
Usage Samples 
Here's an example of a request for un-registering a listener. 
 
Request 
 
DELETE /api/hub/42 
Accept: application/json 
 
 
Response 
 
204 
 
Publish Event to listener 
  POST /client/listener 
Description 
Clears the communication endpoint address that was set by creating the Hub. 
Provides to a registered listener the description of the event that was raised. The /client/listener 
url is the callback url passed when registering the listener. 
Behavior 
Returns HTTP/1.1 status code 201 if the service is able to set the configuration.  
 
 


Usage Samples 
Here's an example of a notification received by the listener. In this example âEVENT TYPEâ should be 
replaced by one of the notification types supported by this API (see Notification resources Models 
section) and EVENT BODY refers to the data structure of the given notification type. 
 
Request 
 
POST /client/listener 
Accept: application/json 
 
{ 
    "event": {  
                EVENT BODY  
            }, 
    "eventType": "EVENT_TYPE" 
} 
 
 
Response 
 
201 
 
For detailed examples on the general TM Forum notification mechanism, see the TMF REST 
Design Guidelines. 
 


Role based Access Control 
The API will be released to allow all CRUD operations on API REST resources. However, the API 
operations are in subject to access control and can be limited depends on API user role. After a user 
presents his credentials for authentication, depending his validity of credentials he is given access to 
catalog based on his role.  
For example,  a User gets an error response if the user issues a Get on a catalog entity and he has no 
permission to access to the catalog or if he tries to modify an area of the catalog but do not have Write 
Access. 
Normally we anticipate that the OAUTH2 or Open ID Connect are used as the authorization APIs and that 
ACL are established between authorized parties with regards to the content of the Catalog (i.e., GET but 
also enable of update operations on specific entities).Acknowledgements 


ACKNOWLEDGEMENTS 
Version History 
Version 
Number 
Date  
Release led by: 
Description  
1.0.4 
27-May-2017 
Kamal Maghsoudlou - Ericsson 
kamal.maghsoudlou@ericsson.co
m 
â¢ 
Incorporated comments from 
internal meetings and JIRA 
â¢ 
Udated API data model UML, 
operations and notifications 
1.0.5  
20-Nov-2017 
 
Adrienne Walcott, TM Forum  
â¢ 
Updated to reflect TM Forum 
Approved Status 
4.0.0 
05-Apr-2021 
Kamal Maghsoudlou - Ericsson 
â¢ 
Aligned with TMF630 ver. 4.0 
â¢ 
Updated Model, Operations 
and examples 
 
Release History 
Release 
Status  
Date  
Modified by 
Description  
Release 
17.0.0 
27-May-2017 Kamal Maghsoudlou -          Ericsson 
kamal.maghsoudlou@ericsson.com 
â¢ 
Incorporated 
comments from 
internal meetings and 
JIRA 
Updated API data model 
UML, operations and 
notifications 
Release 
17.0.1  
20-Nov-2017 
 
Adrienne Walcott               TM Forum  
Updated to reflect TM 
Forum Approved Status 
Pre-
production 
05-Apr-2021 
Kamal Maghsoudlou         Ericsson 
Updated for API release 
21.0 
Production 
26-Jul-2021 
Adrienne Walcott 
Updated to reflect TM 
Forum Approved Status 


CONTRIBUTORS TO DOCUMENT 
 
â¢ Kamal Maghsoudlou 
Ericsson 
â¢ Frank Wong 
DGIT 
â¢ Pierre Gauthier 
TM Forum 
â¢ Michel Besson 
TM Forum 
â¢ Elaine Harer 
Ericsson 
â¢ Mariano Belaunde 
Orange 
 
 
 
 
 


