{"tmforumApiId": "TMFC007", "id": "TMFC007-chunk-1", "chunkIndex": 1, "totalChunks": 6, "apiName": "Service Order Management v1.2.1", "title": "TMFC007_Service_Order_Management_v1.2.1 (Part 1/6)", "documentType": "Tmforum api user guide", "text": "TM Forum Technical Specification \n \n \nService Order Management \n \n \n \n \n \n \n \n \n \n \n \nTMFC007 \n \nMaturity Level: General availability (GA) \nTeam Approved Date: 02-Jul-2024 \nRelease Status: Production \nApproval Status: TM Forum Approved \nVersion 1.2.1 \nIPR Mode: RAND \n \n \n \n\n\n \nNotice \nCopyright \u00a9 TM Forum 2024. All Rights Reserved. \n \nThis document and translations of it may be copied and furnished to others, and \nderivative works that comment on or otherwise explain it or assist in its implementation \nmay be prepared, copied, published, and distributed, in whole or in part, without \nrestriction of any kind, provided that the above copyright notice and this section are \nincluded on all such copies and derivative works. However, this document itself may \nnot be modified in any way, including by removing the copyright notice or references to \nTM FORUM, except as needed for the purpose of developing any document or \ndeliverable produced by a TM FORUM Collaboration Project Team (in which case the \nrules applicable to copyrights, as set forth in the TM FORUM IPR Policy, must be \nfollowed) or as required to translate it into languages other than English. \n \nThe limited permissions granted above are perpetual and will not be revoked by TM \nFORUM or its successors or assigns.  \n \nThis document and the information contained herein is provided on an \u201cAS IS\u201d basis \nand TM FORUM DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE \nINFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP RIGHTS OR ANY \nIMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR \nPURPOSE.  \n \nTM FORUM invites any TM FORUM Member or any other party that believes it has \npatent claims that would necessarily be infringed by implementations of this TM Forum \nStandards Final Deliverable, to notify the TM FORUM Team Administrator and provide \nan indication of its willingness to grant patent licenses to such patent claims in a \nmanner consistent with the IPR Mode of the TM FORUM Collaboration Project Team \nthat produced this deliverable. \n \nThe TM FORUM invites any party to contact the TM FORUM Team Administrator if it is \naware of a claim of ownership of any patent claims that would necessarily be infringed \nby implementations of this TM FORUM Standards Final Deliverable by a patent holder \nthat is not willing to provide a license to such patent claims in a manner consistent with \nthe IPR Mode of the TM FORUM Collaboration Project Team that produced this TM \nFORUM Standards Final Deliverable. TM FORUM may include such claims on its \nwebsite but disclaims any obligation to do so. \n \nTM FORUM takes no position regarding the validity or scope of any intellectual \nproperty or other rights that might be claimed to pertain to the implementation or use of \nthe technology described in this TM FORUM Standards Final Deliverable or the extent \nto which any license under such rights might or might not be available; neither does it \nrepresent that it has made any effort to identify any such rights. Information on TM \nFORUM's procedures with respect to rights in any document or deliverable produced \nby a TM FORUM Collaboration Project Team can be found on the TM FORUM \nwebsite. Copies of claims of rights made available for publication and any assurances \nof licenses to be made available, or the result of an attempt made to obtain a general \nlicense or permission for the use of such proprietary rights by implementers or users of \nthis TM FORUM Standards Final Deliverable, can be obtained from the TM FORUM \nTeam Administrator. TM FORUM makes no representation that any information or list \n\n\nof intellectual property rights will at any time be complete, or that any claims in such list \nare, in fact, Essential Claims. \n \nDirect inquiries to the TM Forum office:  \n \n181 New Road, Suite 304 \nParsippany, NJ 07054, USA \nTel No.  +1 862 227 1648 \nTM Forum Web Page: www.tmforum.org \n \n \n \n \n \n \n\n\nTable of Contents \nNotice .................................................................................................................... 2 \nTable of Contents .................................................................................................. 4 \n1. \nOverview ........................................................................................................ 5 \n2. \neTOM Processes, SID Data Entities and Functional Framework Functions .... 7 \n2.1. \neTOM business activities ................................................................... 7 \n2.2. \nSID ABEs ........................................................................................... 8 \n2.3. \neTOM L2 - SID ABEs links ................................................................. 8 \n2.4. \nFunctional Framework Functions ....................................................... 9 \n3. \nTM Forum Open APIs & Events ................................................................... 20 \n3.1. \nExposed APIs .................................................................................. 20 \n3.2. \nDependent APIs ............................................................................... 22 \n3.3. \nEvents .............................................................................................. 25 \n4. \nMachine Readable Component Specification ............................................... 27 \n5. \nReferences ................................................................................................... 28 \n5.1. \nTMF Standards related versions ...................................................... 28 \n5.2. \nFurther resources............................................................................. 28 \n6. \nAdministrative Appendix ............................................................................... 29 \n6.1. \nDocument History ............................................................................ 29 \n6.1.1. Version History............................................................................. 29 \n6.1.2. Release History ............................................................................ 29 \n6.2. \nAcknowledgments ............................................................................ 30"}
{"tmforumApiId": "TMFC007", "id": "TMFC007-chunk-2", "chunkIndex": 2, "totalChunks": 6, "apiName": "Service Order Management v1.2.1", "title": "TMFC007_Service_Order_Management_v1.2.1 (Part 2/6)", "documentType": "Tmforum api user guide", "text": "1. Overview \n \nComponent \nName \nID \nDescription \nODA \nFunctional \nBlock \nService Order \nManagement \nTMFC007 The SOM is the entry point of the Production \nDomain. It is in charge of Customer-Facing-\nService (CFS) delivery on resources \n(network and service platforms equipment). \nTo achieve delivery of a CFS, the SOM \norchestrates the service order delivery \nprocess which: \n\u2022 \nIdentifies the possible technical \nsolutions (RFS level) and chooses \none, using the catalogue rules of \nchoice, the technical inventory and \nthe configuration of the service order. \n\u2022 \nSelects the resources (servers, \nequipment, etc.) and their instances. \n\u2022 \nTriggers work orders when \ntechnicians need to take actions \n\u2022 \nRequests the ROM to update \nselected resource instances to \ndeliver CFS. Request sent to the \nROM contains the CFS configuration \nand the list of resource instances to \nupdate. \n\u2022 \nTriggers tests to ensure the correct \ndelivery of the service \n \nSOM components can collaborate, so a \nSOM can also be triggered to deliver a \nsubset of a technical solution (RFS level). \nService Orders can correspond to \ncustomer's Product Orders or to operator's \ninternal needs to deploy new infrastructures \nor to develop its technical solutions. \nProduction \n \n \n\n\n \n \n \n \n \n\n\n2. eTOM Processes, SID Data Entities and \nFunctional Framework Functions \n2.1. eTOM business activities \neTOM business activities this component is responsible for are: \nIdentifier Level Business Activity \nName \nDescription \n1.4.5 \nL2 \nService \nConfiguration & \nActivation \nAllocation, implementation, configuration, \nactivation and testing of specific services \nto meet customer requirements. \n1.4.5.1 \nL3 \nDesign Solution \nDevelop an end-end specific service design \nwhich complies with a particular customer's \nrequirement \n1.4.5.2 \nL3 \nAllocate Specific \nService Parameters \nto Services \nIssue service identifiers for new services. \n1.4.5.3 \nL3 \nTrack & Manage \nService Provisioning \nEnsure service provisioning activities are \nassigned, managed and tracked efficiently. \n1.4.5.4 \nL3 \nImplement, configure \n& activate service \nImplement, configure and activate the specific \nservices allocated against an issued service \norder. \n1.4.5.6 \nL3 \nIssue Service Order \nIssue correct and complete service orders \n1.4.5.7 \nL3 \nReport service \nprovisioning \nMonitor the status of service orders, provide \nnotifications of any changes and provide \nmanagement reports. \n1.4.5.8 \nL3 \nClose Service Order \nClose a service order when the service \nprovisioning activities have been completed \n1.5.5 \nL2 \nResource Order \nManagement \nResource Order Management business \nprocess directs and controls ordering, \nscheduling, and allocation of resources \n(such as materials, equipment, and \npersonnel) within the business. \n1.5.5.6 \nL3 \nManage Resource \nOrder Capture \nManage Resource Order Capture is \nresponsible for directing and controlling the \ncapture and collection of resource orders from \ninternal and external customers. \n1.5.5.6.1 \nL4 \nInitiate Resource \nOrder Capture * \nInitiate Resource Order Capture business \nactivity is responsible for the initial activity of \ncapturing and collecting resource orders from \ninternal and external customers. \n1.5.5.7 \nL3 \nManage Resource \nWork Order \nManage Resource Order Work business \nactivity directs and controls all work that are \nrequired to fulfill an approved resource order \nby ensuring the work related to the order is \n\n\nIdentifier Level Business Activity \nName \nDescription \nplanned, executed and closed in a timely and \nefficient manner. \n1.5.5.7.1 \nL4 \nInitiate Resource \nWork Order * \nInitiate Resource Work Order business activity \nstarts a new work order for a specific resource \nalong with all work orders tasks, roles and \nsupporting resources that are need. \n \n*to notice, only these L4 of these L3 and L2 are covered by TMFC007. \n2.2. SID ABEs \nSID ABEs this component is responsible for are: \nSID ABE \nLevel 1 \nSID ABE L1 Definition \nSID ABE \nLevel 2 \n(or set of \nBEs)* \nSID ABE \nLevel 2 \nDefinition \nService \nOrder \nThe Service Order ABE contains entities that \nrepresent a type of Request that \ndecomposes a Customer Order's products \ninto the services associated with a \nServiceOrder through which the products \nare realized. \n \n \n*: if SID ABE Level 2 is not specified this means that all the L2 business entities must \nbe implemented, else the L2 SID ABE Level is specified.  \nAs for TMFC003 Product Order Delivery Orchestration and Management, we also need \nto describe Orchestration Plan and delivery process to manage here at Service Order \nlevel. Refer to Jira paragraph at the end of the document. \n2.3. eTOM L2 - SID ABEs links \neTOM L2 vS SID ABEs links for this ODA Component.  \n\n\n \n2.4. Functional Framework Functions \nFunction \nID \nFunction \nName \nFunction Description \nAggregate \nFunction \nLevel 1 \nAggregate \nFunction \nLevel 2 \n571 \nService \nDelivery Due \nDate \nCalculation \nService Delivery Due Date \nCalculation functions \ncalculates the service delivery \ndue date using network \ncapacity, access provider \nselection and work center \nintelligence (including \nworkload and capacity). \nService \nOrder \nManagement \nService \nOrder \nInitialization \n1061 \nService Order \nInitiation \nService Order Initiation \nfunction issues valid and \ncomplete service orders. \nAs part of order \nissuing/publication, additional \ndata might be obtained or \nderived to support \ndownstream functions that are \nnot provided in the service \norder request \nService \nOrder \nManagement \nService \nOrder \nInitialization \n1219 \nService Order \nRequest \nConsistency \nCheck \nThe Service Order Request \nConsistency Check Function \nallows, when receiving a \nService Order request \nprepared and transmitted by \nanother system, to check its \nconsistency. \nService \nOrder \nManagement \nService \nOrder \nInitialization"}
{"tmforumApiId": "TMFC007", "id": "TMFC007-chunk-3", "chunkIndex": 3, "totalChunks": 6, "apiName": "Service Order Management v1.2.1", "title": "TMFC007_Service_Order_Management_v1.2.1 (Part 3/6)", "documentType": "Tmforum api user guide", "text": "Function \nID \nFunction \nName \nFunction Description \nAggregate \nFunction \nLevel 1 \nAggregate \nFunction \nLevel 2 \n1220 \nInternal \nService Order \nInitialization \nThe Internal Service Order \nInitialization Function permit \nto initialize Customer Facing \nService Orders (a.k.a. CFS \nOrders) for operator internal \nneeds, for example to change \n(part of) a technical solution \nand migrate operational \nInstalled CFS on the new \nsolution elements (ex: VOIP \nH323 -> VOIP SIP). \nService \nOrder \nManagement \nService \nOrder \nInitialization \n592 \nService \nParameters \nReservation \nService Parameters \nReservation reserves the right \nservice parameters based on \nservice specification and \nservice inventory for a service \norder \nService \nOrder \nManagement \nService \nAvailability \n584 \nService \nActivation \nPlanning \nService Activation Planning \nprovides planning of service \nactivation to access, plan and \ngather additional information \nfor service activation \nService \nOrder \nManagement \nService \nOrder \nOrchestration \n588 \nService \nOrchestration \nConfiguration \nService Orchestration \nConfiguration function \nprovides composition of a \nservice configuration plan \naccording to the required \nservice actions and sent to \nService Order Orchestration \nand/or Service Activation \nManagement \nService \nOrder \nManagement \nService \nOrder \nOrchestration \n591 \nService \nParameters \nAllocation \nService Parameters Allocation \nprovides allocation of the right \nservice parameters to fulfill \nservice orders \nService \nOrder \nManagement \nService \nOrder \nOrchestration \n596 \nService Order \nTransfer \nSupervision \nOversees the transfer of \nService Order Requests to \nappropriate resource \nproviders. \nService \nOrder \nManagement \nService \nOrder \nOrchestration \n598 \nService Order \nOrchestration \nThe Service Order \nOrchestration function \nprovides workflow and \norchestration capabilities for a \ndedicated Service (CFS) \nOrder. \nOrchestration is needed \nwhen: \nService \nOrder \nManagement \nService \nOrder \nOrchestration \n\n\nFunction \nID \nFunction \nName \nFunction Description \nAggregate \nFunction \nLevel 1 \nAggregate \nFunction \nLevel 2 \n\u2022 \nthe technical solution \nincludes the \nexpansion of the \noperator Installed \nResources or the \npurchase of a partner \nproduct (ex: local loop \npurchase) \n\u2022 \na work order is \nnecessary at the \ndelivery address or \nsomewhere in the \noperator network \n\u2022 \npart of the delivery \nprocess or checks \nneeds to be delegated \nto another Service \nOrder Manager \n\u2022 \ncontributing or support \nsystems must be \ninformed \nExample: to deliver a VOIP \nservice, it will orchestrate \nactions on Access Network \nFactory, VOIP service \nplatform and CPE. \nService Order Orchestration \nwill also orchestrate and \nmanage dependencies \nbetween related Service \nOrder items of Service Order. \n734 \nService Data \nCollection \nThe Service Data Collection \nfunction gathers any needed \nservice data to aid in the \nverification and issuance of a \ncomplete and valid service \norder as well as data \nnecessary to address \ndependencies between \nservice and/or resource \norders. \nService \nOrder \nManagement \nService \nOrder \nOrchestration \n963 \nService Task \nItem \nDecomposition \nService Task Item \nDecomposition: By a request \nfor an orchestration of a \nservice the service needs to \nbe analyzed and decomposed \ninto the part-actions \nService \nOrder \nManagement \nService \nOrder \nOrchestration \n\n\nFunction \nID \nFunction \nName \nFunction Description \nAggregate \nFunction \nLevel 1 \nAggregate \nFunction \nLevel 2 \nnecessary to take to fulfill the \nrequested orchestration. The \nService may consist of \nseveral services and may use \na number of Resources. It \nmay also be controlled by \nseveral parameters for \noptional behaviors. This \ncomposition of the Service is \ngiven by configuration data \navailable from Catalog \napplications and the Service \nCapability Orchestration \napplication. \n968 \nService Work \nItem Sequence \nExecution \nService Work Item Sequence \nExecution function executes \neach individual item in \nsequence of the service \norchestration to fulfill, or roll \nback according to a pre-\ndefined configuration, and \nreports the sequence \nexecution result. \nBecause of the \u201cService \nDecomposition\" of an \norchestration request the \nresult may be several actions \nthat needs to take place in a \nspecific sequence. \nService \nOrder \nManagement \nService \nOrder \nOrchestration \n969 \nService Work \nItem Sequence \nExecution \nConfiguration \nThe \u201cService Work Item \nSequence Execution\" function \ncontrols so that the sequence \nis fulfilled or rolled back. The \nrules for the sequence \nexecution will set the \nconditions for the fulfillment, \nor roll-back, and for the \nreporting and notification. The \n\u201cService Task Item Sequence \nCarry Through configuration\" \nis a management of the \napplication function that \ndefines how the execution of \nthe orchestration sequence \nwill be done. \nService \nOrder \nManagement \nService \nOrder \nOrchestration \n632 \nService \nTermination \nPoints \nDetermining \nService Termination Points \nDetermining determines the \ntermination points i.e. the \nappropriate service provider \nService \nOrder \nManagement \nService \nTechnical \nSolution \nIdentification \n\n\nFunction \nID \nFunction \nName \nFunction Description \nAggregate \nFunction \nLevel 1 \nAggregate \nFunction \nLevel 2 \nentry point to support the \nCustomer's service request. \n735 \nAccess \nProvider \nSelection \nAccess Provider Selection \nfunction selects an access \nprovider among identified \navailable access providers or \naccess technologies at the \ngiven location, based on \nbusiness rules. \nService \nOrder \nManagement \nService \nTechnical \nSolution \nIdentification \n1141 \nInstalled \nResources \nIdentification \nInstalled Resources \nIdentification Function \nidentifies the installed \nresources to update, as part \nof the chosen technical \nsolution, to deliver the \nordered service (CFS). \nThis information enrich the \nCFS order and the CFS. \nThis choice is based on \nservice catalogue rules \n(between RFS specification \nand Resources specification) \nand it can be necessary to \ncheck the installed resources \navailability, occupancy, etc. \nvia the Resource Availability \nfunction. \nCloud example: In case of a \ncloud service, the Service \nOrder Delivery process only \nidentifies the equipment in \ncharge of the management of \nthe cloud infrastructure and it \nwill be informed of the \nordered service \ncharacteristics. Depending on \nits own rules, the cloud \ninfrastructure manager will \ndecide or not to immediately \nallocate and configure all or \npart of the required resources. \nSo the first usage request of \nthe cloud service can trigger \nthe effective choice and \nconfiguration of the necessary \nresources and these \nresources can change \nbetween usages. In this case \nthe end of the delivery \nService \nOrder \nManagement \nInstalled \nResources \nIdentification"}
{"tmforumApiId": "TMFC007", "id": "TMFC007-chunk-4", "chunkIndex": 4, "totalChunks": 6, "apiName": "Service Order Management v1.2.1", "title": "TMFC007_Service_Order_Management_v1.2.1 (Part 4/6)", "documentType": "Tmforum api user guide", "text": "Function \nID \nFunction \nName \nFunction Description \nAggregate \nFunction \nLevel 1 \nAggregate \nFunction \nLevel 2 \nprocess is assumed by the \nmanager of the cloud \ninfrastructure.  \nNote: This function is globally \na part of the technical solution \nidentification. \n733 \nService Order \nDecomposition \nThe Service Order \nDecomposition Function \nallows in the context of a \nService Order to prepare \nResource Order, Service \nOrder which will be delegated \nto another system, Supplier \nOrder, Stock Item Order or \nWork Order with the \nnecessary information (the \neffective update in the order \nrepositories will be supported \nby the corresponding Order \nRepository Management \nfunctions). \nIn the case of a Service \nassociated with an existing \nInternal Resource Type, this \nfunction also allows to:  \n\u2022 check if a corresponding \nInstalled Resource is \noperational in the resource \ninstalled base, and determine \nthe operation to be performed \nat Resource level (creation or \nmodification) \n\u2022 eventually group in the same \nResource order several \nordered services, based on \nthe same Customer Facing \nService Specification (a.k.a. \nCFS specification), and/or \nidentified to be delivered at \nthe same time by the Service \nOrder Delivery Orchestration. \nService \nOrder \nManagement \nService \nOrder \nDelivery \nPreparation \n1217 \nService Order \nNeeds \nIdentification \nThe Service Order Needs \nIdentification Function allows \nin the context of a Service \nOrder to query catalogues \nand installed bases to identify \nwhat needs to be delivered: \nresource specification and its \nconfiguration, service \nService \nOrder \nManagement \nService \nOrder \nDelivery \nPreparation \n\n\nFunction \nID \nFunction \nName \nFunction Description \nAggregate \nFunction \nLevel 1 \nAggregate \nFunction \nLevel 2 \nspecification (CFSSpec), \nintervention (WorkSpec), \nsupplier product, related to \nthe ordered service. \n595 \nService Order \nCompletion \nCompletes the service order \nwhen all resource orders have \nbeen completed. \nService \nOrder \nManagement \nService \nOrder \nCompletion \n600 \nService Order \nValidation \nThe Service Order Validation \nfunction validates the service \norder request based on \ncontract, catalog, and \nprovisioning rules. \nService \nOrder \nManagement \nService \nOrder \nCompletion \n583 \nActivation \nNotification \nActivation Notification function \nprovides notifications on \nsuccessful activation and, in \ncases of exceptions send \nfallouts to Service Order \nOrchestration and manage \nrollbacks activities (if \napplicable) \nService \nOrder \nManagement \nService \nOrder \nRepository \nManagement \n594 \nService Order \nStorage \nService order Storage \nfunction stores the service \norder into an appropriate data \nstore. \nService \nOrder \nManagement \nService \nOrder \nRepository \nManagement \n599 \nService Order \nTracking \nThe Service Order Tracking \nfunction tracks and manages \nthe events and the lifecycle \nrelated to the Service (CFS) \nOrder and to its items (e.g.: \nservice order lines). \nIt gathers Service Order items \ndelivery events from Service \nOrder Orchestration and \nmanages related Service \nOrder lifecycle and Installed \nCFS lifecycle (via the Installed \nService Management \nfunction). \nDepending on the Service \nOrder (or any of its elements) \nevents, and on the \nimplemented business rules, \nthis function can decide to \nnotify other systems (for \nexample in case of delivery \nproblems or delays) \u2013 via the \nService \nOrder \nManagement \nService \nOrder \nRepository \nManagement \n\n\nFunction \nID \nFunction \nName \nFunction Description \nAggregate \nFunction \nLevel 1 \nAggregate \nFunction \nLevel 2 \nbusiness event publication \nfunction. \n597 \nService Order \nExposure \nService Order Exposure \nprovides exposure of the \nstatus on the overall service \norder. \nFulfillment \nIntegration \nManagement \nService \nFulfillment \nAccess \nManagement \n570 \nSolution \nServices \nDesign \nManagement \nSolution Services Design \nManagement function \nsupports the end to end \nservice design. It applies \nengineering rules to \ndetermine required network \nfacilities, equipment \nconfigurations and the \nmethod and access path to \nthe customer site or location \nof service termination. \nThis function also establishes \nand manages the detailed \ndesign tasks required to issue \nthe work orders. \nService \nConfiguration \n& Activation \nService \nConfiguration \n589 \nCross Services \nDependencies \nConfiguration \nCross Services Dependencies \nConfiguration function \nprovides support for \nappropriately considered \ncross service dependencies \nas part of the configuration \nactivities to fulfill a service \norder \nService \nConfiguration \n& Activation \nService \nConfiguration \n590 \nService \nConfiguration \nThe Service Configuration \nfunction is in charge of \nconfiguring the specific \nservice and its parameters as \nappropriate for the fulfillment \nof a service order \nService \nConfiguration \n& Activation \nService \nConfiguration \n341 \nService \nActivation \nService Activation function for \nservices/products sold by \naffiliates. \nService \nConfiguration \n& Activation \nService \nActivation \n342 \nMass Service \nPre-activation \nMass Service Pre-activation \nof services to prepare for a \nswift activation at sales. E.g., \nsubsequent affiliate sales. \nService \nConfiguration \n& Activation \nService \nActivation \n585 \nService \nConfiguration \nActivation \nService Configuration \nActivation implements and \nactivates the specific service \nconfiguration against the \nservice configuration plan \nService \nConfiguration \n& Activation \nService \nActivation"}
{"tmforumApiId": "TMFC007", "id": "TMFC007-chunk-5", "chunkIndex": 5, "totalChunks": 6, "apiName": "Service Order Management v1.2.1", "title": "TMFC007_Service_Order_Management_v1.2.1 (Part 5/6)", "documentType": "Tmforum api user guide", "text": "Function \nID \nFunction \nName \nFunction Description \nAggregate \nFunction \nLevel 1 \nAggregate \nFunction \nLevel 2 \n(including activation of CPE if \npart of the service) \n16 \nFallout \nAutomated \nCorrection \nFallout Automated Correction \nfunction tries to automatically \nfix fallouts in workflows before \nthey go to a human for \nhandling. This includes a \nFallout Rules Engine that \nprovides the capability to \nhandling various errors or \nerror types based on built \nrules. These rules can \nfacilitate auto correction, \ncorrection assistance, \nplacement of errors in the \nappropriate queues for \nmanual handling, as well as \naccess to various systems. \nFallout \nManagement \nFallout \nCorrection \nManagement \n17 \nFallout \nCorrection \nInformation \nCollection \nFallout Correction Information \nCollection collects relevant \ninformation for errors or \nsituations that cannot be \nhandled via Fallout Auto \nCorrection. The intent is to \nreduce the time required by \nthe technician in diagnosing \nand fixing the fallout. \nFallout \nManagement \nFallout \nCorrection \nManagement \n19 \nFallout Manual \nCorrection \nQueuing \nFallout Manual Correction \nQueuing function provides the \nrequired functionality to place \nerror fallout into appropriate \nqueues to be handled via \nvarious staff or workgroups \nassigned to handle or fix the \nvarious types of fallout that \noccurs during the fulfillment \nprocess. This includes the \nability to create and configure \nqueues, route errors to the \nappropriate queues, as well \nas the ability for staff to \naccess and address the \nvarious fallout instances \nwithin the queues. \nFallout \nManagement \nFallout \nCorrection \nManagement \n21 \nFallout \nOrchestration \nThe Fallout Orchestration \nfunction provides workflow \nand orchestration capability \nacross Fallout Management. \nFallout \nManagement \nFallout \nCorrection \nManagement \n\n\nFunction \nID \nFunction \nName \nFunction Description \nAggregate \nFunction \nLevel 1 \nAggregate \nFunction \nLevel 2 \n24 \nPre-populated \nFallout \nInformation \nPresentation \nPre-populated Fallout \nInformation Presentation \nautomatically position the \nanalyzer on appropriate \nscreens pre-populated with \ninformation about the order(s) \nthat's subject for fallout \nhandling. \nFallout \nManagement \nFallout \nCorrection \nManagement \n756 \nFallout Rule \nBased Error \nCorrection \nFallout Rule Based Error \nCorrection function provides \nthe capability to handle \nvarious errors or error types \nbased on pre-defined rules. \nThese rules can facilitate auto \ncorrection. \nFallout \nManagement \nFallout \nCorrection \nManagement \n18 \nFallout \nManagement \nto Fulfillment \nApplication \nAccessing \nFallout Management to \nFulfillment Application \nAccessing function provides a \nvariety of tools to facilitate \nFallout Management access \nto other applications and \nrepositories to facilitate proper \nFallout Management. This \ncan include various general \naccess techniques such as \nmessaging, publish and \nsubscribe, etc. as well as \nspecific APIs and contracts to \nperform specific queries or \nupdates to various \napplications or repositories \nwithin the fulfillment domain. \nFallout \nManagement \nFallout \nRepository \nManagement \n20 \nFallout \nNotification \nFallout Notification function \nprovides the means to alert \npeople or workgroups of \nsome fallout situation. This \ncan be done via a number of \nmeans, including email, \npaging, (Fallout management \ninterface bus) etc. This \nfunction is done via business \nrules. \nFallout \nManagement \nFallout \nRepository \nManagement \n22 \nFallout \nReporting \nFallout Reporting provides \nvarious reports regarding \nFallout Management, \nincluding statistics on fallout \nper various times periods (per \nhour, week, month, etc.) as \nFallout \nManagement \nFallout \nRepository \nManagement \n\n\nFunction \nID \nFunction \nName \nFunction Description \nAggregate \nFunction \nLevel 1 \nAggregate \nFunction \nLevel 2 \nwell as information about \nspecific fallout. \n23 \nFallout \nDashboard \nSystem Log-in \nAccessing \nFallout Dashboard System \nLog-in Accessing provides \nauto logon capability into \nvarious applications needed \nto analyze and fix fallout. \nFallout \nManagement \nFallout \nRepository \nManagement \n  \n \n \n\n\n3. TM Forum Open APIs & Events \n \nThe following part covers the APIs and Events; This part is split in 3: \n\u2022 \nList of Exposed APIs - This is the list of APIs available from this component.  \n\u2022 \nList of Dependent APIs - In order to satisfy the provided API, the  component \ncould require the usage of this set of required APIs.  \n\u2022 \nList of  Events (generated & consumed ) - The events which the component \nmay generate is listed in this section along with a list of the events which it may \nconsume. Since there is a possibility of multiple sources and receivers for each \ndefined event. \n \n<Note to be inserted into ODA Component specifications: If a new Open API is \nrequired, but it does not yet exist. Then you should include a textual description of the \nnew Open API, and it should be clearly noted that this Open API does not yet exist. In \naddition, a Jira epic should be raised to request the new Open API is added, and the \nOpen API team should be consulted. Finally, a decision is required on the feasibility of \nthe component without this Open API. If the Open API is critical then the component \nspecification should not be published until the Open API issue has been resolved. \nAlternatively if the Open API is not critical, then the specification could continue to \npublication. The result of this decision should be clearly recorded.> \n \n3.1. Exposed APIs \nFollowing diagram illustrates API/Resource/Operation:  \n \n \n \n\n\n \nAPI ID \nAPI Name \nMandatory / \nOptional \nOperations \nTMF641 Service Ordering \nManagement \nMandatory \nserviceOrder: \n- GET \n- GET /id \n- POST \n- PATCH \n- DELETE \ncancelServiceOrder: \n- GET \n- GET /id \n- POST \nTMF701 Process Flow \nOptional \nprocessFlow: \n- GET \n- GET /id \n- POST \n- DELETE /id \ntaskFlow: \n- GET \n- GET /id \n- PATCH /id \nTMF688 Event Management \nOptional \nd \n \n \n \n\n\n3.2. Dependent APIs \nFollowing diagram illustrates API/Resource/Operation potentially used by the Service \nOrder Management component:"}
{"tmforumApiId": "TMFC007", "id": "TMFC007-chunk-6", "chunkIndex": 6, "totalChunks": 6, "apiName": "Service Order Management v1.2.1", "title": "TMFC007_Service_Order_Management_v1.2.1 (Part 6/6)", "documentType": "Tmforum api user guide", "text": "API ID \nAPI Name \nMandatory \n/ Optional \nOperations \nRationales \nTMF632 \nParty \nManagement API \nOptional \nindividual: \n- GET \n- GET /id \norganization: \n- GET \n- GET /id \nn/a \nTMF633 \nService Catalog \nManagement API  \nMandatory \nserviceSpecification: \n- GET \n- GET /id \nas \nillustrated \ninto IG1228 \nper TMFS00 \nTMF634 \nResource Catalog \nManagement API \nOptional  \nresourceSpecification: \n- GET \n- GET /id \n \nTMF638 \nService Inventory \nManagement API \nMandatory \nservice: \n- GET \n- GET /id \n- POST \n- PATCH \n- DELETE \nas \nillustrated \ninto IG1228 \nper TMFS00 \nTMF639 \nResource \nInventory \nManagement  API \nOptional \nresource: \n- GET \n- GET /id \nn/a \nTMF640 \nService Activation \n& Configuration \nAPI \nOptional \nmonitor: \n- GET \n- GET /id \nn/a \nTMF641  \nService Ordering \nManagement API \nOptional \nserviceOrder: \n- GET \n- GET /id \n- POST \n- PATCH \n- DELETE \ncancelServiceOrder: \n- GET \n- GET /id \n- POST \nn7a \nTMF645 \nService \nQualification \nManagement API \nOptional \ncheckServiceQualification: \n- GET \n- GET /id \n- POST \n- PATCH \nn/a \nTMF646 \n Appointment \nManagement API \nOptional \nappointment: \n- GET \n- GET /id \n- POST \n- PATCH \nsearchTimeSlot: \n- GET \n- GET /id \nn/a \n\n\nAPI ID \nAPI Name \nMandatory \n/ Optional \nOperations \nRationales \n- POST \n- PATCH \nTMF652 \nResource \nOrdering \nManagement API \nOptional \nresourceOrder: \n- GET \n- GET /id \n- POST \n- PATCH \n- DELETE \ncancelResourceOrder: \n- GET \n- GET /id \n- POST \n- PATCH \n- DELETE \nn/a \nTMF653 \nService Test \nManagement API \nOptional \nserviceTest: \n- GET \n- GET /id \nserviceTestSpecification: \n- GET \n- GET /id \nn/a \nTMF669 \nParty Role \nManagement API \nOptional \npartyRole: \n- GET \n- GET /id \nn/a \nTMF672 \nUser Role \nPermission \nManagement API \nOptional \npermission: \n- GET \n- GET /id \nn/a \nTMF673 \n \nGeographic \nAddress \nManagement API \n \n \nOptional \ngeographicAddress: \n- GET \n- GET /id \ngeographicSubAddress: \n- GET \n- GET /id \ngeographicAddressValidation: \n- GET \n- GET /id \n- POST \nn/a \nTMF674 \nGeographic Site \nManagement API \nOptional \ngeographicLocation: \n- GET \n- GET /id \nn/a \nTMF675 \nGeographic \nLocation \nManagement API \nOptional \ngeographicSite: \n- GET \n- GET /id \nn/a \nTMF681 \nCommunication \nManagement API \nOptional \ncommunicationMessage: \n- GET \n- GET /id \nn/a \nTMF685 \nResource Pool \nManagement API \nOptional \nreservation: \n- GET \n \n\n\nAPI ID \nAPI Name \nMandatory \n/ Optional \nOperations \nRationales \n- GET /id \n- POST \n- PATCH \n- DELETE \nresourcePool: \n- GET \n- GET /id \nTMF688 \nEvent \nManagement API \nOptional \nevent: \n- GET \n- GET /id \nn/a \nTMF697 \nWork Order \nManagement API \nOptional \nworkOrder: \n- GET \n- GET /id \nn/a \nTMF701 \nProcess Flow \nManagement API \nOptional \nprocessFlow: \n- POST \n- GET \n- GET /id \n- PATCH \nn/a \n \n3.3. Events \nThe diagram illustrates the Events which the component may publish and the Events \nthat the component may subscribe to and then may receive. Both lists are derived from \nthe APIs listed in the preceding sections. \n\n\n \n \nEvent name always follow same pattern: <<Resource>> + <<Type of Event>> + \n\"Event\" \nThe type of event could be: \n\u2022 \nCreate : a new resource has been created (following a POST). \n\u2022 \nDelete: an existing resource has been deleted. \n\u2022 \nAttributeValueChange: an attribute from the resource has changed - event \nstructure allows to pinpoint the attribute. \n\u2022 \nInformationRequired: an attribute should be valued for the resource preventing \nto follow nominal lifecycle - event structure allows to pinpoint the attribute. \n\u2022 \nStateChange: resource state has changed. \n \n \n\n\n4. Machine Readable Component Specification \nRefer to the ODA Component table for the machine-readable component specification \nfile for this component. \n \n \n \n\n\n5. References \n5.1. TMF Standards related versions \nStandard \nVersion(s) \nSID \n23.5 \neTOM \n23.5 \nFunctional Framework  \n23.5 \n5.2. Further resources \nService Order management is used in following ig1228: \n\u2022 \nTMFS004: Order Delivery - Fiber contract \n\u2022 \nTMFS007: B2B use-case re-using MEF \n\u2022 \nTMFS008: Service and Resource order management for postpaid mobile \nsubscribers \n\u2022 \nTMFS009: Service and Resource order management for postpaid mobile \nsubscribers with provisioning in 5G Core \n\u2022 \nTMFS010: ODA flow with NaaS Support \n \n \n\n\n6. Administrative Appendix \n6.1. Document History \n6.1.1. \nVersion History \nVersion \nNumber \nDate \nModified \nModified by: \nDescription of changes \n1.0.0 \n01-Oct-2021 \nGoutham Babu \nFinal edits prior to publication \n1.0.0 \n05-Aug-2022 \nGoutham Babu \nFinal edits prior to publication \n1.0.1 \n25 Jul 2023  \nIan Turkington \nNo content changed, simply a layout \nchange to match template 3. Separated \nthe YAML files to a managed repository. \n1.0.1 \n15-Aug-2023 \nAmaia White  \nFinal edits prior to publication \n1.1.1 \n01-Mar-2024 \nAmaia White \nFinal edits prior to publication \n1.2.1 \n25 Jun 2024  \nGaetano \nBiancardi  \nUpdated for new ODA Component \ntemplate \nUpdated to odf v23.5 \nRemoved TMF672 as mandatory \ndependent API. \nExposed API, removed: \nTMF688 Event Mgmt \nTMF672 User Roles and Permissions  \nDependent API, removed \nTMF688 Event Mgmt \n \n6.1.2. \nRelease History \nRelease \nStatus \nDate \nModified \nModified by: \nDescription of changes \nPre-production \n01-Oct-2021 \nGoutham Babu \nInitial release of document \nPre-production \n05-Aug-2022 \nGoutham Babu \nInitial release of document \nPre-production  15-Aug-2023  \nAmaia White  \nNew release 1.0.1  \nProduction \n06-Oct-2023 \nAdrienne \nWalcott \nUpdated to reflect TM Forum Approved \nstatus \nPre-production \n01-Mar-2024 \nAmaia White \nNew release 1.1.1 \nProduction \n26-Apr-2024 \nAdrienne \nWalcott \nUpdated to reflect TM Forum Approved \nstatus \nPre-production \n02-Jul-2024 \nAmaia White \nNew release 1.2.1 \nProduction \n30-Aug-2024 \nAdrienne \nWalcott \nUpdated to reflect TM Forum Approved \nstatus \n \n\n\n6.2. Acknowledgments \nTeam Member (@mention) \nCompany \nRole* \nRoland Leners  \nSatec \nReviewer \nSylvie Demarest  \nOrange \nEditor \nAbel Ruiz Huerta  \nSatec \nReviewer  \nLudovic Robert  \nOrange \nReviewer  \nCecile Ludwichowski  \nOrange \nReviewer  \nIan Turkington  \nTM Forum  \nAdditional Inputs  \nHugo Vaughan (TM Forum)  \nTM Forum  \nAdditional Inputs \nGaetano Biancardi  \nAccenture \nEditor \n*Select from: Project Chair, Project Co-Chair, Author, Editor, Key Contributor, \nAdditional Input, Reviewer"}
