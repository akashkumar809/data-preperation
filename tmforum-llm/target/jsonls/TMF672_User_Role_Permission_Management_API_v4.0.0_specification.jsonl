{"tmforumApiId": "TMF672", "id": "TMF672-chunk-1", "chunkIndex": 1, "totalChunks": 11, "apiName": "User Role Permission Management API v4.0.0 specification", "title": "TMF672_User_Role_Permission_Management_API_v4.0.0_specification (Part 1/11)", "documentType": "Tmforum api user guide", "text": "TM Forum Specification \n \n \nUser Roles and Permissions \nManagement API User Guide \n \n \n \n \n \nTMF672 \nTeam Approved Date: 28-May-2020 \n \n \nRelease Status: Production \nApproval Status: TM Forum Approved \nVersion 4.0.1 \nIPR Mode: RAND \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 2 of 43 \nNOTICE \nCopyright \u00a9 TM Forum 2020. All Rights Reserved. \n \nThis document and translations of it may be copied and furnished to others, and derivative works that comment on \nor otherwise explain it or assist in its implementation may be prepared, copied, published, and distributed, in \nwhole or in part, without restriction of any kind, provided that the above copyright notice and this section are \nincluded on all such copies and derivative works. However, this document itself may not be modified in any way, \nincluding by removing the copyright notice or references to TM FORUM, except as needed for the purpose of \ndeveloping any document or deliverable produced by a TM FORUM Collaboration Project Team (in which case the \nrules applicable to copyrights, as set forth in the TM FORUM IPR Policy, must be followed) or as required to \ntranslate it into languages other than English. \n \nThe limited permissions granted above are perpetual and will not be revoked by TM FORUM or its successors or \nassigns. \n \nThis document and the information contained herein is provided on an \"AS IS\" basis and TM FORUM DISCLAIMS \nALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE \nINFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP RIGHTS OR ANY IMPLIED WARRANTIES OF \nMERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. \n \nTM FORUM invites any TM FORUM Member or any other party that believes it has patent claims that would \nnecessarily be infringed by implementations of this TM Forum Standards Final Deliverable, to notify the TM FORUM \nTeam Administrator and provide an indication of its willingness to grant patent licenses to such patent claims in a \nmanner consistent with the IPR Mode of the TM FORUM Collaboration Project Team that produced this deliverable. \n \nThe TM FORUM invites any party to contact the TM FORUM Team Administrator if it is aware of a claim of \nownership of any patent claims that would necessarily be infringed by implementations of this TM FORUM \nStandards Final Deliverable by a patent holder that is not willing to provide a license to such patent claims in a \nmanner consistent with the IPR Mode of the TM FORUM Collaboration Project Team that produced this TM FORUM \nStandards Final Deliverable. TM FORUM may include such claims on its website but disclaims any obligation to do \nso. \n \nTM FORUM takes no position regarding the validity or scope of any intellectual property or other rights that might \nbe claimed to pertain to the implementation or use of the technology described in this TM FORUM Standards Final \nDeliverable or the extent to which any license under such rights might or might not be available; neither does it \nrepresent that it has made any effort to identify any such rights. Information on TM FORUM's procedures with \nrespect to rights in any document or deliverable produced by a TM FORUM Collaboration Project Team can be \nfound on the TM FORUM website. Copies of claims of rights made available for publication and any assurances of \nlicenses to be made available, or the result of an attempt made to obtain a general license or permission for the \nuse of such proprietary rights by implementers or users of this TM FORUM Standards Final Deliverable, can be \nobtained from the TM FORUM Team Administrator. TM FORUM makes no representation that any information or \nlist of intellectual property rights will at any time be complete, or that any claims in such list are, in fact, Essential \nClaims. \n \n \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 3 of 43 \nDirect inquiries to the TM Forum office: \n \n4 Century Drive, Suite 100 \nParsippany, NJ 07054, USA \nTel No. +1 973 944 5100 \nFax No. +1 973 998 7196 \nTM Forum Web Page: www.tmforum.org"}
{"tmforumApiId": "TMF672", "id": "TMF672-chunk-2", "chunkIndex": 2, "totalChunks": 11, "apiName": "User Role Permission Management API v4.0.0 specification", "title": "TMF672_User_Role_Permission_Management_API_v4.0.0_specification (Part 2/11)", "documentType": "Tmforum api user guide", "text": "\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 4 of 43 \nTable of Contents \n \nNOTICE ....................................................................................................................................................................... 2 \nTable of Contents ..................................................................................................................................................... 4 \nList of Tables ............................................................................................................................................................. 6 \nIntroduction .............................................................................................................................................................. 7 \nSAMPLE USE CASES ......................................................................................................................................................... 9 \nUse Case 1: New permission created ......................................................................................................................... 9 \nDescription .............................................................................................................................................................. 9 \nMain Actors ............................................................................................................................................................. 9 \nUse Case Steps ......................................................................................................................................................... 9 \nExample of API Usage in the Context of the Use Case ............................................................................................ 9 \nSuccess Outcome ................................................................................................................................................... 10 \nUse Case 2: New User Role assigned to an individual .............................................................................................. 10 \nDescription ............................................................................................................................................................ 10 \nMain Actors ........................................................................................................................................................... 10 \nUse Case Steps ....................................................................................................................................................... 10 \nExample of API Usage in the Context of the Use Case .......................................................................................... 11 \nSuccess Outcome ................................................................................................................................................... 11 \nSupport of polymorphism and extension patterns ...................................................................................................... 12 \nRESOURCE MODEL ........................................................................................................................................................ 13 \nManaged Entity and Task Resource Models ..................................................................................................... 13 \nPermission resource .............................................................................................................................................. 13 \nUser Role resource ................................................................................................................................................ 16 \nNotification Resource Models .............................................................................................................................. 18 \nPermission Create Event ....................................................................................................................................... 19 \nPermission Attribute Value Change Event ............................................................................................................ 19 \nPermission State Change Event ............................................................................................................................. 20 \nPermission Delete Event........................................................................................................................................ 20 \nUser Role Create Event .......................................................................................................................................... 21 \nUser Role Attribute Value Change Event ............................................................................................................... 21 \nUser Role State Change Event ............................................................................................................................... 21"}
{"tmforumApiId": "TMF672", "id": "TMF672-chunk-3", "chunkIndex": 3, "totalChunks": 11, "apiName": "User Role Permission Management API v4.0.0 specification", "title": "TMF672_User_Role_Permission_Management_API_v4.0.0_specification (Part 3/11)", "documentType": "Tmforum api user guide", "text": "\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 5 of 43 \nUser Role Delete Event .......................................................................................................................................... 22 \nAPI OPERATIONS ........................................................................................................................................................... 23 \nOperations on Permission......................................................................................................................................... 24 \nList permissions ..................................................................................................................................................... 24 \nRetrieve permission ............................................................................................................................................... 26 \nCreate permission ................................................................................................................................................. 27 \nPatch permission ................................................................................................................................................... 32 \nOperations on User Role ........................................................................................................................................... 34 \nList user roles ......................................................................................................................................................... 34 \nRetrieve user role .................................................................................................................................................. 35 \nCreate user role ..................................................................................................................................................... 36 \nPatch user role ....................................................................................................................................................... 38 \nAPI NOTIFICATIONS....................................................................................................................................................... 40 \nRegister listener ........................................................................................................................................................ 40 \nUnregister listener .................................................................................................................................................... 41 \nPublish Event to listener ........................................................................................................................................... 41 \nAcknowledgements ...................................................................................................................................................... 43 \nVersion History.......................................................................................................................................................... 43 \nRelease History ......................................................................................................................................................... 43 \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 6 of 43 \nList of Tables \nN/A \n \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 7 of 43 \nIntroduction \n \nThe following document is the specification of the REST API for user Role and Permission management. It includes \nthe model definition as well as all available operations for creating user permissions to access manageable assets.  \nFor the purpose of this API, the following definitions apply: \n \n\u2022 \nA manageable asset is the realization of something that can be used and managed by users (e.g.: any of the \nresources created as part of a purchased product, a service provided to individuals, a block of personal data \nof an individual, a shopping cart entity\u2026.. ).  \n \n\u2022 \nAn user is the individual who can make use and manage the functions exposed by a given manageable \nasset. It can be the existing registered customer or any other individual who has been granted access to use \nand/or manage the asset  \n \n\u2022 \nA basic permission provides information regarding the access privileges of a given user over manageable \nassets (or different functions within each asset).  \n \n\u2022 \nA privilege defines an independent allowed access level over any of the operations that can be performed \nover a given asset (e.g.: CRUD on the different menu/function/UI elements)  \n \n\u2022 \nA user role is defined as the entity that defines a set of privileges covering various functions and/or \nmanageable assets. When a user is assigned a given role then it is actually allocated all the privileges \ndefined for that roletype and the corresponding permissions are created for that user  \n \nThis API allows the following operations  \nCreate new permission granted by an individual to another individual to access his owned manageable assets  \nRead existing permissions. It can be filtered for specific criteria (e.g.: date recorded, granter, \u2026)  \nRead specific existing permission  \nModify specific existing permission (total or partial update)  \nRead permissions recorded for a specific user as granter  \nRead permissions recorded for a specific user as grantee  \nRead permissions recorded for a specific asset  \nCreate new user role  \nRead existing user roles"}
{"tmforumApiId": "TMF672", "id": "TMF672-chunk-4", "chunkIndex": 4, "totalChunks": 11, "apiName": "User Role Permission Management API v4.0.0 specification", "title": "TMF672_User_Role_Permission_Management_API_v4.0.0_specification (Part 4/11)", "documentType": "Tmforum api user guide", "text": "\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 8 of 43 \nRead specific existing user role  \nAssigning specific user role to an individual (Party) over a given manageable asset.  \n \nConsuming this API must be done following a secured mechanism (e.g.: OAuth2.0) so that permissions to access \nmanageable assets is only granted by consumers holding a valid authorization to operate on those manageable \nassets and grant permissions.  \nThis API assumes that once a product is purchased by a customer (under a given account), as part of the product \ninstantiation during the provisioning process, if a manageable asset is created under that product instance (e.g.: an \neCare system registration, an account into a digital service platform, \u2026) then this manageable assets will be \nassigned as owner to the individual that has admin rights over the customer and account entity under which the \nproduct was purchased. This association will be the first permission registered in the system (root permission) over \nthe specific manageable asset, granting that individual (or another one if the purchasing process allows defining \nanother admin for the manageable assets created) owner access to that asset and then the owner can use this API \nto grant access, with different access levels, to other individuals (users). \n \n \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 9 of 43 \nSAMPLE USE CASES \nThis section includes a set of main use cases that can be performed with this API. Additional use cases can be \ngenerated using the operations and resources defined in this specification.  \nUse Case 1: New permission created  \nDescription  \nThe main purpose of this use case is the creation of a new permission by an individual so that another individual is \nauthorized to get access to some of his assets. For instance a user that owns a TV service can grant access to \nanother user in order to make use of some of the functions within the service, for instance view only children \nmovies, configure TV service or view documentaries.  \nMain Actors  \n\u2022 \nThe owner of the assets (granter)  \n\u2022 \nThe receiver of the permission (user)  \n \nPrerequisite: This API assumes that once a product is purchased by a customer (under a given account), as part of \nthe product instantiation during the provisioning process, if a manageable asset is created under that product \ninstance (e.g.: an eCare system registration, an account into a digital service platform, \u2026) then this manageable \nassets will be assigned as owner to the individual that has admin rights over the customer and account entity under \nwhich the product was purchased.  \nUse Case Steps  \n1. The owner of the assets, sends a request to allocate a permission to another user on his assets  \n \n2. The Operator receives the permission creation request including the following minimum information :  \na. The period during which the permission is valid  \nb. Impacted user that is being granted access  \nc. Information on the manageable assets the user is granted access  \nd. The level of access granted over each of the manageable assets (indicating the functions that can be \naccessed on the asset and the actions that can be performed on those functions)  \n \n3. The Operator confirms that the requestor is authorized to assign permissions on the referenced manageable \nassets (i.e.: either is the owner or has access to the assets with appropriate level). This could be based on just \nthe requestor identifier or via a more sophisticated token-based authorization mechanisms  \n \n4. The Operator allocates the requested access level for the referred manageable assets to the individual that has \nbeen granted by the owner. \nExample of API Usage in the Context of the Use Case  \nThe following API interactions support the use case:  \n \n\u2022 \nThe owner of the manageable assets consumes the service offered by the Operator to create a new \npermission record.  \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 10 of 43 \nSuccess Outcome  \nAfter completion of these API interactions, the individual that has been granted access to the referred manageable \nassets can make use according to the access level granted.  \n \nUse Case 2: New User Role assigned to an individual  \nDescription  \nThe main purpose of this use case is the creation of a new user role indicating the access level authorized on a \ngiven set of manageable assets to whoever is allocated this role.  \nMain Actors  \n\u2022 \nThe admin operator that generates user roles  \n\u2022 \nThe owner of the assets (granter)  \n\u2022 \nThe individual allocated a given role (user)  \n \nPrerequisite: This API assumes that once a product is purchased by a customer (under a given account), as part of \nthe product instantiation during the provisioning process, if a manageable asset is created under that product \ninstance (e.g.: an eCare system registration, an account into a digital service platform, \u2026) then this manageable \nassets will be assigned as owner to the individual that has admin rights over the customer and account entity under \nwhich the product was purchased.  \nUse Case Steps  \n1. The admin operator, sends a request to create a new user role including the following minimum \ninformation :  \na. The level of access granted over a set of functions that can be accessed on an asset and the actions \nthat can be performed on those functions  \n \n2. Once the user role is defined, the owner of the assets (or the admin), sends a request to allocate a \npermission to another user based on the user role definition, including the following minimum information:  \na. The period during which the permission is valid  \nb. Impacted user that is being granted access  \nc. Information on the manageable assets the user is granted access  \nd. The user role allocated to the user on teh referenced asset \n \n3. The Operator confirms that the requestor is authorized to assign permissions on the referenced \nmanageable assets (i.e.: either is the owner or has access to the assets with appropriate level). This could \nbe based on just the requestor identifier or via a more sophisticated token-based authorization \nmechanisms  \n \n4. The Operator allocates the requested access level for the referred manageable assets to the individual that \nhas been granted by the owner."}
{"tmforumApiId": "TMF672", "id": "TMF672-chunk-5", "chunkIndex": 5, "totalChunks": 11, "apiName": "User Role Permission Management API v4.0.0 specification", "title": "TMF672_User_Role_Permission_Management_API_v4.0.0_specification (Part 5/11)", "documentType": "Tmforum api user guide", "text": "\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 11 of 43 \nExample of API Usage in the Context of the Use Case  \nThe following API interactions support the use case:  \n \n\u2022 \nThe admin operator consumes a service to create a new user role  \n \n\u2022 \nThe owner of the manageable assets consumes the service offered by the Operator to create a new \npermission record based on assigning a role to a user over a given asset.  \n \nSuccess Outcome  \nAfter completion of these API interactions, the individual that has been granted access to the referred manageable \nassets can make use according to the access level defined for the allocated user role. \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 12 of 43 \nSupport of polymorphism and extension patterns \n \nSupport of polymorphic collections and types and schema based extension is provided by means of a list of generic \nmeta-attributes that we describe below. Polymorphism in collections occurs when entities inherit from base \nentities, for instance a BillingAccount and SettlementAccount inheriting properties from the abstract Account \nentity. \nGeneric support of polymorphism and pattern extensions is described in the TMF API Guidelines v3.0 Part 2 \ndocument. \nThe @type attribute provides a way to represent the actual class type of an entity. For example, within a list of \nAccount instances some may be instances of BillingAccount where other could be instances of SettlementAccount. \nThe @type gives this information. All resources and sub-resources of this API have a @type attributes that can be \nprovided when this is useful. \nThe @referredType can be used within reference entities (like for instance an AccountRef object) to explicitly \ndenote the actual entity type of the referred class. Notice that in reference entities the @type, when used, denotes \nthe class type of the reference itself, such as BillingAccountRef or SettlementAccountRef, and not the class type of \nthe referred object. However since reference classes are rarely sub-classed, @type is generally not useful in \nreference objects. \nThe @schemaLocation property can be used in resources to allow specifying user-defined properties of an Entity or \nto specify the expected characteristics of an entity. \nThe @baseType attribute gives a way to provide explicitly the base of class of a given resource that has been \nextended. \n \n \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 13 of 43 \nRESOURCE MODEL \nManaged Entity and Task Resource Models \nPermission resource \nThe Permission resource represents the entitlement given by an individual (granter) to another individual (user) to \nget access to a set of his owned manageable assets. One single permission resource can hold information referring \nto privileges granted for multiple manageable assets. \nResource model \n \nField descriptions \nPermission fields \nassetUserRole \nA list of asset user roles (AssetUserRole [*]). The AssetUserRole is the detailed \ninformation concerning an individual user role. \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 14 of 43 \ncreationDate \nA date time (DateTime). Date when the payment was performed. \ndescription \nA string. Text describing the contents of the payment. \ngranter \nA related party (RelatedParty). Related Entity reference. A related party defines party \nor party role linked to a specific entity. \nhref \nA string. Hypertext Reference of the permission. \nid \nA string. Unique identifier of the permission. \nprivilege \nA list of privileges (Privilege [*]). A Privilege is a detailed information concerning an \nindividual access entitlement. \nuser \nA related party (RelatedParty). Related Entity reference. A related party defines party \nor party role linked to a specific entity. \nvalidFor \nA time period. The period for which the permission is valid. \nAssetUserRole sub-resource \nThe AssetUserRole is the detailed information concerning an individual user role. \nmanageableAsset \nAn entity reference (EntityRef). Entity reference schema to be use for all entityRef \nclass. \nuserRole \nA user role reference (UserRoleRef). A UserRoleRef is a detailed information \nconcerning an individual access entitlement. \nPrivilege sub-resource \nA Privilege is a detailed information concerning an individual access entitlement. \naction \nA string. Level of access granted as part of the permission. \nfunction \nA string. Specific function that can be managed over a given asset. \nid \nA string. Identifier of the privilege. \nmanageableAsset \nAn entity reference (EntityRef). Entity reference schema to be use for all entityRef \nclass. \nRelatedParty sub-resource \nRelated Entity reference. A related party defines party or party role linked to a specific entity. \n@referredType \nA string. The actual type of the target instance when needed for disambiguation. \nhref \nA string. Reference of the related entity. \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 15 of 43 \nid \nA string. Unique identifier of a related entity. \nname \nA string. Name of the related entity. \nrole \nA string. Role played by the related party. \nEntityRef relationship \nEntity reference schema to be use for all entityRef class. \n@referredType \nA string. The actual type of the target instance when needed for disambiguation. \nhref \nA string. Reference of the related entity. \nid \nA string. Unique identifier of a related entity. \nname \nA string. Name of the related entity. \nUserRoleRef relationship \nA UserRoleRef is a detailed information concerning an individual access entitlement. \n@referredType \nA string. The actual type of the target instance when needed for disambiguation. \nhref \nA string. Hypertext Reference of the user role. \nid \nA string. Unique identifier of the user role. \nJson representation sample \nWe provide below the json representation of an example of a 'Permission' resource object \n{ \n    \"id\": \"Prms-jnzgh456\", \n    \"href\": \"http://serverlocation:port/userRolePermission/v4/permission/Prms-jnzgh456\", \n    \"creationDate\": \"2017-11-01T09:37:29.961Z\", \n    \"description\": \"superProfile Granted for user\", \n    \"validFor\": { \n        \"startDateTime\": \"2019-10-01T00:00:00.000Z\", \n        \"endDateTime\": \"2019-10-31T23:59:59.000Z\" \n    }, \n    \"@type\": \"Permission\", \n    \"granter\": { \n        \"id\": \"cclt-456745\", \n        \"href\": \"https://host:port/partyManagement/v4/individual/cclt-456745\", \n        \"name\": \"John Baker\", \n        \"role\": \"customer advisor\", \n        \"@type\": \"RelatedParty\", \n        \"@referredType\": \"Individual\" \n    }, \n    \"user\": { \n        \"id\": \"cust-745712-A\", \n        \"href\": \"https://host:port/partyManagement/v4/individual/cust-745712-A\","}
{"tmforumApiId": "TMF672", "id": "TMF672-chunk-6", "chunkIndex": 6, "totalChunks": 11, "apiName": "User Role Permission Management API v4.0.0 specification", "title": "TMF672_User_Role_Permission_Management_API_v4.0.0_specification (Part 6/11)", "documentType": "Tmforum api user guide", "text": "\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 16 of 43 \n        \"name\": \"Jack Marshall\", \n        \"role\": \"client\", \n        \"@type\": \"RelatedParty\", \n        \"@referredType\": \"Individual\" \n    }, \n    \"assetUserRole\": [ \n        { \n            \"userRole\": { \n                \"id\": \"413920\", \n                \"href\": \"https://host:port/partyManagement/v4/userRole/413920\", \n                \"@type\": \"UserRoleRef\" \n            }, \n            \"manageableAsset\": { \n                \"id\": \"12k-47\", \n                \"@type\": \"ManageableAsset\", \n                \"@baseType\": \"EntityRef\", \n                \"@referredType\": \"Product\", \n                \"product\": { \n                    \"id\": \"UJF6-B61654\" \n                } \n            } \n        } \n    ] \n} \nUser Role resource \nA UserRole defines access levels to operate over a given function that can be included in an asset. \nResource model \n \n \n \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 17 of 43 \nField descriptions \nUserRole fields \nentitlement \nA list of entitlements (Entitlement [*]). An Entitlement defines access levels to \noperate over a given function that can be included in an asset. \nhref \nA string. Unique URI used to access to the userRole resource. \nid \nA string. Unique identifier of the userRole. \ninvolvementRole \nA string. Indication of the part that a user plays in its involvement with a manageable \nasset (product, service or resource). \nEntitlement sub-resource \nAn Entitlement defines access levels to operate over a given function that can be included in an asset. \naction \nA string. Level of access granted as part of the permission. \nfunction \nA string. Specific function that can be managed over a given asset. \nid \nA string. Identifier of the entitlement. \nJson representation sample \nWe provide below the json representation of an example of a 'UserRole' resource object \n{ \n    \"id\": \"413920\", \n    \"href\": \"http://serverlocation:port/userRolePermission/v4/userRole/413920\", \n    \"involvementRole\": \"MyTV familyAdmin Profile\", \n    \"@type\": \"UserRole\", \n    \"entitlement\": [ \n        { \n            \"id\": \"gdf-1324\", \n            \"action\": \"R,W\", \n            \"function\": \"SubAccounts creation Granted\", \n            \"@type\": \"Entitlement\" \n        }, \n        { \n            \"id\": \"eq-120\", \n            \"action\": \"add\", \n            \"function\": \"Downloading is activated\", \n            \"@type\": \"Entitlement\" \n        } \n    ] \n} \n \n \n \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 18 of 43 \nNotification Resource Models \n \n8 notifications are defined for this API \nNotifications related to Permission: \n    - PermissionCreateEvent \n    - PermissionAttributeValueChangeEvent \n    - PermissionStateChangeEvent \n    - PermissionDeleteEvent \nNotifications related to UserRole: \n    - UserRoleCreateEvent \n    - UserRoleAttributeValueChangeEvent \n    - UserRoleStateChangeEvent \n    - UserRoleDeleteEvent \nThe notification structure for all notifications in this API follow the pattern depicted by the figure below. \nA notification event resource (depicted by \"SpecificEvent\" placeholder) is a sub class of a generic Event structure \ncontaining at least an id of the event occurrence (eventId), an event timestamp (eventTime), and the name of the \nresource (eventType).  \nThis notification structure owns an event payload structure (\"SpecificEventPayload\" placeholder) linked to the \nresource concerned by the notification using the resource name as access field (\"resourceName\" placeholder). \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 19 of 43 \n \nPermission Create Event \nNotification PermissionCreateEvent case for resource Permission \nJson representation sample \nWe provide below the json representation of an example of a 'PermissionCreateEvent' notification event object \n{ \n    \"eventId\":\"00001\", \n    \"eventTime\":\"2015-11-16T16:42:25-04:00\", \n    \"eventType\":\"PermissionCreateEvent\", \n     \"event\": { \n        \"permission\" :  \n            {-- SEE Permission RESOURCE SAMPLE --} \n    } \n} \n \nPermission Attribute Value Change Event \nNotification PermissionAttributeValueChangeEvent case for resource Permission \n \n \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 20 of 43 \nJson representation sample \nWe provide below the json representation of an example of a 'PermissionAttributeValueChangeEvent' notification \nevent object \n{ \n    \"eventId\":\"00001\", \n    \"eventTime\":\"2015-11-16T16:42:25-04:00\", \n    \"eventType\":\"PermissionAttributeValueChangeEvent\", \n     \"event\": { \n        \"permission\" :  \n            {-- SEE Permission RESOURCE SAMPLE --} \n    } \n} \n \nPermission State Change Event \nNotification PermissionStateChangeEvent case for resource Permission \nJson representation sample \nWe provide below the json representation of an example of a 'PermissionStateChangeEvent' notification event \nobject \n{ \n    \"eventId\":\"00001\", \n    \"eventTime\":\"2015-11-16T16:42:25-04:00\", \n    \"eventType\":\"PermissionStateChangeEvent\", \n     \"event\": { \n        \"permission\" :  \n            {-- SEE Permission RESOURCE SAMPLE --} \n    } \n} \n \nPermission Delete Event \nNotification PermissionDeleteEvent case for resource Permission \nJson representation sample \nWe provide below the json representation of an example of a 'PermissionDeleteEvent' notification event object \n{ \n    \"eventId\":\"00001\", \n    \"eventTime\":\"2015-11-16T16:42:25-04:00\", \n    \"eventType\":\"PermissionDeleteEvent\", \n     \"event\": { \n        \"permission\" :  \n            {-- SEE Permission RESOURCE SAMPLE --} \n    } \n}"}
{"tmforumApiId": "TMF672", "id": "TMF672-chunk-7", "chunkIndex": 7, "totalChunks": 11, "apiName": "User Role Permission Management API v4.0.0 specification", "title": "TMF672_User_Role_Permission_Management_API_v4.0.0_specification (Part 7/11)", "documentType": "Tmforum api user guide", "text": "\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 21 of 43 \n \nUser Role Create Event \nNotification UserRoleCreateEvent case for resource UserRole \nJson representation sample \nWe provide below the json representation of an example of a 'UserRoleCreateEvent' notification event object \n{ \n    \"eventId\":\"00001\", \n    \"eventTime\":\"2015-11-16T16:42:25-04:00\", \n    \"eventType\":\"UserRoleCreateEvent\", \n     \"event\": { \n        \"userRole\" :  \n            {-- SEE UserRole RESOURCE SAMPLE --} \n    } \n} \n \nUser Role Attribute Value Change Event \nNotification UserRoleAttributeValueChangeEvent case for resource UserRole \nJson representation sample \nWe provide below the json representation of an example of a 'UserRoleAttributeValueChangeEvent' notification \nevent object \n{ \n    \"eventId\":\"00001\", \n    \"eventTime\":\"2015-11-16T16:42:25-04:00\", \n    \"eventType\":\"UserRoleAttributeValueChangeEvent\", \n     \"event\": { \n        \"userRole\" :  \n            {-- SEE UserRole RESOURCE SAMPLE --} \n    } \n} \n \nUser Role State Change Event \nNotification UserRoleStateChangeEvent case for resource UserRole \nJson representation sample \nWe provide below the json representation of an example of a 'UserRoleStateChangeEvent' notification event object \n{ \n    \"eventId\":\"00001\", \n    \"eventTime\":\"2015-11-16T16:42:25-04:00\", \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 22 of 43 \n    \"eventType\":\"UserRoleStateChangeEvent\", \n     \"event\": { \n        \"userRole\" :  \n            {-- SEE UserRole RESOURCE SAMPLE --} \n    } \n} \n \nUser Role Delete Event \nNotification UserRoleDeleteEvent case for resource UserRole \nJson representation sample \nWe provide below the json representation of an example of a 'UserRoleDeleteEvent' notification event object \n{ \n    \"eventId\":\"00001\", \n    \"eventTime\":\"2015-11-16T16:42:25-04:00\", \n    \"eventType\":\"UserRoleDeleteEvent\", \n     \"event\": { \n        \"userRole\" :  \n            {-- SEE UserRole RESOURCE SAMPLE --} \n    } \n} \n \n \n \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 23 of 43 \n API OPERATIONS \nRemember the following Uniform Contract: \nOperation on Entities \nUniform API Operation \nDescription \nQuery Entities \nGET Resource \nGET must be used to retrieve \na representation of a \nresource. \n \nCreate Entity \nPOST Resource \nPOST must be used to create \na new resource \nPartial Update of an Entity \nPATCH Resource \nPATCH must be used to \npartially update a resource \nComplete Update of an Entity \nPUT Resource \nPUT must be used to \ncompletely update a resource \nidentified by its resource URI  \nRemove an Entity \nDELETE Resource \nDELETE must be used to \nremove a resource \nExecute an Action on an \nEntity  \nPOST on TASK Resource \nPOST must be used to \nexecute Task Resources \nOther Request Methods \nPOST on TASK Resource \nGET and POST must not be \nused to tunnel other request \nmethods. \n \nFiltering and attribute selection rules are described in the TMF REST Design Guidelines. \nNotifications are also described in a subsequent section. \n \n \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 24 of 43 \nOperations on Permission \nList permissions \n  GET /permission?fields=...&{filtering} \nDescription \nThis operation list permission entities. \nAttribute selection is enabled for all first level attributes. \nFiltering may be available depending on the compliance level supported by an implementation. \n \nUsage Samples \nHere is an example of a request for retrieving a list of Permission(s). In this example, the returned permissions are \nbased either on privilege and assetUserRole.  \n \nRequest \n \nGET serverRoot/payment/v4/permission?user.id=34 \nAccept: application/json \n \n \n \nResponse \n \n200 \n \n[ \n    { \n        \"id\": \"Prms-jnzgh456\", \n        \"href\": \"http://serverlocation:port/userRolePermission/v4/permission/Prms-jnzgh456\", \n        \"creationDate\": \"2017-11-01T09:37:29.961Z\", \n        \"description\": \"superProfile Granted for user\", \n        \"validFor\": { \n            \"startDateTime\": \"2019-10-01T00:00:00.000Z\", \n            \"endDateTime\": \"2019-10-31T23:59:59.000Z\" \n        }, \n        \"@type\": \"Permission\", \n        \"granter\": { \n            \"id\": \"cclt-456745\", \n            \"href\": \"https://host:port/partyManagement/v4/individual/cclt-456745\", \n            \"name\": \"John Baker\", \n            \"role\": \"customer advisor\", \n            \"@type\": \"RelatedParty\", \n            \"@referredType\": \"Individual\" \n        }, \n        \"user\": { \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 25 of 43 \n            \"id\": \"34\", \n            \"href\": \"https://host:port/partyManagement/v4/individual/34\", \n            \"name\": \"Jack Marshall\", \n            \"role\": \"client\", \n            \"@type\": \"RelatedParty\", \n            \"@referredType\": \"Individual\" \n        }, \n        \"assetUserRole\": [ \n            { \n                \"userRole\": { \n                    \"id\": \"413920\", \n                    \"href\": \"https://host:port/partyManagement/v4/userRole/413920\", \n                    \"@type\": \"UserRoleRef\" \n                }, \n                \"manageableAsset\": { \n                    \"id\": \"12k-47\", \n                    \"@type\": \"ManageableAsset\", \n                    \"@baseType\": \"EntityRef\", \n                    \"@referredType\": \"Product\", \n                    \"product\": { \n                        \"id\": \"UJF6-B61654\" \n                    } \n                } \n            } \n        ] \n    }, \n    { \n        \"id\": \"Prms-obrfge-654\", \n        \"href\": \"http://serverlocation:port/userRolePermission/v4/permission/Prms-obrfge-654\", \n        \"creationDate\": \"2019-11-13T09:37:29.000Z\", \n        \"validFor\": { \n            \"startDateTime\": \"2019-11-14T00:00:00.000Z\", \n            \"endDateTime\": \"2020-11-31T23:59:59.000Z\" \n        }, \n        \"@type\": \"Permission\", \n        \"user\": { \n            \"id\": \"34\", \n            \"href\": \"https://host:port/partyManagement/v4/individual/34\", \n            \"name\": \"Jack Marshall\", \n            \"role\": \"client\", \n            \"@type\": \"RelatedParty\", \n            \"@referredType\": \"Individual\" \n        }, \n        \"privilege\": [ \n            { \n                \"id\": \"621458\", \n                \"function\": \"IPTV access\", \n                \"action\": \"enabled\", \n                \"userRole\": { \n                    \"id\": \"413920\", \n                    \"href\": \"https://host:port/partyManagement/v4/userRole/413920\", \n                    \"@type\": \"UserRoleRef\" \n                }, \n                \"manageableAsset\": {"}
{"tmforumApiId": "TMF672", "id": "TMF672-chunk-8", "chunkIndex": 8, "totalChunks": 11, "apiName": "User Role Permission Management API v4.0.0 specification", "title": "TMF672_User_Role_Permission_Management_API_v4.0.0_specification (Part 8/11)", "documentType": "Tmforum api user guide", "text": "\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 26 of 43 \n                    \"id\": \"a123\", \n                    \"name\": \"mobile line\", \n                    \"@type\": \"ManageableAsset\", \n                    \"@baseType\": \"EntityRef\", \n                    \"@referredType\": \"Product\", \n                    \"product\": { \n                        \"id\": \"FYF3543\" \n                    } \n                } \n            } \n        ] \n    } \n] \n \nRetrieve permission \n  GET /permission/{id}?fields=...&{filtering} \nDescription \nThis operation retrieves a permission entity. \nAttribute selection is enabled for all first level attributes. \nFiltering on sub-resources may be available depending on the compliance level supported by an implementation. \n \nUsage Samples \nHere is an example of a request for a permission. \n \nRequest \n \nGET serverRoot/payment/v4/permission/Prms-jnzgh456 \nAccept: application/json \n \n \n \nResponse \n \n200 \n \n{ \n    \"id\": \"Prms-jnzgh456\", \n    \"href\": \"http://serverlocation:port/userRolePermission/v4/permission/Prms-jnzgh456\", \n    \"creationDate\": \"2017-11-01T09:37:29.961Z\", \n    \"description\": \"superProfile Granted for user\", \n    \"validFor\": { \n        \"startDateTime\": \"2019-10-01T00:00:00.000Z\", \n        \"endDateTime\": \"2019-10-31T23:59:59.000Z\" \n    }, \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 27 of 43 \n    \"@type\": \"Permission\", \n    \"granter\": { \n        \"id\": \"cclt-456745\", \n        \"href\": \"https://host:port/partyManagement/v4/individual/cclt-456745\", \n        \"name\": \"John Baker\", \n        \"role\": \"customer advisor\", \n        \"@type\": \"RelatedParty\", \n        \"@referredType\": \"Individual\" \n    }, \n    \"user\": { \n        \"id\": \"cust-745712-A\", \n        \"href\": \"https://host:port/partyManagement/v4/individual/cust-745712-A\", \n        \"name\": \"Jack Marshall\", \n        \"role\": \"client\", \n        \"@type\": \"RelatedParty\", \n        \"@referredType\": \"Individual\" \n    }, \n    \"assetUserRole\": [ \n        { \n            \"userRole\": { \n                \"id\": \"413920\", \n                \"href\": \"https://host:port/partyManagement/v4/userRole/413920\", \n                \"@type\": \"UserRoleRef\" \n            }, \n            \"manageableAsset\": { \n                \"id\": \"12k-47\", \n                \"@type\": \"ManageableAsset\", \n                \"@baseType\": \"EntityRef\", \n                \"@referredType\": \"Product\", \n                \"product\": { \n                    \"id\": \"UJF6-B61654\" \n                } \n            } \n        } \n    ] \n} \n \nCreate permission \n  POST /permission \nDescription \nThis operation creates a permission entity. \n \n \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 28 of 43 \nMandatory and Non Mandatory Attributes \nThe following tables provide the list of mandatory and non mandatory attributes when creating a Permission, \nincluding any possible rule conditions and applicable default values. Notice that it is up to an implementer to add \nadditional mandatory attributes. \nMandatory Attributes \nRule \nvalidFor \n \nuser \n \n \nNon Mandatory Attributes \nRule \nassetUserRole \n \ncreationDate \n \ndescription \n \ngranter \n \nprivilege \n \n \nAdditional Rules \nThe following table provides additional rules indicating mandatory fields in sub-resources or relationships when \ncreating a Permission resource. \nContext \nMandatory Sub-Attributes \nprivilege \nmanageableAsset, action, function \nassetUserRole \nmanageableAsset, userRole \n \nUsage Samples \nHere is an example of a request for a permission creation, based on the use of a formerly created userRole \n \nRequest \n \nPOST serverRoot/payment/v4/permission \nContent-Type: application/json \n \n{ \n    \"creationDate\": \"2017-11-01T09:37:29.961Z\", \n    \"description\": \"superProfile Granted for user\", \n    \"validFor\": { \n        \"startDateTime\": \"2019-10-01T00:00:00.000Z\", \n        \"endDateTime\": \"2019-10-31T23:59:59.000Z\" \n    }, \n    \"@type\": \"Permission\", \n    \"granter\": { \n        \"id\": \"cclt-456745\", \n        \"href\": \"https://host:port/partyManagement/v4/individual/cclt-456745\", \n        \"name\": \"John Baker\", \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 29 of 43 \n        \"role\": \"customer advisor\", \n        \"@type\": \"RelatedParty\", \n        \"@referredType\": \"Individual\" \n    }, \n    \"user\": { \n        \"id\": \"cust-745712-A\", \n        \"href\": \"https://host:port/partyManagement/v4/individual/cust-745712-A\", \n        \"name\": \"Jack Marshall\", \n        \"role\": \"client\", \n        \"@type\": \"RelatedParty\", \n        \"@referredType\": \"Individual\" \n    }, \n    \"assetUserRole\": [ \n        { \n            \"userRole\": { \n                \"id\": \"413920\", \n                \"href\": \"https://host:port/partyManagement/v4/userRole/413920\", \n                \"@type\": \"UserRoleRef\" \n            }, \n            \"manageableAsset\": { \n                \"id\": \"12k-47\", \n                \"@type\": \"ManageableAsset\", \n                \"@baseType\": \"EntityRef\", \n                \"@referredType\": \"Product\", \n                \"product\": { \n                    \"id\": \"UJF6-B61654\" \n                } \n            } \n        } \n    ] \n} \n \n \n \nResponse \n \n201 \n \n{ \n    \"id\": \"Prms-jnzgh456\", \n    \"href\": \"http://serverlocation:port/userRolePermission/v4/permission/Prms-jnzgh456\", \n    \"creationDate\": \"2017-11-01T09:37:29.961Z\", \n    \"description\": \"superProfile Granted for user\", \n    \"validFor\": { \n        \"startDateTime\": \"2019-10-01T00:00:00.000Z\", \n        \"endDateTime\": \"2019-10-31T23:59:59.000Z\" \n    }, \n    \"@type\": \"Permission\", \n    \"granter\": { \n        \"id\": \"cclt-456745\", \n        \"href\": \"https://host:port/partyManagement/v4/individual/cclt-456745\", \n        \"name\": \"John Baker\", \n        \"role\": \"customer advisor\", \n        \"@type\": \"RelatedParty\","}
{"tmforumApiId": "TMF672", "id": "TMF672-chunk-9", "chunkIndex": 9, "totalChunks": 11, "apiName": "User Role Permission Management API v4.0.0 specification", "title": "TMF672_User_Role_Permission_Management_API_v4.0.0_specification (Part 9/11)", "documentType": "Tmforum api user guide", "text": "\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 30 of 43 \n        \"@referredType\": \"Individual\" \n    }, \n    \"user\": { \n        \"id\": \"cust-745712-A\", \n        \"href\": \"https://host:port/partyManagement/v4/individual/cust-745712-A\", \n        \"name\": \"Jack Marshall\", \n        \"role\": \"client\", \n        \"@type\": \"RelatedParty\", \n        \"@referredType\": \"Individual\" \n    }, \n    \"assetUserRole\": [ \n        { \n            \"userRole\": { \n                \"id\": \"413920\", \n                \"href\": \"https://host:port/partyManagement/v4/userRole/413920\", \n                \"@type\": \"UserRoleRef\" \n            }, \n            \"manageableAsset\": { \n                \"id\": \"12k-47\", \n                \"@type\": \"ManageableAsset\", \n                \"@baseType\": \"EntityRef\", \n                \"@referredType\": \"Product\", \n                \"product\": { \n                    \"id\": \"UJF6-B61654\" \n                } \n            } \n        } \n    ] \n} \n \n \nHere is an example of a request for a permission creation, made 'on the fly' with a privilege declaration. \n \nRequest \n \nPOST serverRoot/payment/v4/permission \nContent-Type: application/json \n \n{ \n    \"id\": \"Prms-obrfge-654\", \n    \"href\": \"http://serverlocation:port/userRolePermission/v4/permission/Prms-obrfge-654\", \n    \"creationDate\": \"2019-11-13T09:37:29.000Z\", \n    \"validFor\": { \n        \"startDateTime\": \"2019-11-14T00:00:00.000Z\", \n        \"endDateTime\": \"2020-11-31T23:59:59.000Z\" \n    }, \n    \"@type\": \"Permission\", \n    \"user\": { \n        \"id\": \"34\", \n        \"href\": \"https://host:port/partyManagement v4/individual/34\", \n        \"name\": \"Jack Marshall\", \n        \"role\": \"client\", \n        \"@type\": \"RelatedParty\", \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 31 of 43 \n        \"@referredType\": \"Individual\" \n    }, \n    \"privilege\": [ \n        { \n            \"id\": \"621458\", \n            \"function\": \"IPTV access\", \n            \"action\": \"enabled\", \n            \"manageableAsset\": { \n                \"id\": \"a123\", \n                \"name\": \"mobile line\", \n                \"@type\": \"ManageableAsset\", \n                \"@baseType\": \"EntityRef\", \n                \"@referredType\": \"Product\", \n                \"product\": { \n                    \"id\": \"FYF3543\" \n                } \n            } \n        } \n    ] \n} \n \n \n \nResponse \n \n201 \n \n{ \n    \"id\": \"Prms-obrfge-654\", \n    \"href\": \"http://serverlocation:port/userRolePermission/v4/permission/Prms-obrfge-654\", \n    \"creationDate\": \"2019-11-13T09:37:29.000Z\", \n    \"validFor\": { \n        \"startDateTime\": \"2019-11-14T00:00:00.000Z\", \n        \"endDateTime\": \"2020-11-31T23:59:59.000Z\" \n    }, \n    \"@type\": \"Permission\", \n    \"user\": { \n        \"id\": \"34\", \n        \"href\": \"https://host:port/partyManagement/v4/individual/34\", \n        \"name\": \"Jack Marshall\", \n        \"role\": \"client\", \n        \"@type\": \"RelatedParty\", \n        \"@referredType\": \"Individual\" \n    }, \n    \"privilege\": [ \n        { \n            \"id\": \"621458\", \n            \"function\": \"IPTV access\", \n            \"action\": \"enabled\", \n            \"manageableAsset\": { \n                \"id\": \"a123\", \n                \"name\": \"mobile line\", \n                \"@type\": \"ManageableAsset\", \n                \"@baseType\": \"EntityRef\", \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 32 of 43 \n                \"@referredType\": \"Product\", \n                \"product\": { \n                    \"id\": \"FYF3543\" \n                } \n            } \n        } \n    ] \n} \n \nPatch permission \n  PATCH /permission/{id} \nDescription \nThis operation allows partial updates of a permission entity. Support of json/merge \n(https://tools.ietf.org/html/rfc7386) is mandatory, support of json/patch (http://tools.ietf.org/html/rfc5789) is \noptional. \n \nNote: If the update operation yields to the creation of sub-resources or relationships, the same rules concerning \nmandatory sub-resource attributes and default value settings in the POST operation applies to the PATCH \noperation.  Hence these tables are not repeated here. \nPatchable and Non Patchable Attributes \nThe tables below provide the list of patchable and non patchable attributes, including constraint rules on their \nusage. \nPatchable Attributes \nRule \nassetUserRole \n \ndescription \n \ngranter \n \nprivilege \n \nuser \n \nvalidFor \n \n \nNon Patchable Attributes \nRule \nid \n \nhref \n \ncreationDate \n \n \nUsage Samples \nHere's an example of a request for updating a permission. In this example the initial permission contains 2 \nprovileges : 621458 (IPTV access) and 784513 (Premium mobile Gaming access). With this patch operation, the \nsecond one is removed from the permission. \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 33 of 43 \n \nRequest \n \nPATCH serverRoot/payment/v4/permission/Prms-obrfge-654 \nContent-Type: application/json-patch+json \n \n[ \n    { \n        \"op\": \"remove\", \n        \"path\": \"/privilege?privilege.id=784513\" \n    } \n] \n \n \n \nResponse \n \n200 \n \n{ \n    \"id\": \"Prms-obrfge-654\", \n    \"href\": \"http://serverlocation:port/userRolePermission/v4/permission/Prms-obrfge-654\", \n    \"creationDate\": \"2019-11-13T09:37:29.000Z\", \n    \"validFor\": { \n        \"startDateTime\": \"2019-11-14T00:00:00.000Z\", \n        \"endDateTime\": \"2020-11-31T23:59:59.000Z\" \n    }, \n    \"@type\": \"Permission\", \n    \"user\": { \n        \"id\": \"34\", \n        \"href\": \"https://host:port/partyManagement/v4/individual/34\", \n        \"name\": \"Jack Marshall\", \n        \"role\": \"client\", \n        \"@type\": \"RelatedParty\", \n        \"@referredType\": \"Individual\" \n    }, \n    \"privilege\": [ \n        { \n            \"id\": \"621458\", \n            \"function\": \"IPTV access\", \n            \"action\": \"enabled\", \n            \"userRole\": { \n                \"id\": \"413920\", \n                \"href\": \"https://host:port/partyManagement/v4/userRole/413920\", \n                \"@type\": \"UserRoleRef\" \n            }, \n            \"manageableAsset\": { \n                \"id\": \"a123\", \n                \"name\": \"mobile line\", \n                \"@type\": \"ManageableAsset\", \n                \"@baseType\": \"EntityRef\", \n                \"@referredType\": \"Product\", \n                \"product\": { \n                    \"id\": \"FYF3543\""}
{"tmforumApiId": "TMF672", "id": "TMF672-chunk-10", "chunkIndex": 10, "totalChunks": 11, "apiName": "User Role Permission Management API v4.0.0 specification", "title": "TMF672_User_Role_Permission_Management_API_v4.0.0_specification (Part 10/11)", "documentType": "Tmforum api user guide", "text": "\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 34 of 43 \n                } \n            } \n        } \n    ] \n} \n \nOperations on User Role \nList user roles \n  GET /userRole?fields=...&{filtering} \nDescription \nThis operation list user role entities. \nAttribute selection is enabled for all first level attributes. \nFiltering may be available depending on the compliance level supported by an implementation. \n \nUsage Samples \nHere is an example of a request for retrieving a list of userRole(s).  \n \nRequest \n \nGET serverRoot/payment/v4/userRole?fields=id,href,name,description,state&relatedParty.id=34 \nAccept: application/json \n \n \n \nResponse \n \n200 \n \n[ \n    { \n        \"id\": \"UR001\", \n        \"href\": \"http://serverlocation:port/userRolePermission/v4/userRole/UR001\", \n        \"involvementRole\": \"owner\", \n        \"entitlement\": [ \n            { \n                \"id\": \"4319559\", \n                \"function\": \"all\", \n                \"action\": \"R&W\", \n                \"@type\": \"Entitlement\" \n            } \n        ] \n    }, \n    { \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 35 of 43 \n        \"id\": \"UR073\", \n        \"href\": \"http://serverlocation:port/userRolePermission/v4/userRole/UR073\", \n        \"involvementRole\": \"member\", \n        \"entitlement\": [ \n            { \n                \"id\": \"7851245\", \n                \"function\": \"all\", \n                \"action\": \"R/O\", \n                \"@type\": \"Entitlement\" \n            } \n        ] \n    }, \n    { \n        \"id\": \"UR210\", \n        \"href\": \"http://serverlocation:port/userRolePermission/v4/userRole/UR210\", \n        \"involvementRole\": \"configure IPTV and watch news\", \n        \"entitlement\": [ \n            { \n                \"id\": \"3621587\", \n                \"function\": \"Netflix configuration\", \n                \"action\": \"R&W\", \n                \"@type\": \"Entitlement\" \n            }, \n            { \n                \"id\": \"301248\", \n                \"function\": \"Sport basic package\", \n                \"action\": \"watch\", \n                \"@type\": \"Entitlement\" \n            } \n        ] \n    } \n] \n \nRetrieve user role \n  GET /userRole/{id}?fields=...&{filtering} \nDescription \nThis operation retrieves a user role entity. \nAttribute selection is enabled for all first level attributes. \nFiltering on sub-resources may be available depending on the compliance level supported by an implementation. \nUsage Samples \nHere is an example of a request for a userRole. \n \nRequest \n \nGET serverRoot/payment/v4/userRole/413920 \nAccept: application/json \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 36 of 43 \n \n \n \nResponse \n \n200 \n \n{ \n    \"id\": \"413920\", \n    \"href\": \"http://serverlocation:port/userRolePermission/v4/userRole/413920\", \n    \"involvementRole\": \"MyTV familyAdmin Profile\", \n    \"@type\": \"UserRole\", \n    \"entitlement\": [ \n        { \n            \"id\": \"gdf-1324\", \n            \"action\": \"R,W\", \n            \"function\": \"SubAccounts creation Granted\", \n            \"@type\": \"Entitlement\" \n        }, \n        { \n            \"id\": \"eq-120\", \n            \"action\": \"add\", \n            \"function\": \"Downloading is activated\", \n            \"@type\": \"Entitlement\" \n        } \n    ] \n} \n \nCreate user role \n  POST /userRole \nDescription \nThis operation creates a user role entity. \nMandatory and Non Mandatory Attributes \nThe following tables provide the list of mandatory and non mandatory attributes when creating a UserRole, \nincluding any possible rule conditions and applicable default values. Notice that it is up to an implementer to add \nadditional mandatory attributes. \nMandatory Attributes \nRule \ninvolvementRole \n \nentitlement \n \n \nNon Mandatory Attributes \nRule \n \n \n \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 37 of 43 \nUsage Samples \nHere is an example of a request for creating a userRole. \n \nRequest \n \nPOST serverRoot/payment/v4/userRole \nContent-Type: application/json \n \n{ \n    \"involvementRole\": \"MyTV familyAdmin Profile\", \n    \"@type\": \"UserRole\", \n    \"entitlement\": [ \n        { \n            \"id\": \"gdf-1324\", \n            \"action\": \"R,W\", \n            \"function\": \"SubAccounts creation Granted\", \n            \"@type\": \"Entitlement\" \n        }, \n        { \n            \"id\": \"eq-120\", \n            \"action\": \"add\", \n            \"function\": \"Downloading is activated\", \n            \"@type\": \"Entitlement\" \n        } \n    ] \n} \n \n \n \nResponse \n \n201 \n \n{ \n    \"id\": \"413920\", \n    \"href\": \"http://serverlocation:port/userRolePermission/v4/userRole/413920\", \n    \"involvementRole\": \"MyTV familyAdmin Profile\", \n    \"@type\": \"UserRole\", \n    \"entitlement\": [ \n        { \n            \"id\": \"gdf-1324\", \n            \"action\": \"R,W\", \n            \"function\": \"SubAccounts creation Granted\", \n            \"@type\": \"Entitlement\" \n        }, \n        { \n            \"id\": \"eq-120\", \n            \"action\": \"add\", \n            \"function\": \"Downloading is activated\", \n            \"@type\": \"Entitlement\" \n        } \n    ] \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 38 of 43 \n} \n \nPatch user role \n  PATCH /userRole/{id} \nDescription \nThis operation allows partial updates of a user role entity. Support of json/merge \n(https://tools.ietf.org/html/rfc7386) is mandatory, support of json/patch (http://tools.ietf.org/html/rfc5789) is \noptional. \n \nNote: If the update operation yields to the creation of sub-resources or relationships, the same rules concerning \nmandatory sub-resource attributes and default value settings in the POST operation applies to the PATCH \noperation.  Hence these tables are not repeated here. \nPatchable and Non Patchable Attributes \nThe tables below provide the list of patchable and non patchable attributes, including constraint rules on their \nusage. \nPatchable Attributes \nRule \nentitlement \n \ninvolvementRole \n \n \nNon Patchable Attributes \nRule \nid \n \nhref \n \n \nUsage Samples \nHere's an example of a request for updating a userRole. In this example, the entitlement 632514 is updated with an \naction set to readOnly. The 2 other entitlements (12014 and 960124) are not modified. \n \nRequest \n \nPATCH serverRoot/payment/v4/userRole/413920 \nContent-Type: application/json-patch+json \n \n[ \n    { \n        \"op\": \"replace\", \n        \"path\": \"/entitlement/action?entitlement.id=632514\", \n        \"value\": \"readOnly\" \n    } \n]"}
{"tmforumApiId": "TMF672", "id": "TMF672-chunk-11", "chunkIndex": 11, "totalChunks": 11, "apiName": "User Role Permission Management API v4.0.0 specification", "title": "TMF672_User_Role_Permission_Management_API_v4.0.0_specification (Part 11/11)", "documentType": "Tmforum api user guide", "text": "\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 39 of 43 \n \n \n \nResponse \n \n200 \n \n{ \n    \"id\": \"413920\", \n    \"href\": \"http://serverlocation:port/userRolePermission/v4/userRole/413920\", \n    \"involvementRole\": \"MyTV SPORT+ familyAdmin Profile\", \n    \"@type\": \"UserRole\", \n    \"entitlement\": [ \n        { \n            \"id\": \"632514\", \n            \"action\": \"readOnly\", \n            \"function\": \"SubAccounts creation Granted\", \n            \"@type\": \"Entitlement\" \n        }, \n        { \n            \"id\": \"12014\", \n            \"action\": \"add\", \n            \"function\": \"Downloading is activated\", \n            \"@type\": \"Entitlement\" \n        }, \n        { \n            \"id\": \"960124\", \n            \"action\": \"add\", \n            \"function\": \"Access to sport channels\", \n            \"@type\": \"Entitlement\" \n        } \n    ] \n} \n \n \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 40 of 43 \nAPI NOTIFICATIONS \nFor every single of operation on the entities use the following templates and provide sample REST \nnotification POST calls. \nIt is assumed that the Pub/Sub uses the Register and UnRegister mechanisms described in the REST \nGuidelines reproduced below. \nRegister listener \n  POST /hub \nDescription \nSets the communication endpoint address the service instance must use to deliver information about its health \nstate, execution state, failures and metrics. Subsequent POST calls will be rejected by the service if it does not \nsupport multiple listeners. In this case DELETE /api/hub/{id} must be called before an endpoint can be created \nagain. \nBehavior \nReturns HTTP/1.1 status code 204 if the request was successful. \nReturns HTTP/1.1 status code 409 if request is not successful. \nUsage Samples \nHere's an example of a request for registering a listener. \n \n \nRequest \n \nPOST /api/hub \nAccept: application/json \n \n{\"callback\": \"http://in.listener.com\"} \n \n \nResponse \n \n201 \nContent-Type: application/json \nLocation: /api/hub/42 \n \n{\"id\":\"42\",\"callback\":\"http://in.listener.com\",\"query\":null} \n \n \n \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 41 of 43 \n \nUnregister listener \n  DELETE /hub/{id} \nDescription \nClears the communication endpoint address that was set by creating the Hub. \nBehavior \nReturns HTTP/1.1 status code 204 if the request was successful. \nReturns HTTP/1.1 status code 404 if the resource is not found. \nUsage Samples \nHere's an example of a request for un-registering a listener. \n \nRequest \n \nDELETE /api/hub/42 \nAccept: application/json \n \n \nResponse \n \n204 \n \nPublish Event to listener \n  POST /client/listener \nDescription \nClears the communication endpoint address that was set by creating the Hub. \nProvides to a registered listener the description of the event that was raised. The /client/listener url is the \ncallback url passed when registering the listener. \nBehavior \nReturns HTTP/1.1 status code 201 if the service is able to set the configuration.  \n \n \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 42 of 43 \nUsage Samples \nHere's an example of a notification received by the listener. In this example \u201cEVENT TYPE\u201d should be replaced by \none of the notification types supported by this API (see Notification resources Models section) and EVENT BODY \nrefers to the data structure of the given notification type. \n \nRequest \n \nPOST /client/listener \nAccept: application/json \n \n{ \n    \"event\": {  \n                EVENT BODY  \n            }, \n    \"eventType\": \"EVENT_TYPE\" \n} \n \n \nResponse \n \n201 \n \nFor detailed examples on the general TM Forum notification mechanism, see the TMF REST Design \nGuidelines. \n \n \n \n\n\n\u00a9 TM Forum 2020. All Rights Reserved.                                                                                                                                Page 43 of 43 \nAcknowledgements \n \nVersion History \n \nVersion Number \nDate  \nRelease led by: \nDescription  \n1.0 \n04/15/2017 \nPierre Gauthier \nTM Forum \npgauthier@tmforum.org \n \nMariano Belaunde Orange \nLabs \nFirst Release of the Document.  \n2.0 \n11/06/2018 \nMariano Belaunde  \nOrange Labs \nAlignment with Guidelines 3.0 \n4.0.0 \n28-May-2020 Pierre Gauthier -TM Forum \npgauthier@tmforum.org \n \nGr\u00e9goire Laurent-Orange  \ngregoire.laurent@orange.com \n \nLudovic Robert-Orange  \nludovic.robert@orange.com \nVersion 4.0 of the API REST \n \n4.0.1 \n20-Jul-2020 \nAdrienne Walcott \nUpdated to reflect TM Forum \nApproved Status \n \nRelease History \n \nRelease Number \nDate  \nRelease led by: \nDescription  \nPre-production \n28-May-2020 Pierre Gauthier -TM Forum \n \nGr\u00e9goire Laurent-Orange  \n \nLudovic Robert-Orange  \nVersion 4.0 of the API REST \n \nProduction \n20-Jul-2020 \nAdrienne Walcott \nUpdated to reflect TM Forum \nApproved Status"}
