{"tmforumApiId": "TMF658", "id": "TMF658-chunk-1", "chunkIndex": 1, "totalChunks": 31, "apiName": "Loyalty Management API user guides 17.0.1", "title": "TMF658_Loyalty_Management_API_user_guides_17.0.1 (Part 1/31)", "documentType": "Tmforum api user guide", "text": "TM Forum Specification \n \n     Loyalty Management \n     API REST Specification \n \n \n \n \n \n \n \n      TMF658 \n      Release 17.0.1 \n      November 2017 \n \n \n \n \nLatest Update: TM Forum Release 17 TM Forum Approved \nVersion 2.0.1 \nIPR Mode: RAND \n \n\n\nNOTICE \n \nCopyright \u00a9 TM Forum 2017. All Rights Reserved. \nThis document and translations of it may be copied and furnished to others, and derivative works that \ncomment on or otherwise explain it or assist in its implementation may be prepared, copied, published, \nand distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice \nand this section are included on all such copies and derivative works. However, this document itself may \nnot be modified in any way, including by removing the copyright notice or references to TM FORUM, \nexcept as needed for the purpose of developing any document or deliverable produced by a TM FORUM \nCollaboration Project Team (in which case the rules applicable to copyrights, as set forth in the TM \nFORUM IPR Policy, must be followed) or as required to translate it into languages other than English. \nThe limited permissions granted above are perpetual and will not be revoked by TM FORUM or its \nsuccessors or assigns.  \nThis document and the information contained herein is provided on an \"AS IS\" basis and TM FORUM \nDISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY \nWARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY \nOWNERSHIP RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A \nPARTICULAR PURPOSE. \nTM FORUM invites any TM FORUM Member or any other party that believes it has patent claims that \nwould necessarily be infringed by implementations of this TM Forum Standards Final Deliverable, to notify \nthe TM FORUM Team Administrator and provide an indication of its willingness to grant patent licenses to \nsuch patent claims in a manner consistent with the IPR Mode of the TM FORUM Collaboration Project \nTeam that produced this deliverable. \n  \n \nThe TM FORUM invites any party to contact the TM FORUM Team Administrator if it is aware of a claim \nof ownership of any patent claims that would necessarily be infringed by implementations of this TM \nFORUM Standards Final Deliverable by a patent holder that is not willing to provide a license to such \npatent claims in a manner consistent with the IPR Mode of the TM FORUM Collaboration Project Team \nthat produced this TM FORUM Standards Final Deliverable. TM FORUM may include such claims on its \nwebsite, but disclaims any obligation to do so. \n \nTM FORUM takes no position regarding the validity or scope of any intellectual property or other rights \nthat might be claimed to pertain to the implementation or use of the technology described in this TM \nFORUM Standards Final Deliverable or the extent to which any license under such rights might or might \nnot be available; neither does it represent that it has made any effort to identify any such rights. \nInformation on TM FORUM's procedures with respect to rights in any document or deliverable produced \nby a TM FORUM Collaboration Project Team can be found on the TM FORUM website. Copies of claims \nof rights made available for publication and any assurances of licenses to be made available, or the result \nof an attempt made to obtain a general license or permission for the use of such proprietary rights by \nimplementers or users of this TM FORUM Standards Final Deliverable, can be obtained from the TM \nFORUM Team Administrator. TM FORUM makes no representation that any information or list of \nintellectual property rights will at any time be complete, or that any claims in such list are, in fact, Essential \nClaims. \n \n \n\n\nDirect inquiries to the TM Forum office:  \n4 Century Drive, Suite 100 \nParsippany, NJ  07054 USA \nTel No.  +1 973 944 5100 \nFax No.  +1 973 944 5110 \nTM Forum Web Page: www.tmforum.org"}
{"tmforumApiId": "TMF658", "id": "TMF658-chunk-2", "chunkIndex": 2, "totalChunks": 31, "apiName": "Loyalty Management API user guides 17.0.1", "title": "TMF658_Loyalty_Management_API_user_guides_17.0.1 (Part 2/31)", "documentType": "Tmforum api user guide", "text": "TABLE OF CONTENTS \nNOTICE............................................................................................................................................................ 2 \nTable of Contents ............................................................................................................................................. 4 \nList of figures .................................................................................................................................................. 10 \nIntroduction .................................................................................................................................................... 11 \nProgram Specification Resources ............................................................................................................................ 11 \nProgram Member Resources .................................................................................................................................... 12 \nSPECIFIC Considerations ........................................................................................................................................ 13 \neTOM ........................................................................................................................................................................ 14 \nSAMPLE USE CASES ................................................................................................................................... 15 \nUse Case 1: Administration of Loyalty Program Specification Master Reference Data ........................................... 15 \nDescription ............................................................................................................................................................. 15 \nMain Actors ............................................................................................................................................................ 15 \nUse Case Steps ..................................................................................................................................................... 15 \nExample of API Usage in the Context of the Use Case ........................................................................................ 15 \nSuccess Outcome .................................................................................................................................................. 16 \nUse Case 2: On-boarding of LoyaltyProgramMembers to specific LoyaltyAccount ................................................. 16 \nDescription ............................................................................................................................................................. 16 \nMain Actors ............................................................................................................................................................ 16 \nUse Case Steps ..................................................................................................................................................... 16 \nExample of API Usage in the Context of the Use Case ........................................................................................ 17 \nSuccess Outcome .................................................................................................................................................. 17 \nUse Case 3: Processing of events that may result in a LoyaltyAction being executed ............................................ 17 \nDescription ............................................................................................................................................................. 17 \nMain Actors ............................................................................................................................................................ 17 \nUse Case Steps ..................................................................................................................................................... 17 \nExample of API Usage in the Context of the Use Case ........................................................................................ 18 \nSuccess Outcome .................................................................................................................................................. 18 \nUse Case 4: Burn points as part of a LoyaltyProgramMember CustomerPayment ................................................. 18"}
{"tmforumApiId": "TMF658", "id": "TMF658-chunk-3", "chunkIndex": 3, "totalChunks": 31, "apiName": "Loyalty Management API user guides 17.0.1", "title": "TMF658_Loyalty_Management_API_user_guides_17.0.1 (Part 3/31)", "documentType": "Tmforum api user guide", "text": "Description ............................................................................................................................................................. 18 \nMain Actors ............................................................................................................................................................ 19 \nUse Case Steps ..................................................................................................................................................... 19 \nExample of API Usage in the Context of the Use Case ........................................................................................ 19 \nSuccess Outcome .................................................................................................................................................. 19 \nUse Case 5: Specific Example - CustomerOrder resulting in redeemable loyalty points earnings .......................... 19 \nDescription ............................................................................................................................................................. 19 \nMain Actors ............................................................................................................................................................ 20 \nUse Case Steps ..................................................................................................................................................... 20 \nExample of API Usage in the Context of the Use Case ........................................................................................ 20 \nSuccess Outcome .................................................................................................................................................. 20 \nRESOURCE MODEL ..................................................................................................................................... 21 \nMANAGED ENTITY AND TASK RESOURCE MODELS ......................................................................................... 21 \nLoyaltyProgramProductSpec Resource ................................................................................................................ 21 \nLoyaltyRule Resource............................................................................................................................................ 22 \nLoyaltyCondition Resource .................................................................................................................................... 24 \nLoyaltyAction Resource ......................................................................................................................................... 24 \nLoyaltyEventType Resource .................................................................................................................................. 26 \nLoyaltyEventType Resource .................................................................................................................................. 26 \nLoyaltyProgramProduct Resource ......................................................................................................................... 27 \nLoyaltyProgramMember Resource ........................................................................................................................ 28 \nLoyaltyAccount Resource ...................................................................................................................................... 29 \nLoyaltyBalance Resource ...................................................................................................................................... 29 \nLoyaltyEarn Resource ........................................................................................................................................... 30 \nLoyaltyBurn Resource ........................................................................................................................................... 31 \nLoyaltyEvent Resource .......................................................................................................................................... 32 \nLoyaltyExecutionPoint Resource ........................................................................................................................... 32 \nResource Relationships ......................................................................................................................................... 35 \nAPI OPERATIONS ......................................................................................................................................... 40 \nOPERATIONS ON PROGRAM PRODUCT SPEC................................................................................................... 40"}
{"tmforumApiId": "TMF658", "id": "TMF658-chunk-4", "chunkIndex": 4, "totalChunks": 31, "apiName": "Loyalty Management API user guides 17.0.1", "title": "TMF658_Loyalty_Management_API_user_guides_17.0.1 (Part 4/31)", "documentType": "Tmforum api user guide", "text": "List / Retrieve Program Product Spec ................................................................................................................... 40 \nPatch Program Product Spec ................................................................................................................................ 41 \nCreate Program Product Spec .............................................................................................................................. 42 \nDelete Program Product Spec ............................................................................................................................... 45 \nOPERATIONS ON RULES ....................................................................................................................................... 45 \nList / Retrieve Rules............................................................................................................................................... 45 \nUpdate Rule ........................................................................................................................................................... 47 \nPatch Rule ............................................................................................................................................................. 48 \nCreate Rule ............................................................................................................................................................ 50 \nDelete Rule ............................................................................................................................................................ 52 \nOPERATIONS ON Rule Conditions ......................................................................................................................... 53 \nList / Retrieve Rule Conditions .............................................................................................................................. 53 \nCreate Rule Condition ........................................................................................................................................... 54 \nDelete Rule Condition ............................................................................................................................................ 55 \nOPERATIONS ON Rule Event Types ...................................................................................................................... 56 \nList / Retrieve Rule Conditions .............................................................................................................................. 56 \nCreate Rule Condition ........................................................................................................................................... 57 \nDelete Rule Condition ............................................................................................................................................ 58 \nOPERATIONS ON Rule Actions ............................................................................................................................... 58 \nList / Retrieve Rule Actions ................................................................................................................................... 58 \nCreate Rule Action ................................................................................................................................................. 59 \nDelete Rule Action ................................................................................................................................................. 61 \nOPERATIONS ON CONDITIONS ............................................................................................................................ 61 \nList / Retrieve Conditions ....................................................................................................................................... 61 \nUpdate Conditions ................................................................................................................................................. 62 \nPatch Condition ..................................................................................................................................................... 63 \nCreate Condition .................................................................................................................................................... 65 \nDelete Condition .................................................................................................................................................... 66 \nOPERATIONS ON ACTIONS ................................................................................................................................... 67 \nList / Retrieve Actions ............................................................................................................................................ 67"}
{"tmforumApiId": "TMF658", "id": "TMF658-chunk-5", "chunkIndex": 5, "totalChunks": 31, "apiName": "Loyalty Management API user guides 17.0.1", "title": "TMF658_Loyalty_Management_API_user_guides_17.0.1 (Part 5/31)", "documentType": "Tmforum api user guide", "text": "Update Action ........................................................................................................................................................ 68 \nPatch Action ........................................................................................................................................................... 70 \nCreate Action ......................................................................................................................................................... 71 \nDelete Action ......................................................................................................................................................... 74 \nOPERATIONS ON EVENT TYPES .......................................................................................................................... 75 \nList / Retrieve Event Types .................................................................................................................................... 75 \nUpdate Event Type ................................................................................................................................................ 75 \nPatch Event Type .................................................................................................................................................. 76 \nCreate Event Type ................................................................................................................................................. 77 \nDelete Event Type ................................................................................................................................................. 79 \nOPERATIONS ON LOYALTY PROGRAM PRODUCT ............................................................................................ 79 \nList / Retrieve Loyalty Program Product ................................................................................................................ 79 \nPatch Loyalty Program Product ............................................................................................................................. 81 \nCreate Loyalty Program Product ........................................................................................................................... 83 \nDelete Loyalty Program Product ............................................................................................................................ 89 \nOPERATIONS ON LOYALTY EXECUTION POINT ................................................................................................ 90 \nList / Retrieve Loyalty Execution Points ................................................................................................................ 90 \nOPERATIONS ON LOYALTY PROGRAM MEMBER .............................................................................................. 92 \nList / Retrieve Loyalty Program Members ............................................................................................................. 92 \nUpdate Loyalty Program Members ........................................................................................................................ 93 \nPatch Loyalty Program Members .......................................................................................................................... 94 \nCreate Loyalty Program Members ......................................................................................................................... 96 \nDelete Loyalty Program Members ......................................................................................................................... 97 \nOPERATIONS ON LOYALTY ACCOUNT ................................................................................................................ 98 \nList / Retrieve Loyalty Balances ............................................................................................................................ 98 \nOPERATIONS ON LOYALTY BALANCE ................................................................................................................. 99 \nList / Retrieve Loyalty Balances ............................................................................................................................ 99 \nPatch Loyalty Balances ....................................................................................................................................... 100 \nPost Loyalty Balances ......................................................................................................................................... 102 \nDelete Loyalty Balances ...................................................................................................................................... 104"}
{"tmforumApiId": "TMF658", "id": "TMF658-chunk-6", "chunkIndex": 6, "totalChunks": 31, "apiName": "Loyalty Management API user guides 17.0.1", "title": "TMF658_Loyalty_Management_API_user_guides_17.0.1 (Part 6/31)", "documentType": "Tmforum api user guide", "text": "OPERATIONS ON LOYALTY EVENT .................................................................................................................... 104 \nList / Retrieve Loyalty Earn .................................................................................................................................. 104 \nCreate Loyalty Earn ............................................................................................................................................. 106 \nOPERATIONS ON LOYALTY BURN ..................................................................................................................... 107 \nList / Retrieve Loyalty Burn .................................................................................................................................. 107 \nCreate Loyalty Burn ............................................................................................................................................. 109 \nOPERATIONS ON LOYALTY EVENT .................................................................................................................... 110 \nCreate Loyalty Event ........................................................................................................................................... 110 \nAPI NOTIFICATION TEMPLATES .............................................................................................................. 112 \nNOTIFICATIONS ON LOYALTY PROGRAM MEMBER ........................................................................................ 112 \nRegister Loyalty Program Member Listener ........................................................................................................ 112 \nUnregister Loyalty Program Member Listener ..................................................................................................... 112 \nPublish Loyalty Program Member Listener ......................................................................................................... 113 \nNOTIFICATIONS ON LOYALTY MEMBER PRODUCT ......................................................................................... 114 \nRegister Loyalty Member Product Listener ......................................................................................................... 114 \nUnregister Loyalty Member Product Listener ...................................................................................................... 114 \nPublish Loyalty Member Product Listener ........................................................................................................... 115 \nNOTIFICATIONS ON LOYALTY EARN ................................................................................................................. 116 \nRegister Loyalty Earn Listener ............................................................................................................................ 116 \nUnregister Loyalty Earn Listener ......................................................................................................................... 116 \nPublish Loyalty Earn Listener .............................................................................................................................. 117 \nNOTIFICATIONS ON LOYALTY BURN ................................................................................................................. 118 \nRegister Loyalty Burn Listener ............................................................................................................................ 118 \nUnregister Loyalty Burn Listener ......................................................................................................................... 118 \nPublish Loyalty Burn Listener .............................................................................................................................. 119 \nNOTIFICATIONS ON LOYALTY EVENT ............................................................................................................... 120 \nRegister Loyalty Event Listener ........................................................................................................................... 120 \nUnregister Loyalty Event Listener ........................................................................................................................ 120 \nPublish Loyalty Event Listener ............................................................................................................................ 121 \nEvent Models ............................................................................................................................................... 123"}
{"tmforumApiId": "TMF658", "id": "TMF658-chunk-7", "chunkIndex": 7, "totalChunks": 31, "apiName": "Loyalty Management API user guides 17.0.1", "title": "TMF658_Loyalty_Management_API_user_guides_17.0.1 (Part 7/31)", "documentType": "Tmforum api user guide", "text": "Loyalty Program Member Notification Model .......................................................................................................... 123 \nloyaltyProgramMemberCreateNotification ........................................................................................................... 123 \nloyaltyProgramMemberUpdateNotification .......................................................................................................... 123 \nloyaltyProgramMemberDeleteNotification ........................................................................................................... 124 \nLoyalty Program Member Product Model ............................................................................................................... 125 \nloyaltyProgramMemberProductCreateNotification .............................................................................................. 125 \nloyaltyProgramMemberUpdateNotification .......................................................................................................... 126 \nloyaltyProgramMemberDeleteNotification ........................................................................................................... 126 \nLoyalty Earn Model ................................................................................................................................................. 127 \nloyaltyEarnNotification ......................................................................................................................................... 127 \nLoyalty Burn Model ................................................................................................................................................. 128 \nloyaltyBurnNotification ......................................................................................................................................... 128 \nLoyalty Event Model ................................................................................................................................................ 129 \nloyaltyEventNotification ....................................................................................................................................... 129 \nOPEN ISSUES ............................................................................................................................................. 131 \nRelease History ............................................................................................................................................ 132 \nCompany Contact Details ............................................................................................................................ 133 \n \n \n \n \n \n\n\nLIST OF FIGURES \nFigure 1 \u2013 Loyalty Program Managed Resource Context \n11 \nFigure 2 \u2013 LoyaltyProgramMember resource and contained resources \n12 \nFigure 3 \u2013 LoyaltyProgramProductSpec resource model \n22 \nFigure 4 \u2013 LoyaltyManagement resource model \n35 \nFigure 5 \u2013 LoyaltyAction resource model \n36 \nFigure 6 \u2013 LoyaltyProgramProduct resource model \n37 \nFigure 7 \u2013 LoyaltyAccount resource model \n38 \nFigure 8 \u2013 LoyaltyBalance resource model \n39 \n \n \n\n\nINTRODUCTION \nThe TM Forum Loyalty Management Open API is documented in this specification. The Loyalty Management API \nspecification references the SID Release 14.5.1 and the Loyalty API R14.0 specification.  \nThe Loyalty API supports the management of loyalty program specifications, loyalty program members, their \nassociated products and loyalty accounts with loyalty balances. The scope of the API also covers the management \nof loyalty rules and under what conditions the associated loyalty actions must be applied.  \nThe TM Forum Loyalty Program API addresses an area of Communication Service Provider functionality in which a \nhigh degree of differentiation is required to set CSPs apart from their competitors. The question can therefore be \nposed about the merits of standardisation in this area. The API aims to provide a standardised integration interface \nfor the definition of Loyalty Programs and the receipt of events from integrated systems in order to drive integration \nstandardisation only. Loyalty Program differentiation will be achieved in program implementation. For example, the \nBusinessInteraction loyalty execution points represent internal and also program coalition partner business \ninteractions which is seen as one of the main Loyalty Program differentiators.   \nAs depicted in Figure 1, the Loyalty Management API addresses resources that can be classified into two broad \ncategories outlined below. \n \n \nFigure 1 \u2013 Loyalty Program Managed Resource Context \n \n \n \n \nProgram Specification Resources  \n\n\nThis grouping of resources defines the Loyalty Program characteristics and therefore defines the program reference \ndata. \nThis grouping represents resources that collectively determine loyalty program business rules and event processing \nbehavior, where events could be triggered by a variety of sources (consumers) that may result in a loyalty action (a \npoints earn, business interaction or customer order action).  \nProgram Member Resources \nThis grouping of managed resources is related to a Loyalty Program member, e.g. Loyalty Program members, loyalty \nprogram products to which Loyalty Program Members are signed up, accounts, balances, earn, burn and other \nevents. \n \nFigure 2 \u2013LoyaltyProgramMember resource and contained resources  \nAs depicted in Figure , the Loyalty Management API aims to support a per loyalty program member resource model \nas follows: \n\u2022 \nA LoyaltyProgramMember opts in to one or more LoyaltyProgramProducts; \n\u2022 \nA LoyaltyProgramProduct can contain one or more LoyaltyAccounts. While this is shown as containment in \nthis diagram, multiple LoyaltyProgramProducts may be associated with the same LoyaltyAccount; \n\u2022 \nA LoyaltyAccount can contain multiple LoyaltyBalances; \n\u2022 \nLoyaltyEarn and LoyaltyBurn can be viewed as special event types that affect LoyaltyBalance with credit and \ndebit transaction entries respectively. These will typically be reflected on the Loyalty Program BSS platform \nas specific credit and debit event data records;"}
{"tmforumApiId": "TMF658", "id": "TMF658-chunk-8", "chunkIndex": 8, "totalChunks": 31, "apiName": "Loyalty Management API user guides 17.0.1", "title": "TMF658_Loyalty_Management_API_user_guides_17.0.1 (Part 8/31)", "documentType": "Tmforum api user guide", "text": "\u2022 \nLoyaltyEvent is an unmanaged resource1 but represents a variety of loyalty program event triggers received \nfrom external sources, identified by an event type specification. A LoyaltyEvent can specify event types such \nas Order Creation, usage events and others. LoyaltyEvent is, however, shown in in Figure  as it will be \npresented in the Loyalty Program Platform as an event data record under the LoyaltyProgramMember profile \nto serve as audit trail of the event. The event may result in subsequent LoyaltyActions that may, in turn, \nresult in further event data records to be logged to record the corresponding benefits allocated as a result of \nthe event.  \nSPECIFIC Considerations \nAs Loyalty Programs are established and grow in terms of sophistication, the number and variety of events \nprocessed will inevitably increase as will the number of LoyaltyRules. For example, social media and customer \nsentiment integration derived from unstructured data sources may be added. This means that the API should support \nfine-grained association of LoyaltyEvents with LoyaltyRules, i.e. each event received should not be evaluated \nagainst each LoyaltyRule. For this reason, this specification proposes the introduction of a LoyaltyEventType SID \nentity that enables the association of a kind of LoyaltyEvent which we perceive as an unmanaged resource, by using \nthe eventType name value pair, with a subset of LoyaltyRules association with a LoyaltyProgramProductSpec.  \nAnother key consideration is that of association management between LoyaltyProgramMembers. For example, if the \nCSP customer is a multi-entity corporate customer, many subsidiaries in the company\u2019s ERP company hierarchy \nmay want to benefit from the same Loyalty Program. This means that multiple LoyaltyProgramMembers may want to \nearn and burn from the same LoyaltyAccount and its underlying LoyaltyBalances. The authors were uncertain at the \ntime of writing of this draft if an association relationship is provided for within the present SID model. Regardless, \nassociation management between LoyaltyProgramMembers will be a requirement for Loyalty Program management. \nThe audience is also referred to the Open Issues section at the end of this document for other open issues to be \naddressed. \n \n \n                                                      \n1 Proposed change in SID to augment LoyaltyRule with LoyaltyEventType to enable finer-grained mapping of events to application \nLoyaltyRules \n\n\neTOM \nLoyalty and Customer Retention forms part of the Customer Support & Readiness part of eTOM. \n \n \n \n\n\nSAMPLE USE CASES \nThe following mainstream use cases are provided to enhance understanding of the underlying API use in support of \nthe Use Cases: \ni. \nAdministration of Loyalty Program Specification Master Reference Data \na. Creation of LoyaltyProgramProductSpecification \nb. Creation of one or more LoyaltyRules \nc. Creation of one or more LoyaltyConditions \nd. Creation of Loyalty Actions \ne. Creation of Loyalty Event Types \nii. \nOn-boarding of LoyaltyProgramMembers to specific LoyaltyAccount \niii. \nProcessing of events that may result in a LoyaltyAction being executed (LoyaltyEarn, CustomerOrder, \nBusinessInteraction) \niv. \nBurn points as part of a LoyaltyProgramMember CustomerPayment \n \nUse Case 1: Administration of Loyalty Program Specification Master Reference Data \nDescription \nThe main purpose of this use case is the administration of all reference data required to process events for the \npurpose of loyalty benefit processing in line with this defined reference data. \nMain Actors \n\u2022 \nA Loyalty Program Administrator \n\u2022 \nA User Interface using the Loyalty Management API \n\u2022 \nA BSS platform capable of storing the Loyalty Program reference data \nUse Case Steps \ni. \nThe Loyalty Program Administrator creates a new loyalty program specification in line with business \nrequirements, e.g. a program to capture the youth market;  \nii. \nThe Loyalty Program Administrator creates one or more business rules applicable to the program, e.g. that \nonly program customers between the age of 18 and 21 qualify for LoyaltyRule within the program; \niii. \nThe Loyalty Program Administrator specifies the set of conditions applicable to each Loyalty Rule, e.g. \nminimum age = 18 and maximum age = 21;  \niv. \nThe Loyalty Program Administrator specifies the type of loyalty action for fulfilling the loyalty benefits, e.g. \nearn 100 points on placement of customer order. \nv. \nThe Loyalty Program Administrator defines the qualifying event types that should trigger the loyalty rule with \nits underlying conditions and actions, e.g. only customer order events should be processed. \n \n \n \nExample of API Usage in the Context of the Use Case \n\n\nCorresponding with the numbering in the use case steps, the following API interactions support the use case: \ni. \nThe User Interface consumes the LoyaltyProgramProductSpec resource to create the new program \nspecification; (POST /loyaltyManagement/loyaltyProgramProductSpec) \nii. \nThe User Interface consumes the LoyaltyRule resource to create one or more rules related to the newly \ncreated LoyaltyProgramProductSpec; (POST \n/loyaltyManagement/loyaltyProgramProductSpec/{ID}/loyaltyRule) \niii. \nThe User Interface consumes the LoyaltyCondition resource to create one or more conditions to specify \nwhether or not the LoyaltyRule is applicable to a specific event. After creation, the condition must be linked \nto the LoyaltyRule; (POST /loyaltyManagement/loyaltyCondition, POST \n/loyaltyManagement/loyaltyRule/{ID}/loyaltyCondition) \niv. \nThe User Interface consumes the and produces LoyaltyAction resource to create one or more actions that \ndescribe the fulfilment of the loyalty execution. After creation, the action must be linked to the LoyaltyRule; \n(POST /loyaltyManagement/loyaltyAction, POST /loyaltyManagement/loyaltyRule/{ID}/loyaltyAction) \nv. \nThe User Interface consumes the EventType resource to define event types that trigger specific \nLoyaltyRules to be evaluated upon receipt of events of the type specified. After creation, the event type must \nbe linked to the LoyaltyRule; (POST /loyaltyManagement/loyaltyEventType, POST \n/loyaltyManagement/loyaltyRule/{ID}/loyaltyEventType) \nSuccess Outcome \nAfter completion of these API interactions, a complete Loyalty Program business rule has been created that is \nreferenced as part of the event processing pattern to definitively allocate loyalty benefits based on this metadata. \n \nUse Case 2: On-boarding of LoyaltyProgramMembers to specific LoyaltyAccount \nDescription \nThe main purpose of this use case is to successfully onboard new Loyalty Program Members to a LoyaltyAccount \n(LoyaltyProgramProductSpec).  \nMain Actors \n\u2022 \nCustomer: An existing customer (PartyRole) \n\u2022 \nAccess Channel System: An external system that assists a customer of the CSP with an authenticated \ncustomer interaction with the CSP and where the opportunity to enrol for the Loyalty Program is presented. \nThis could be an online portal, a CRM system or other.    \n\u2022 \nLoyalty Platform: A BSS platform supporting the Loyalty Program functions \nUse Case Steps \ni. \nThe customer interacts with the CSP using an Access Channel System and the customer is authenticated as \npart of this interaction; \nii. \nAs part of an authenticated journey, the customer is presented with the option to sign up for Loyalty Program \nand enrols for the Loyalty Program. This corresponds to a CustomerOrder of the \nLoyaltyProgramProductSpec."}
{"tmforumApiId": "TMF658", "id": "TMF658-chunk-9", "chunkIndex": 9, "totalChunks": 31, "apiName": "Loyalty Management API user guides 17.0.1", "title": "TMF658_Loyalty_Management_API_user_guides_17.0.1 (Part 9/31)", "documentType": "Tmforum api user guide", "text": "Example of API Usage in the Context of the Use Case \nCorresponding with the numbering in the use case steps, the following API interactions support the use case: \ni. \nAs part of customer authentication, the access channel system can use the LoyaltyProgramProduct API \nresource to verify if the customer is already opted in to the Loyalty Program. (GET \n/loyaltyManagement/loyaltyProgramMember/{ID}) \nii. \nIn response to the customer electing to sign up for the loyalty program, the API LoyaltyProgramMember \nCREATE operation is used to to deliver the loyalty program ordered by the customer. The same \nLoyaltyProgramMember may have rights on many LoyaltyProgram through one or many LoyaltyAccount. As \npart of the implementation of the API call, the following activities will take place: \na. The Loyalty Platform will record the specific program that the enrolment applies to (i.e. the \ncorresponding LoyaltyProgramProductSpec) and this record represents the LoyaltyProgramProduct \nas an instance of Loyalty Program management for the customer; (POST \n/loyaltyManagement/loyaltyProgramMember/{ID}/loyaltyProgramProduct) \nb. The Loyalty Platform can also create a Loyalty Account as part of the program enrolment and \nperhaps corresponding opening balances. (POST \n/loyaltyManagement/loyaltyProgramMember/{ID}/loyaltyAccount) \nSuccess Outcome \nAfter completion of these API an existing customer (PartyRole) is successfully enrolled for a Loyalty Program (as \nidentified by the corresponding LoyaltyProgramProductSpec). The customer is now a LoyaltyProgramMember and \nthe specific LoyaltyProgramProductSpec subscribed to has been recorded by the LoyaltyProgramProduct instance. \n \nUse Case 3: Processing of events that may result in a LoyaltyAction being executed \nDescription \nThe main purpose of this use case is to process externally originating event triggers received from external sources \nthat represents an event of relevance to the management of a Loyalty Program. \nMain Actors \n\u2022 \nExternal OSS/BSS Platform: Any external OSS/BSS platform that emits events that may be of relevance \nfor Loyalty Program processing and that will be received by the event handler  \n\u2022 \nLoyalty Platform: A BSS platform supporting the Loyalty Program functions. \nUse Case Steps \ni. \nAn event is received by means of a POST operation to the loyaltyEvent resource; \nii. \nThe event handling implementation sources the event type identifier (using the eventType Name Value Pair) \nand determines the qualifying subset of all Loyalty Rules to be considered for loyalty benefit processing; \niii. \nThe Loyalty API implementation classes or the Loyalty Platform implements the following: \na. For each qualifying Loyalty Rule, the associated conditions are evaluated against the Loyalty Event \ninformation received. At this point of evaluation the event against the identified Loyalty Rule, the \nLoyalty Program Member profile information would typically already have been sourced to allow the \n\n\naggregated event, loyalty member profile and Loyalty Program master reference data to be used in \nthe processing of the conditions associated with Loyalty Rules. \nb. For each matching condition, the configured loyalty actions are performed to implement the desired \nloyalty programme effect. A LoyaltyExecutionPoint record is created as event record of the \nLoyaltyAction executed. \nExample of API Usage in the Context of the Use Case \nCorresponding with the numbering in the use case steps, the following API interactions support the use case: \ni. \nThe event handling implementation receives the event triggered by an external BSS/OSS platform (POST \n/loyaltyManagement/loyaltyEvent); \nii. \nThe event handling implementation or Loyalty Platform obtains all EventType resources defined as well as \ntheir links to LoyaltyRules; (GET \n/loyaltyManagement/loyaltyProgramProductSpec/{ID}/loyaltyRule?loyaltyEventType.eventType=CustomerOr\nder) \niii. \nThe event handling implementation or Loyalty Platform applies the conditions associated with each \nLoyaltyRule and determines if the LoyaltyRule should be applied. In the event that the LoyaltyRule is \ndetermined to be applicable based on the conditions, the associated LoyaltyActions for the LoyaltyRule is \nobtained and the associated LoyaltyExecutionPoints that the LoyaltyAction implements are consumed to \nimplement the desired real-world effect. The real-world effect may be one of a LoyaltyEarn, CustomerOrder \nor a BusinessInteraction. The Loyalty Platform will be responsible for the fulfilment of the desired real-world \neffect.   \niv. \nLoyaltyExecutionPoints may be retrieved using the GET operation. \nSuccess Outcome \nAfter completion of the event processing cycle, the LoyaltyProgramMember impacted by the event will have received \na benefit in the form of one or more of: \n\u2022 \nLoyaltyEarn \u2013 a loyalty balance was credited in accordance with the benefits determined by means of \nfulfilment of a LoyaltyAction; \n\u2022 \nCustomerOrder \u2013 a customer order was placed with a business entity (internal or a coalition partner) for a \nproduct; \n\u2022 \nBusinessInteraction \u2013 a qualifying LoyaltyAction resulted in an interaction with a business unit (internal) or \nwith an external business, e.g. a Loyalty Program coalition partner, to implement a loyalty benefit fulfilled by \nan organisational division or external business partner. \nAs many LoyaltyActions may be associated with each qualifying LoyaltyRule and as a single event may trigger \nmultiple rules, the real-world effect may be that combinations of benefits, e.g. a LoyaltyEarn as well as a \nBusinessInteraction, may result from the processing of a single event received. \n \nUse Case 4: Burn points as part of a LoyaltyProgramMember CustomerPayment \nDescription \nThe main purpose of this use case is to describe the process whereby a LoyaltyProgramMember can use earned \nLoyalty Points balance available for product or service payment either using it as payment resource in full or for \npartial payment."}
{"tmforumApiId": "TMF658", "id": "TMF658-chunk-10", "chunkIndex": 10, "totalChunks": 31, "apiName": "Loyalty Management API user guides 17.0.1", "title": "TMF658_Loyalty_Management_API_user_guides_17.0.1 (Part 10/31)", "documentType": "Tmforum api user guide", "text": "Main Actors \n\u2022 \nLoyaltyProgramMember: An existing customer (PartyRole) that have previously opted in to a Loyalty \nProgram and that has accrued redeemable loyalty currency. \n\u2022 \nExternal OSS/BSS Platform: Any external OSS/BSS platform that emits events that may be of relevance \nfor Loyalty Program processing and that will be received by the event handler  \n\u2022 \nLoyalty Platform: A BSS platform supporting the Loyalty Program functions. \nUse Case Steps \ni. \nA Loyalty Program Member interacts with the CSP customer through an authorised channel (e.g. Online \nPortal) and is authenticated; \nii. \nThe Loyalty Program Member elects to purchase a product or service offer from the CSP; \niii. \nThe customer is presented in the shopping basket that redeemable Loyalty Balance is available that may be \nused towards the payment for the product or service; \niv. \nThe customer elects to use redeemable loyalty balance towards the payment to pay either in part or in full for \nthe product or service. The customer proceeds to payment and pays with loyalty earnings either as part or \nas full payment.  \nExample of API Usage in the Context of the Use Case \nCorresponding with the numbering in the use case steps, the following API interactions support the use case: \ni. \nThe authorised channel system (external OSS/BSS platform) obtains the profile of the party \nLoyaltyProgramMember by performing a GET operation on the LoyaltyProgramMember resource. This \noperation returns whether or not the customer has rights on a LoyaltyAccount and also returns present \naccount and balance information; (GET /loyaltyManagement/loyaltyProgramMember/{ID}, GET \n/loyaltyManagement/loyaltyProgramMember/{ID}/loyaltyAccount) \nii. \nNo interaction with the Loyalty Management API takes place in this step; \niii. \nNo interaction with the Loyalty Management API takes place in this step; \niv. \nA POST operation is done to the LoyaltyBurn resource to record the loyalty earnings spend event. The \nLoyalty Platform emits a loyaltyBurnEvent to notify external platforms subscribed to Loyalty Management \nevents about the burn event. (POST loyaltyManagement/loyaltyAccount/{ID}/loyaltyBalance/{ID}/loyaltyBurn) \nSuccess Outcome \nAfter completion of the customer purchase transaction, the corresponding loyalty balance will have been debited with \nthe corresponding loyalty currency used by the LoyaltyProgramMember towards the purchase. External subscribers \nwould have been notified about the burn event through the event notification. It would also be anticipated that the \nLoyalty Platform would log an event data record (audit trail) representing a customer payment and corresponding \nrecords for the debit transaction performed on the loyalty account balance. \n \nUse Case 5: Specific Example - CustomerOrder resulting in redeemable loyalty points earnings \nDescription \nThe main purpose of the Loyalty API is to retain customers. Customers are typically awarded loyalty earnings for the \nfollowing reasons: \n\n\n\u2022 \nSeniority in terms of customer relationship \n\u2022 \nThe importance of revenue for the customer \n\u2022 \nReducing the risk of churn. \n \nMain Actors \n\u2022 \nExternal OSS/BSS Platform: Any external OSS/BSS platform that emits events that may be of relevance \nfor Loyalty Program processing and that will be received by the event handler  \n\u2022 \nLoyalty Platform: A BSS platform supporting the Loyalty Program functions. \nUse Case Steps \nA typical sequence is as follows: \n \ni. \nA customer places an order with the CSP and an external BSS platform is used to process the order, e.g. a \nCRM system; \nii. \nAn event is emitted by the external BSS platform that the Loyalty Platform is subscribed to and the Loyalty \nPlatform receives this event; \niii. \nThe event is processed following the process defined in use case 3. As a result of this processing, the \ncustomer receives a Loyalty Earnings benefit. \nExample of API Usage in the Context of the Use Case \ni. \nThe Loyalty API registers a listener on any event that may trigger a loyalty event, e.g. CustomerOrder, \nBillingAccount and Product usage  \nii. \nWhen the event (that is listened on by the Loyalty API) occurs, the LoyaltyEvent resource is called. \niii. \nThe LoyaltyEvent finds all the LoyaltyProgramProduct elements with the same type as the event. For this \nuse case, all the LoyaltyProgramProduct of type \u2018CustomerOrder\u2019 is found. (POST \n/loyaltyManagement/loyaltyEvent); \niv. \nThe LoyaltyProgramProduct associated LoyaltyRules are found. If the LoyaltyProgramMember (as provided \nby the event that triggered the loyalty event notification) has an instance of a LoyaltyProgramProduct, the \nLoyaltyRule LoyaltyConditions are evaluated. (GET \n/loyaltyManagement/loyaltyProgramProductSpec/{ID}/loyaltyRule?loyaltyEventType.eventType=CustomerOr\nder, GET /loyaltyManagement/loyaltyProgramMember/{ID}/loyaltyProgramProduct/{ID} ) \nv. \nIf the all the LoyaltyConditions or some LoyaltyConditions (depending on the isCNF attribute) evaluate to \ntrue, the associated LoyaltyExecutionPoints are executed. The associated LoyaltyAction describes the \nLoyaltyExecutionPoint attributes.  \nvi. \nThe LoyaltyAction, in this scenario, is a LoyaltyEarn transaction. \nvii. \nA Loyalty Earn notification is emitted and subscribers to this event are notified about the earning event. \n(POST /loyaltyManagement/loyaltyProgramMember/{ID} /loyaltyBalance/{ID}/loyaltyEarn) \nSuccess Outcome \nAfter processing of the customer order, the real-world effect is that the appropriate loyalty account balance will have \nbeen credited with the loyalty earnings amount. It is expected that the Loyalty Platform will have logged event data \nrecords to record the LoyaltyBalance credit and that this record will form part of a LoyaltyProgramMember\u2019s earnings \naudit trail history."}
{"tmforumApiId": "TMF658", "id": "TMF658-chunk-11", "chunkIndex": 11, "totalChunks": 31, "apiName": "Loyalty Management API user guides 17.0.1", "title": "TMF658_Loyalty_Management_API_user_guides_17.0.1 (Part 11/31)", "documentType": "Tmforum api user guide", "text": "RESOURCE MODEL \nMANAGED ENTITY AND TASK RESOURCE MODELS \nLoyaltyProgramProductSpec Resource \nThe loyalty program product specification resource is the root entity for product specification management. \nA loyalty program product specification is a detailed description of a loyalty program made available externally in the \nform of a LoyaltyProduct to LoyaltyProgramMembers.  \nA LoyaltyProgramProductSpec defines one or more LoyaltyRules that must be checked to identify the actions to \napply. \nResource IDs for loyalty program product specifications are strings that may consist of numbers and letters. \nBelow is a representation of the LoyaltyProgramProductSpec resource in JSON format. \n{ \n    \"id\": \"121\", \n    \"name\": \"UpComingProfessionalsProgram\", \n    \"description\": \"Loyalty Program to ensure that prepaid youth market is retained\", \n    \"productNumber\": \"983284\", \n    \"brand\": \"Globetom\", \n    \"needsLoyaltyAccount\": true, \n    \"lifeCycleStatus\": \"suspended\", \n    \"href\": \"/loyaltyManagement/loyaltyProgramProductSpec/121\", \n    \"validFor\": { \n        \"endDateTime\": \"2016-12-31T23:59:59Z\", \n        \"startDateTime\": \"2016-01-01T00:00:00Z\" \n    } \n} \n \nField Descriptions:  \nField \nDescription \nid \nUnique identifier for the product specification. \nname \nThe name of the product specification. \ndescription \nA narrative that explains in detail what the product specification is. \nproductNumber \nAn identification number assigned to uniquely identify the specification. \nbrand \nThe manufacturer or trademark of the specification. \nneedsLoyaltyAccount \nIf TRUE, a LoyaltyAccount is needed for each LoyaltyProgramProduct \ncreated according to the LoyaltyProgramProductSpec. \nvalidFor \nThe period for which the product specification is valid. \nlifeCycleStatus \nThe condition of the product specification, such as active, inactive, planned. \nhref \nA reference to the product specification. \n \n \n\n\nFigure 3\u2013 LoyaltyProgramProductSpec resource model \nLoyaltyProgramProductSpec\nneedsLoyaltyAccount : Boolean\nname : String\nid : String\ndescription : String\nproductNumber : String\nbrand : String\nvalidFor : TimePeriod\nlifeCycleStatus : String\nhref : String\nLoyaltyRule\nLoyaltyProgramProductSpecDefines\n1\n*\nAtomicProductSpecification\nProductSpecification\n \nLoyaltyRule Resource \nA LoyaltyRule specifies:  \n\u2022 \nEvents triggering the evaluation of the rule (LoyaltyEventType). \n\u2022 \nConditions that have to be checked (LoyaltyCondition). \n\u2022 \nActions that should be performed if the condition clause is evaluated to TRUE (LoyaltyAction). \nLoyalty rules may result in either rewards directly used / usable by the customer or loyalty earns that are gathered on \nan account to be used to later pay a ProductOffering. \nResource IDs for loyalty rules are strings that may consist of numbers and letters. \nBelow is a representation of the LoyaltyRule resource in JSON format. \n{ \n\n\n    \"id\": \"1\", \n    \"commonName\": \"YouthRule\", \n    \"description\": \"Verify if the customers age qualifies for youth program benefits\", \n    \"isCNF\": true, \n    \"hasSubRules\": false, \n    \"isMandatoryEvaluation\": true, \n    \"usage\": \"Subscribers younger than 23.\", \n    \"keywords\": \"age,youth\", \n    \"policyName\": \"Age less than 23\", \n    \"href\": \"/loyaltyManagement/loyaltyProgramProductSpec/121/LoyaltyRule/1\", \n    \"loyaltyEventType\": [{ \n            \"id\": \"3\", \n            \"href\":\"/loyaltyManagement/loyaltyEventType/3\" \n    }], \n    \"loyaltyCondition\": [{ \n            \"id\": \"1\", \n            \"href\": \"/loyaltyManagement/loyaltyCondition/1\" \n    }], \n    \"loyaltyAction\": [{ \n            \"id\": \"111\", \n            \"href\": \"/loyaltyManagement/loyaltyAction/111\" \n    }] \n} \n \nField Descriptions:  \nField \nDescription \nid \nUnique identifier for the loyalty rule. \nisCNF \nThis is a Boolean attribute that, if TRUE, defines the condition clause of this \nrule to be represented in Conjunctive Normal Form (e.g., an AND of ORs). If \nthe value of this attribute is FALSE, then the condition clause will be \nrepresented in Disjunctive Normal Form (e.g., an OR of ANDs). \nhasSubRules \nA Boolean attribute that signifies whether this loyalty rule has one or more \nsub-rules. Sub-rules are used to enforce a hierarchical nesting of rules, so \nthat parent rules may control the execution and other semantics of sub-rules \nthat they contain. \nisMandatoryEvaluation \nA Boolean attribute that, if TRUE, signifies that evaluation (and possibly \naction execution) of this entity is mandatory and must be attempted. If the \nMandatory property value of this entity is FALSE, then the evaluation of this \nentity is considered to be \"best effort\" and may be ignored. \nusage \nA free-form string attribute that recommends how this policy object should \nbe used. \n\n\nkeywords \nA string attribute that defines a set of one or more keywords that a policy \nadministrator may use to assist in characterizing or categorizing a policy \nobject to facilitate search operations. \npolicyName \nA generic naming attribute that can be used to identify different policy \nentities. \ncommonName \nA user-friendly identifier of the loyalty rule. \ndescription \nA free-form description of the rule. \nhref \nA reference to the loyalty rule. \n \n \nLoyaltyCondition Resource \nA LoyaltyCondition specifies the condition that is evaluated to decide if the LoyaltyAction(s) from the LoyaltyRule to \nbe performed. \nResource IDs for loyalty conditions are strings that may consist of numbers and letters. \nBelow is a representation of the LoyaltyCondition resource in JSON format. \n{ \n    \"id\": \"1\", \n    \"attribute\": \"age\", \n    \"operator\": \"<\", \n    \"value\": \"30\", \n    \"href\": \"/loyaltyManagement/loyaltyCondition/1\" \n} \n \nField Descriptions:  \n \nField \nDescription \nid \nUnique identifier for the loyalty condition. \nattribute \nAttribute to evaluate. \noperator \nComparison operator to be used in the evaluation. \nvalue \nThe value of the attribute to be evaluated. \nhref \nReference to the loyalty condition. \n \nLoyaltyAction Resource \nA LoyaltyAction is an action that is performed if the loyalty rule\u2019s condition clause evaluates to TRUE. A \nLoyaltyAction may correspond either to a CustomerOrder (for example 100 SMS free), or to a BusinessInteraction \n(for example an SMS notifying the 100 SMS free) or to a LoyaltyEarn (for example 100 points on the \nLoyaltyAccount)."}
{"tmforumApiId": "TMF658", "id": "TMF658-chunk-12", "chunkIndex": 12, "totalChunks": 31, "apiName": "Loyalty Management API user guides 17.0.1", "title": "TMF658_Loyalty_Management_API_user_guides_17.0.1 (Part 12/31)", "documentType": "Tmforum api user guide", "text": "Resource IDs for loyalty actions are strings that may consist of numbers and letters. \nThe actionAttributes, headers and body sections are attributes that are used when the action point is executed. The \nactionAttributes are attributes that may be used as replacement attributes in the action endpoint (URL) or in the \naction body, which is the JSON body that will be send to the endpoint. The headers specified in the headers \ncontainer is sent as HTTP headers when the HTTP call is made. \nBelow is a representation of the LoyaltyAction resource in JSON format. \n{ \n    \"id\": \"111\", \n    \"type\": \"LoyaltyEarn\", \n    \"actionAttributes\": { \n        \"quantity\": 50 \n    }, \n    \"headers\": { \n        \"Content-Type\": \"text/json\" \n    }, \n    \"body\": { \n        \"orderType\": \"dataBundle\", \n        \"orderCatagory\": \"bundles\" \n    }, \n    \"commonName\": \"Earn50\", \n    \"description\": \"Earn loyalty points\", \n    \"action\": \"POST\", \n    \"endpoint\": \"http://server:port/loyaltyManagement/loyaltyProgramMember/{memberId}/loyaltyAccount/ \n                            {accountId}/loyaltyBalance/{balanceId}/loyaltyEarn\", \n    \"version\": \"2.0\", \n    \"href\": \"/loyaltyManagement/loyaltyAction/111\" \n} \n \nField Descriptions:  \nField \nDescription \nid \nUnique identifier for the loyalty action. \ntype \nThe type of loyalty action (LoyaltyEarn, CustomerOrder or \nBusinessInteraction). \nactionAttributes \nAdditional attributes required to perform the action. These \nattributes will depend on the type of the loyalty action. For \nexample, if it is a LoyaltyEarn action, there will be a \u201cquantity\u201d \nattribute value pair indicating how many points should be earned. \nbody \nThe body if the request that is made when this action is executed. \nThe body is assumed to be of type text/json. Any tokens denoted \nwith {} will be replaced by attributes present in: \n\n\n\u2022 \nMember profile \n\u2022 \nactionAttributes \n\u2022 \nEvent attributes in the loyalty event request \nheaders \nThe HTTP headers that is added to the action call. \nhref \nA reference to the loyalty action. \nversion \nA string that identifies the version of the loyalty execution point. \ncommonName \nA user-friendly identifier of the loyalty execution point. \ndescription \nA free-form description of the loyalty execution point. \naction \nThe HTTP operation to be used when calling the endpoint (POST, \nPUT, GET or DELETE ) \nendpoint \nThe endpoint to call to trigger a BusinessInteraction, \nCustomerOrder or LoyaltyEarn.  \n \n \nLoyaltyEventType Resource \nA LoyaltyEventType is a qualifier specifying which incoming event types are associated with which LoyaltyRules.  \nThe different types of LoyaltyEvent may be events that occurs on BillingAccount (Ex: amount of Invoice, recurring \ncharge), on PartyRole (Ex: CustomerOrder amount), on Products (Ex: monthly international usage volume). The \nLoyaltyEventType resource limits the evaluation of loyalty rules by event type. \nResource IDs for loyalty event types are strings that may consist of numbers and letters. \nNote that LoyaltyEventType is named LoyaltyEvent in the SID.There is a need to describe the loyalty event types \nthat should be evaluated for possible loyalty rule evaluations. For this reason, the LoyaltyEvent model in the SID is \nrenamed to LoyaltyEventType and LoyaltyEvent denotes the actual loyalty event trigger. \nBelow is a representation of the LoyaltyEventType resource in JSON format. \n{ \n    \"id\": \"111\", \n    \"eventType\": \"orderCreationNotification\" \n} \n \nField Descriptions:  \nLoyaltyEventType Resource \nField \nDescription \nid \nUnique identifier for the loyalty event type. \neventType \nThe type of loyalty event expected to trigger the loyalty rule \nevaluation, e.g. a CustomerOrder or an Invoice. The eventType \nshould be unique to prevent existing resources not being reused. \nAn eventType that already exists will result in a 422 error. \n \n\n\nLoyaltyProgramProduct Resource \nA LoyaltyProgramProduct is described by a LoyaltyProgramProductSpec and represents an instance of the \nLoyaltyProgramProductSpec for a specific LoyaltyProgramMember. \nIf the needsLoyaltyAccount attribute in the LoyaltyProgramProductSpec that describes the LoyaltyProgramProduct is \nset to TRUE, then the LoyaltyProgramProduct will have a link to a LoyaltyAccount that it logs results to. An existing \naccount ID or details for a new LoyaltyAccount and its LoyaltyBalance is specified. \nResource IDs for loyalty program products are strings that may consist of numbers and letters. The product ID only \nneeds to be unique to the member it belongs to. \nBelow is a representation of the LoyaltyProgramProduct resource in JSON format. \n{ \n    \"id\": \"1211\", \n    \"name\": \"DataUsageBenefit\", \n    \"description\": \"Data Usage Loyalty Benefits\", \n    \"productStatus\": \"suspended\", \n    \"href\": \"/loyaltyManagement/loyaltyProgramMember/121/loyaltyProgramProduct/1211\", \n     \"validFor\": { \n     \"endDateTime\": \"2017-12-19T16:42:20Z\", \n     \"startDateTime\": \"2017-05-19T16:42:20Z\" \n    }, \n    \"characteristics\": [ \n        [ \n            { \n                \"name\": \"DataUsageThreshold\",  \n                \"value\": \"10\" \n            },  \n            { \n                \"name\": \"DataUsageThresholdUnitOfMeasure\",  \n                \"value\": \"GB\" \n            } \n        ] \n    ], \n    \"loyaltyProgramProductSpec\": { \n        \"id\": \"121\", \n        \"href\" : \"/loyaltyManagement/loyaltyProgramProductSpec/121\" \n    }, \n    \"loyaltyAccount\": { \n        \"id\": \"1\", \n        \"href\" : \"/loyaltyManagement/loyaltyProgramMember/2222/loyaltyAccount/1\" \n\n\n    } \n} \n \nField Descriptions:  \nField \nDescription \nid \nUnique identifier for the loyalty program product. \nname \nA word, term, or phrase by which the product is known and \ndistinguished from other products. \ndescription \nAn explanation of what the product is. \nproductStatus \nThe condition of the product, such as planned, designed, \nactivated, disconnected. \ncharacteristics \nName value pairs of product characteristics. \nvalidFor \nThe period during which the product is applicable. \nloyaltyProgramProductSpec \nThe product specification that describes this product. \nloyaltyAccount \nThe loyalty account to which results can be logged. \nhref \nA reference to the loyalty program product. \n \nLoyaltyProgramMember Resource \nA LoyaltyProgramMember is a type of PartyRole with rights to a LoyaltyAccount by means of a \nLoyaltyProgramProduct. The loyalty program member may earn or burn loyalty through the LoyaltyEarn and \nLoyaltyBurn actions. \nResource IDs for loyalty program members are strings that may consist of numbers and letters. \nBelow is a representation of the LoyaltyProgramMember resource in JSON format. \n{ \n    \"id\":\"104\", \n    \"href\":\"/loyaltyManagement/loyaltyProgramMember/JDSU778DS\", \n    \"status\":\"active\", \n    \"name\":\"Jane Joe\", \n    \"validFor\": { \n        \"startDateTime\":\"2015-04-19T16:42:23.0Z \", \n        \"endDateTime\":\"2016-04-19T16:42:23.0Z\" \n    } \n} \n \nField Descriptions:  \nField \nDescription \nid \nUnique identifier for the loyalty program member."}
{"tmforumApiId": "TMF658", "id": "TMF658-chunk-13", "chunkIndex": 13, "totalChunks": 31, "apiName": "Loyalty Management API user guides 17.0.1", "title": "TMF658_Loyalty_Management_API_user_guides_17.0.1 (Part 13/31)", "documentType": "Tmforum api user guide", "text": "name \nThe loyalty member\u2019s name. \nstatus \nA free-form field in which the member\u2019s status may be \ncaptured, e.g. \u201cactive\u201d, \u201csuspended\u201d, .etc. \nvalidFor \nThe period during which the loyalty member is valid for. \nhref \nA reference to the loyalty program member. \n \nLoyaltyAccount Resource \nA LoyaltyAccount corresponds to a set of balances to carry loyalty movement according to different valid period and \nunit. The LoyaltyAccount is a container for one of more LoyaltyBalances. \nA LoyaltyAccount may be required to realize a LoyaltyProgramProduct according to the rules carried by the \ncorresponding LoyaltyProgramProductSpec. This is defined by the needsLoyaltyAccount attribute on the \nLoyaltyProgramProductSpec entity.  \nA LoyaltyAccount may collect results from one or more LoyaltyProgramProduct resources. Account ID\u2019s are \nassumed to be unique over all accounts. \nIDs for loyalty accounts are strings that may consist of numbers and letters. \nBelow is a representation of the LoyaltyAccount resource in JSON format. \n \n{ \n    \"id\": \"ValueBundle\", \n    \"href\": \"/loyaltyManagement/loyaltyProgramMember/PHDUIU8336/loyaltyAccount/ValueBundle\", \n    \"loyaltyProgramProduct\": { \n         \"id\": \"1211\", \n         \"href\": \"/loyaltyManagement/loyaltyProgramMember/PHDUIU8336/loyaltyProgramProduct/1211\" \n    } \n} \n \nField Descriptions:  \nField \nDescription \nid \nUnique identifier for the loyalty account. \nloyaltyProgramProduct \nThe loyalty program product associated with the loyalty account. \nhref \nA reference to the loyalty member\u2019s loyalty account. \n \nLoyaltyBalance Resource \nA LoyaltyBalance is credited by LoyaltyEarn transactions and debited by LoyaltyBurn transactions.  \n\n\nA LoyaltyBalance belongs to a LoyaltyAccount. \nIDs for loyalty balances are strings that may consist of numbers and letters. \nBelow is a representation of the LoyaltyBalance resource in JSON format. \n{ \n    \"id\": \"iTunes\", \n    \"href\": \"/loyaltyManagement/loyaltyAccount/JohnLoyalty/loyaltyBalance/iTunes\", \n    \"quantity\": { \n             \"unit\": \"NZD\", \n             \"balance\": 300 \n    }, \n    \"validFor\": { \n        \"startDateTime\": \"2016/02/19 18:42:23\", \n        \"endDateTime\": \"2018/12/30 17:42:23\" \n    } \n} \n \nField Descriptions:  \nField \nDescription \nid \nUnique identifier for the loyalty balance. \nquantity.unit \nUnit of the quantity credited and debited from the balance. \nquantity.balance \nThe current balance of the loyalty balance account. \nvalidFor \nThe validity period in which loyalty can be burned using the \naccount. \nhref \nA reference to the loyalty member\u2019s loyalty balance. \n \nLoyaltyEarn Resource \nThe LoyaltyEarn resource credits the associated LoyaltyEarn. \nIDs for loyalty earn transactions are strings that may consist of numbers and letters. \nBelow is a representation of the LoyaltyEarn resource in JSON format. \n{ \n    \"id\": \"843G-838F-HY23-0238\", \n    \"href\": \"loyaltyManagement/loyaltyProgramMember/PHDUIU8336/loyaltyBalance/iTunes/loyaltyEarn/ \n843G-838F-HY23-0238\", \n    \"quantity\": 20.00, \n    \"openingBalance\": 280.00, \n\n\n    \"closingBalance\": 300.00, \n    \"dateTime\": \"2017-05-05T07:00:01Z\", \n    \"description\": \"A loyalty event triggered and points earned.\" \n} \n \nField Descriptions:  \nField \nDescription \nid \nUnique identifier for the loyalty earn transaction. \nhref \nA reference to the loyalty earn transaction. \nquantity \nThe amount of loyalty units earned. \nopeningBalance \nThe opening quantity on the account balance, before the loyalty \nunits were earned. \nclosingBalance \nThe closing quantity on the account balance, after the loyalty units \nwere earned. \ndateTime \nThe date time on which the loyalty earn transaction occurred. \ndescription \nA free-form description describing the loyalty earn event. \n \nLoyaltyBurn Resource \nThe LoyaltyBurn resource credits the associated LoyaltyBurn. \nIDs for loyalty earn transactions are strings that may consist of numbers and letters. \nBelow is a representation of the LoyaltyBurn resource in JSON format. \n{ \n    \"id\": \"834N-838F-3482-0238\", \n    \"href\": \"loyaltyManagement/loyaltyProgramMember/PHDUIU8336/loyaltyBalance/iTunes/loyaltyEarn/ \n834N-838F-3482-0238\", \n    \"quantity\": 40.00, \n    \"openingBalance\": 340.00, \n    \"closingBalance\": 300.00, \n    \"dateTime\": \"2017-05-08T07:00:01Z \", \n    \"description\": \"Burned loyalty points on album purchase.\" \n} \n \nField \nDescription \nid \nUnique identifier for the loyalty burn transaction. \nhref \nA reference to the loyalty burn transaction. \nquantity \nThe amount of loyalty units burned. \nopeningBalance \nThe opening quantity on the account balance, before the loyalty \nunits were burned. \n\n\nopeningBalance \nThe closing quantity on the account balance, after the loyalty units \nwere burned. \ndateTime \nThe date time on which the loyalty burn transaction occurred. \ndescription \nA free-form description describing the loyalty burn event. \n \n \nLoyaltyEvent Resource \nThe LoyaltyEvent resource triggers the evaluation of a LoyaltyRule. Only LoyaltyRules with LoyaltyEventTypes \nmatching the incoming event type is evaluated. \nThe LoyaltyEvent request format is that of the incoming event that triggers the loyalty event evaluation. The \nmemberId is also mandatory, so to link the event with a loyalty program member.  \n{ \n    \"eventType\": \"orderCreationNotification\",  \n    \"eventTime\": \"2015-09-27T05:46:25.0Z\",  \n    \"eventId\": \"4343\",  \n    \"memberId\": \"43403423\",  \n    \"event\": {  \n        \"productOrder\": {  \n            \u2026 \n        }  \n    }  \n} \n \nField \nDescription \neventId \nUnique identifier for the loyalty event. \neventType \nThe incoming loyalty event type. \neventTime \nThe time that the event was received. \nmemberId \nThe loyalty program member ID associated with the event. \nevent \nThe actual event container. \nField \nDescription \neventId \nUnique identifier for the loyalty event. \n \n \nLoyaltyExecutionPoint Resource \nA LoyaltyAction describes a LoyaltyExecutionPoint. A LoyaltyExecutionPoint is a type of PolicyExecutionPoint. A \nLoyaltyExecutionPoint tracks the application of a LoyaltyAction and serves as a record of an applied LoyaltyAction."}
{"tmforumApiId": "TMF658", "id": "TMF658-chunk-14", "chunkIndex": 14, "totalChunks": 31, "apiName": "Loyalty Management API user guides 17.0.1", "title": "TMF658_Loyalty_Management_API_user_guides_17.0.1 (Part 14/31)", "documentType": "Tmforum api user guide", "text": "Below is a representation of the LoyaltyExecutionPoint resource in JSON format. The LoyaltyExecutionPoint \ncontains all information used the LoyaltyAction execution, so that an accurate history of applied events is available \nwithout being dependent on the LoyaltyAction (which may have been updated or altered). \n{ \n    \u201cid\u201d: \u201c1243\u201d, \n    \u201ctype\u201d: \u201cLoyaltyEarn\u201d, \n    \u201cactionAttributes\u201d: { \n        \u201cquantity\u201d: 50 \n    }, \n    \u201cheaders\u201d: { \n        \u201cContent-Type\u201d: \u201ctext/json\u201d \n    }, \n    \u201cbody\u201d: { \n        \u201corderType\u201d: \u201cdataBundle\u201d, \n        \u201corderCatagory\u201d: \u201cbundles\u201d \n    }, \n    \"commonName\": \"Earn50\", \n    \"description\": \"Earn loyalty points\", \n    \"action\": \"POST\", \n    \"endpoint\": \u201chttp://server:port/loyaltyManagement/loyaltyProgramMember/{memberId}/loyaltyAccount/ \n                            {accountId}/loyaltyBalance/{balanceId}/loyaltyEarn\", \n     \u201chref\u201d: \u201c/loyaltyManagement/loyaltyExecutionPoint/1243\u201d, \n     \"version\": \"2.0\", \n     \"dateTime\": \"2017-05-05T07:00:01Z\", \n } \n \nField \nDescription \nid \nUnique identifier for the loyalty execution point. This maps to the \nobjectID in the SID and is simplified to \u201cid\u201d. \ntype \nThe type of loyalty action (LoyaltyEarn, CustomerOrder or \nBusinessInteraction). \nactionAttributes \nAdditional attributes required to perform the action. These \nattributes will depend on the type of the loyalty action. For \nexample, if it is a LoyaltyEarn action, there will be a \u201cquantity\u201d \nattribute value pair indicating how many points should be earned. \nbody \nThe HTTP body sent with the request. \nheaders \nThe HTTP headers sent with the request. \nhref \nA reference to the loyalty action. \nversion \nA string that identifies the version of the loyalty execution point. \ncommonName \nA user-friendly identifier of the loyalty execution point. \ndescription \nA free-form description of the loyalty execution point. \n\n\naction \nThe HTTP operation to be used when calling the endpoint (POST, \nPUT, GET or DELETE ) \nendpoint \nThe endpoint to call to trigger a BusinessInteraction, \nCustomerOrder or LoyaltyEarn.  \ndateTime \nThe timestamp that the actionwas applied. \n \n \n\n\nResource Relationships \n \nFigure 4\u2013 LoyaltyManagement resource model \n \n\n\n \n \nFigure 5 \u2013 LoyaltyAction resource model \n \n \n \n\n\n \n \nFigure 6\u2013 LoyaltyProgramProduct resource model \n \n\n\n \n \nFigure 7 \u2013 LoyaltyAccount resource model \n \n \n \n \n\n\nFigure 8\u2013 LoyaltyBalance resource model \n \n \n \n \n \n \n \n\n\n API OPERATIONS \nOPERATIONS ON PROGRAM PRODUCT SPEC \nList / Retrieve Program Product Spec \nGET /loyaltyManagement/loyaltyProgramProductSpec/{ID} \nThis Uniform Contract operation is used to retrieve the representation of a managed entity or collection. \nNote that collections can be retrieved via GET /loyaltyManagement/loyaltyProgramProductSpec with no {ID}. \nDescription :  \n\u2022 \nThis operation is used to retrieve the loyalty program product specification. A loyalty program product \nspecification contains loyalty rules. \n\u2022 \nFiltering selection is enabled on all attributes, except href. \n\u2022 \nAttribute selection is enabled on all first level attributes but not on inner classes. \n\u2022 \nThe resource is either a managed entity or a collection depending on the query pattern. \n\u2022 \nThe ID may be a string (or a string containing numbers). \nBehavior :  \nReturned status codes: \n\u2022 \n200 OK - The request was successful (includes situation in which no loyalty program product specifications \nmatched supplied criteria) \n\u2022 \n404 Not Found \u2013 The loyalty program product specification could not be found. This return code is only \napplicable when a managed entity is requested. \nUsage Samples :  \nREQUEST \nGET /loyaltyManagement/loyaltyProgramProductSpec/121 \nAccept: application/json \nRESPONSE \n200 \nContent-Type: application/json \n{ \n    \"id\": \"121\", \n    \"name\": \"UpComingProfessionalsProgram\", \n    \"description\": \"Loyalty Program to ensure that prepaid youth market is retained\", \n    \"productNumber\": \"983284\", \n    \"brand\": \"Globetom\", \n\n\n    \"needsLoyaltyAccount\": true, \n    \"lifeCycleStatus\": \"suspended\", \n    \"href\": \"http://server:port/loyaltyManagement/loyaltyProgramProductSpec/121\", \n    \"validFor\": { \n        \"endDateTime\": \"2016-12-31T23:59:59Z\", \n        \"startDateTime\": \"2016-01-01T00:00:00Z\" \n    } \n} \n \nPatch Program Product Spec \nPATCH /loyaltyManagement/loyaltyProgramProductSpec/{ID} \nThis Uniform Contract operation is used to partially update the representation of a managed entity or a task. \nDescription :  \n\u2022 \nThis operation partially updates a loyalty program product specification. \n\u2022 \nThis resource represents a managed entity. \n\u2022 \nThe ID may be a string (or a string containing numbers). \nBehavior :  \nReturn status codes \n\u2022 \n201 OK \u2013 The update was successful. \n\u2022 \n404 Not Found \u2013 The loyalty program product specification to be updated could not be found. \n\u2022 \n422 Unprocessable Entity \u2013 There was a field rule violation or missing required attribute. \n \nPatchable attributes are shown in the table below. \nAttribute name \nPatchable \nRule \nid \nN \n \nname \nY \n \ndescription \nY \n \nproductNumber \nY \n \nbrand \nY \n \n\n\nneedsLoyaltyAccount \nN \n \nvalidFor \nY \n \nlifeCycleStatus \nY \n \n           \nUsage Samples :  \nREQUEST \nPATCH /loyaltyManagement/loyaltyProgramProductSpec/121 \nContent-Type: application/json \n{ \n    \"name\": \"UpComingProfessionalsProgram\", \n    \"description\": \"Loyalty Program to ensure that prepaid youth market is retained\", \n} \nRESPONSE \n201 \nContent-Type: application/json \n{ \n    \"name\": \"UpComingProfessionalsProgram\", \n    \"description\": \"Loyalty Program to ensure that prepaid youth market is retained\", \n    \"productNumber\": \"983284\", \n    \"brand\": \"Globetom\", \n    \"needsLoyaltyAccount\": true, \n    \"lifeCycleStatus\": \"suspended\", \n    \"href\": \"http://server:port/loyaltyManagement/loyaltyProgramProductSpec/121\", \n    \"validFor\": { \n        \"endDateTime\": \"2016-12-31T23:59:59Z\", \n        \"startDateTime\": \"2016-01-01T00:00:00Z\" \n    } \n} \n \nCreate Program Product Spec \nPOST /loyaltyManagement/loyaltyProgramProductSpec"}
{"tmforumApiId": "TMF658", "id": "TMF658-chunk-15", "chunkIndex": 15, "totalChunks": 31, "apiName": "Loyalty Management API user guides 17.0.1", "title": "TMF658_Loyalty_Management_API_user_guides_17.0.1 (Part 15/31)", "documentType": "Tmforum api user guide", "text": "This Uniform Contract operation is used to create a managed entity or a task. \nDescription :  \n\u2022 \nThis operation is used to create a new loyalty program product specification. \n\u2022 \nThis resource represents a managed object entity. \nBehavior :  \nReturn status codes \n\u2022 \n201 Created \u2013 The loyalty program product specification was created. The created resource may optionally \nbe returned in the response Body. \n\u2022 \n409 Conflict \u2013 Resource already exists. \n\u2022 \n422 Unprocessable Entity \u2013 There was a field rule violation or missing required attribute. \nAttribute name \nMandatory \nDefault \nRule \nid \nN \nAutomatically \ngenerated \nIf not given, the \nid is generated \nby the system. \nIt is also \npossible to add \nan ID in the \nPOST request, \nwhich is then \nused \nname \nY \n \n \ndescription \nN \n \n \nproductNumber \nY \n \n \nbrand \nN \n \n \nneedsLoyaltyAccount \nN \nfalse \n \nvalidFor \nN \n \n \nlifeCycleStatus \nN \nactive \n \n \n\n\nUsage Samples :  \nREQUEST \nPOST /loyaltyManagement/loyaltyProgramProductSpec \n{ \n    \"id\" : \"121\", \n    \"name\":\"UpComingProfessionalsProgram\", \n    \"productNumber\":\"121\", \n    \"description\": \"Loyalty Program to ensure that prepaid youth market is retained\", \n    \"needsLoyaltyAccount\": true, \n    \"lifeCycleStatus\": \"active\", \n    \"brand\" : \"Globetom\", \n    \"validFor\" : { \n        \"startDateTime\" : \"2016-01-01T00:00:00Z\", \n        \"endDateTime\" : \"2016-12-31T23:59:59Z\" \n    } \n} \nRESPONSE \n201 \nContent-Type: application/json \nContent-Location: loyaltyManagement/loyaltyProgramProductSpec/121 \n(Optional: Created Resource in Response Body) \n{ \n    \"id\" : \"121\", \n    \"name\":\"UpComingProfessionalsProgram\", \n    \"productNumber\":\"121\", \n    \"description\": \"Loyalty Program to ensure that prepaid youth market is retained\", \n    \"needsLoyaltyAccount\": true, \n    \"lifeCycleStatus\": \"active\", \n    \"brand\" : \"Globetom\", \n    \"href\": \"http://server:port/loyaltyManagement/loyaltyProgramProductSpec/121\" \n    \"validFor\" : { \n        \"startDateTime\" : \"2016-01-01T00:00:00Z\", \n        \"endDateTime\" : \"2016-12-31T23:59:59Z\" \n    } \n} \n \n\n\nDelete Program Product Spec \nDELETE /loyaltyManagement/LoyaltyProgramProductSpec/{ID} \nThis Uniform Contract operation is used to delete a managed entity or a task. \nDescription :  \n\u2022 \nThis operation is used to delete a loyalty program product specification. \n\u2022 \nThis resource represents a managed entity. \n\u2022 \nThe ID may be a string (or a string containing numbers). \nBehavior :  \nReturns status codes \n\u2022 \n200 OK \u2013 The loyalty program product specification was deleted. \n\u2022 \n404 Not Found \u2013 The loyalty program product specification could not be found. \nUsage Samples :  \nREQUEST \nDELETE /loyaltyManagement/loyaltyProgramProductSpec/78 \nAccept: application/json \n \nRESPONSE \n200 \nContent-Type: application/json \n \nOPERATIONS ON RULES \nList / Retrieve Rules \nGET \n/loyaltyManagement/loyaltyProgramProductSpec/{ID}/loyaltyRule\n/{ID} \nThis Uniform Contract operation is used to retrieve the representation of a managed entity or collection. \nNote that collections can be retrieved via GET /loyaltyManagement/loyaltyProgramProductSpec/{ID}/loyaltyRule with \nno {ID}. \nThe LoyaltyRule\u2019s subresources (LoyaltyEventType, LoyaltyCondition and LoyaltyAction) links are included in the \nresponse body. \nDescription :  \n\n\n\u2022 \nThis operation is used to retrieve the loyalty program product specification\u2019s loyalty rule(s).  \n\u2022 \nFiltering selection is enabled on all first level attributes but not on inner classes. \n\u2022 \nAttribute selection is enabled on all first level attributes but not on inner classes. \n\u2022 \nThe resource is either a managed entity or a collection depending on the query pattern. \n\u2022 \nThe ID may be a string (or a string containing numbers). \nBehavior :  \nReturned status codes: \n\u2022 \n200 OK - The request was successful (includes situation in which no loyalty rules matched supplied criteria) \n\u2022 \n404 Not Found \u2013 The loyalty rule could not be found. This return code is only applicable when a managed \nentity is requested. \nUsage Samples :  \nREQUEST \nGET /loyaltyManagement/loyaltyProgramProductSpec/121/loyaltyRule/1 \nAccept: application/json \nRESPONSE \n200 \nContent-Type: application/json \n{ \n    \"id\": \"1\", \n    \"commonName\": \"\", \n    \"description\": \"Verify if the customers age qualifies for youth program benefits\", \n    \"isCNF\": true, \n    \"hasSubRules\": false, \n    \"isMandatoryEvaluation\": true, \n    \"usage\": \"Subscribers younger than 23.\", \n    \"keywords\": \"age,youth\", \n    \"policyName\": \"Age less than 23\", \n    \"href\": \"http://server:port/loyaltyManagement/loyaltyProgramProductSpec/121/LoyaltyRule/1\", \n    \u201cloyaltyEventType\u201d: [{ \n          \u201cid\u201d: \u201c8434\u201d, \n          \u201chref\u201d: \u201chttp://server:port/loyaltyManagement/loyaltyEventType/8424\u201d \n     }, \n     { \n          \u201cid\u201d: \u201c4534\u201d \n          \u201chref\u201d: \u201chttp://server:port/loyaltyManagement/loyaltyEventType/4534\u201d \n     }], \n\n\n    \u201cloyaltyCondition\u201d: [], \n    \u201cloyaltyAction\u201d: [] \n} \n \nUpdate Rule \nPUT \n/loyaltyManagement/loyaltyProgramProductSpec/{ID}/loyaltyRule\n/{ID} \nDescription : \n\u2022 \nUpdate the complete loyalty rule. \n\u2022 \nThe resource represents a managed entity. \n\u2022 \nThe ID may be a string (or a string containing numbers). \nBehavior :  \nReturn status codes \n\u2022 \n201 OK \u2013 The update was successful. \n\u2022 \n404 Not Found \u2013 The loyalty rule to be updated could not be found. \n\u2022 \n422 Unprocessable Entity \u2013 There was a field rule violation or missing required attribute \nUsage Samples :  \n \nREQUEST \nPUT /loyaltyManagement/loyaltyProgramProductSpec/121/loyaltyRule/222 \nContent-Type: application/json \n{ \n    \"description\":\"Verify if the loyalty member status is active\", \n    \"isCNF\": true, \n    \"hasSubRules\": false, \n    \"isMandatoryEvaluation\": true, \n    \"usage\": \"Active subscribers\", \n    \"keywords\": \"status,active\", \n    \"policyName\": \" Active subscribers \" \n} \nRESPONSE"}
{"tmforumApiId": "TMF658", "id": "TMF658-chunk-16", "chunkIndex": 16, "totalChunks": 31, "apiName": "Loyalty Management API user guides 17.0.1", "title": "TMF658_Loyalty_Management_API_user_guides_17.0.1 (Part 16/31)", "documentType": "Tmforum api user guide", "text": "201 \nContent-Type: application/json \n{ \n    \u201cid\u201d: \u201c222\u201d, \n    \"description\":\"Verify if the loyalty member status is active\", \n    \"isCNF\": true, \n    \"hasSubRules\": false, \n    \"isMandatoryEvaluation\": true, \n    \"usage\" : \"Active subscribers\", \n    \"keywords\" : \"status,active\", \n    \"policyName\" : \"Active subscribers\" \n    \"href\": \"http://server:port/loyaltyManagement/loyaltyProgramProductSpec/121/loyaltyRule/222\", \n    \u201cloyaltyEventType\u201d: [], \n    \u201cloyaltyCondition\u201d: [], \n    \u201cloyaltyAction\u201d: [] \n} \n \nPatch Rule \nPATCH \n/loyaltyManagement/loyaltyProgramProductSpec/{ID}/loyaltyRule\n/{ID} \nDescription :  \n\u2022 \nThis operation partially updates a loyalty rule. \n\u2022 \nThis resource represents a managed entity. \n\u2022 \nThe ID may be a string (or a string containing numbers). \nBehavior :  \nReturn status codes \n\u2022 \n201 OK \u2013 The update was successful. \n\u2022 \n404 Not Found \u2013 The loyalty rule to be updated could not be found. \n\u2022 \n422 Unprocessable Entity \u2013 There was a field rule violation or missing required attribute \n \nPatchable attributes are shown in the table below. \nAttribute name \nPatchable \nRule \nid \nN \n \n\n\nisCNF \nY \n \nhasSubRules \nY \n \nisMandatoryEvaluation \nY \n \nusage \nY \n \nkeywords \nY \n \npolicyName \nY \n \ncommonName \nY \n \ndescription \nY \n \nloyaltyEventType \nN \nThe loyaltyEventType is updated \non its own route. \nloyaltyCondition \nN \nThe loyaltyCondition is updated \non its own route. \nloyaltyAction \nN \nThe loyaltyAction is updated on \nits own route. \n           \nUsage Samples :  \nREQUEST \nPATCH /loyaltyManagement/loyaltyProgramProductSpec/121/loyaltyRule/222 \nContent-Type: application/json \n{ \n    \"isCNF\": false, \n    \"isMandatoryEvaluation\" : false \n} \nRESPONSE \n200 \nContent-Type: application/json \n\n\n{ \n    \u201cid\u201d: \u201c222\u201d, \n    \"description\":\"Verify if the loyalty member status is active\", \n    \"isCNF\": false, \n    \"hasSubRules\" : false, \n    \"isMandatoryEvaluation\" : false, \n    \"usage\" : \"Active subscribers\", \n    \"keywords\" : \"status,active\", \n    \"policyName\" : \"Active subscribers\" \n    \"href\": \"http://server:port/loyaltyManagement/loyaltyProgramProductSpec/121/loyaltyRule/222\", \n    \u201cloyaltyEventType\u201d: [], \n    \u201cloyaltyCondition\u201d: [], \n    \u201cloyaltyAction\u201d: [] \n} \n \nCreate Rule \nPOST \n/loyaltyManagement/loyaltyProgramProductSpec/{ID}/loyaltyRule \nDescription :  \n\u2022 \nThis operation is used to create a new loyalty rule.  \n\u2022 \nThis resource represents a managed object entity. \nBehavior :  \nReturn status codes \n\u2022 \n201 Created \u2013 The loyalty rule was created. The created resource may optionally be returned in the \nresponse Body. \n\u2022 \n404 Not Found \u2013 The program spec could not be found. \n\u2022 \n409 Conflict \u2013 Resource already exists. \n\u2022 \n422 Unprocessable Entity \u2013 There was a field rule violation or missing required attribute. \nAttribute name \nMandatory \nDefault \nRule \nid \nN \nAutomatically \ngenerated \nIf not given, the \nid is generated \nby the system. \nIt is also \npossible to add \nan ID in the \nPOST request, \n\n\nwhich is then \nused \nisCNF \nN \ntrue \n \nhasSubRules \nN \nfalse \n \nisMandatoryEvaluation \nN \ntrue \n \nusage \nN \n \n \nkeywords \nN \n \n \npolicyName \nN \n \n \ncommonName \nN \n \n \ndescription \nN \n \n \n \nUsage Samples :  \n \nREQUEST \nPOST /loyaltyManagement/loyaltyProgramProductSpec/121/loyaltyRule \nContent-Type: application/json \n{ \n    \"id\" : \"1\", \n    \"description\": \"Verify if the customers age qualifies for youth program benefits\", \n    \"isCNF\": true, \n    \"hasSubRules\" : false, \n    \"isMandatoryEvaluation\" : true, \n    \"usage\" : \"Subscribers younger than specified age.\", \n    \"keywords\" : \"age,youth\", \n    \"policyName\" : \"Age less than 23\" \n} \nRESPONSE \n201 \nContent-Type: application/json \nContent-Location: /loyaltyManagement/loyaltyProgramProductSpec/121/loyaltyRule/1 \n\n\n(Optional: Created Resource in Response Body) \n{ \n    \"id\" : \"1\", \n    \"description\": \"Verify if the customers age qualifies for youth program benefits\", \n    \"isCNF\": true, \n    \"hasSubRules\" : false, \n    \"isMandatoryEvaluation\" : true, \n    \"usage\" : \"Subscribers younger than specified age.\", \n    \"keywords\" : \"age,youth\", \n    \"policyName\" : \"Age less than 23\", \n    \"href\": \u201chttp://server:port/loyaltyManagement/loyaltyProgramProductSpec/121/loyaltyRule/1\", \n    \u201cloyaltyEventType\u201d: [], \n    \u201cloyaltyCondition\u201d: [], \n    \u201cloyaltyAction\u201d: [] \n} \n \nDelete Rule \nDELETE \n/loyaltyManagement/loyaltyProgramProductSpec/{ID}/LoyaltyRule\n/{ID} \nThis Uniform Contract operation is used to delete a managed entity or a task. \nDescription :  \n\u2022 \nThis operation is used to delete a loyalty rule. \n\u2022 \nThis resource represents a managed entity. \n\u2022 \nThe ID may be a string (or a string containing numbers). \nBehavior :  \nReturns status codes \n\u2022 \n200 OK \u2013 The loyalty rule was deleted. \n\u2022 \n404 Not Found \u2013 The loyalty rule could not be found. \n \nUsage Samples :  \nREQUEST \nDELETE /loyaltyManagement/loyaltyProgramProductSpec/121/loyaltyRule/1 \n\n\nAccept: application/json \n \nRESPONSE \n200 \nContent-Type: application/json \n \nOPERATIONS ON Rule Conditions \nList / Retrieve Rule Conditions \nGET \n/loyaltyManagement/loyaltyProgramProductSpec/{ID}/loyaltyRule\n/{ID}/loyaltyCondition/{ID} \nThis Uniform Contract operation is used to retrieve the representation of a managed entity or collection. \nNote that collections can be retrieved via GET \n/loyaltyManagement/loyaltyProgramProductSpec/{ID}/loyaltyRule/{ID}/loyaltyCondition with no {ID}. \nDescription :  \n\u2022 \nThis operation is used to retrieve the loyalty rule\u2019s loyalty condition(s).  \n\u2022 \nFiltering selection is not enabled. \n\u2022 \nAttribute selection is not enabled. \n\u2022 \nThe resource is either a managed entity or a collection depending on the query pattern. \n\u2022 \nThe ID may be a string (or a string containing numbers). \nBehavior :  \nReturned status codes: \n\u2022 \n200 OK - The request was successful (includes situation in which no loyalty conditions matched supplied \ncriteria) \n\u2022 \n404 Not Found \u2013 The loyalty rule condition could not be found. This return code is only applicable when a \nmanaged entity is requested. \n \nUsage Samples :  \nREQUEST \nGET /loyaltyManagement/loyaltyProgramProductSpec/121/loyaltyRule/1/loyaltyCondition/2 \nAccept: application/json \nRESPONSE"}
{"tmforumApiId": "TMF658", "id": "TMF658-chunk-17", "chunkIndex": 17, "totalChunks": 31, "apiName": "Loyalty Management API user guides 17.0.1", "title": "TMF658_Loyalty_Management_API_user_guides_17.0.1 (Part 17/31)", "documentType": "Tmforum api user guide", "text": "200 \nContent-Type: application/json \n{ \n    \"id\": \"2\", \n    \"href\": \u201chttp://server:port/loyaltyManagement/loyaltyCondition/2\" \n} \n \nCreate Rule Condition \nPOST \n/loyaltyManagement/loyaltyProgramProductSpec/{ID}/loyaltyRule\n/{ID}/loyaltyCondition \nDescription :  \n\u2022 \nThis operation is used to add a loyalty condition to a loyalty rule. \n\u2022 \nThis resource represents a managed object entity. \nBehavior :  \nReturn status codes \n\u2022 \n201 Created \u2013 The loyalty condition was added to the rule. The created resource may optionally be returned \nin the response Body. \n\u2022 \n404 Not Found \u2013 The program spec or rule could not be found. \n\u2022 \n409 Conflict \u2013 The loyalty condition has already been added to the loyalty rule. \n\u2022 \n422 Unprocessable Entity \u2013 There was a field rule violation or missing required attribute, for example the \nloyaltyCondition does not exist. \nAttribute name \nMandatory \nDefault \nRule \nid \nY \n \nIt should be an \nexisting \nloyaltyCondition \n \nUsage Samples :  \nREQUEST \nPOST /loyaltyManagement/loyaltyProgramProductSpec/121/loyaltyRule/1/loyaltyCondition \nContent-Type: application/json \n{ \n\n\n    \"id\" : \"2\" \n} \nRESPONSE \n201 \nContent-Type: application/json \nContent-Location: /loyaltyManagement/loyaltyProgramProductSpec/121/loyaltyRule/1/loyaltyCondition/2 \n(Optional: Created Resource in Response Body) \n{ \n    \"id\": \"2\", \n    \"href\": \u201chttp://server:port/loyaltyManagement/loyaltyCondition/2\" \n} \n \nDelete Rule Condition \nDELETE \n/loyaltyManagement/loyaltyProgramProductSpec/{ID}/loyaltyRule\n/{ID}/loyaltyCondition/{ID} \nThis Uniform Contract operation is used to delete a managed entity or a task. \nDescription :  \n\u2022 \nThis operation is used to remove a loyalty condition from a loyalty rule. \n\u2022 \nThis resource represents a managed entity. \n\u2022 \nThe ID may be a string (or a string containing numbers). \nBehavior :  \nReturns status codes \n\u2022 \n200 OK \u2013 The loyalty condition was removed from the loyalty rule. \n\u2022 \n404 Not Found \u2013 The loyalty condition could not be found. \nUsage Samples : \nREQUEST \nDELETE /loyaltyManagement/loyaltyProgramProductSpec/121/loyaltyRule/1/loyaltyCondition/2 \nAccept: application/json \n \nRESPONSE \n200 \n\n\nContent-Type: application/json \nOPERATIONS ON Rule Event Types \nList / Retrieve Rule Conditions \nGET \n/loyaltyManagement/loyaltyProgramProductSpec/{ID}/loyaltyRule\n/{ID}/loyaltyCondition/{ID} \nThis Uniform Contract operation is used to retrieve the representation of a managed entity or collection. \nNote that collections can be retrieved via GET \n/loyaltyManagement/loyaltyProgramProductSpec/{ID}/loyaltyRule/{ID}/loyaltyEventType with no {ID}. \nDescription :  \n\u2022 \nThis operation is used to retrieve the loyalty rule\u2019s supported loyalty event(s).  \n\u2022 \nFiltering selection is enabled on all first level attributes but not on inner classes. \n\u2022 \nAttribute selection is enabled on all first level attributes but not on inner classes. \n\u2022 \nThe resource is either a managed entity or a collection depending on the query pattern. \n\u2022 \nThe ID may be a string (or a string containing numbers). \nBehavior :  \nReturned status codes: \n\u2022 \n200 OK - The request was successful (includes situation in which no loyalty event types matched supplied \ncriteria) \n\u2022 \n404 Not Found \u2013 The loyalty event type could not be found. This return code is only applicable when a \nmanaged entity is requested. \nUsage Samples :  \nREQUEST \nGET /loyaltyManagement/loyaltyProgramProductSpec/121/loyaltyRule/1/loyaltyEventType/2 \nAccept: application/json \nRESPONSE \n200 \nContent-Type: application/json \n{ \n    \"id\": \"2\", \n    \"href\": \u201chttp://server:port/loyaltyManagement/loyaltyEventType/2\" \n} \n\n\n \nCreate Rule Condition \nPOST \n/loyaltyManagement/loyaltyProgramProductSpec/{ID}/loyaltyRule\n/{ID}/loyaltyCondition \nDescription :  \n\u2022 \nThis operation is used to add a loyalty event type to a loyalty rule. \n\u2022 \nThis resource represents a managed object entity. \nBehavior :  \nReturn status codes \n\u2022 \n201 Created \u2013 The loyalty event type was added to the loyalty rule. The created resource may optionally be \nreturned in the response Body. \n\u2022 \n404 Not Found \u2013 The program spec or rule could not be found. \n\u2022 \n409 Conflict \u2013 The loyalty event type has already been added to the loyalty rule. \n\u2022 \n422 Unprocessable Entity \u2013 There was a field rule violation or missing required attribute, for example the \nloyaltyEventType does not exist. \nAttribute name \nMandatory \nDefault \nRule \nid \nY \n \nIt should be an \nexisting \nloyaltyEventType \n \nUsage Samples :  \nREQUEST \nPOST /loyaltyManagement/loyaltyProgramProductSpec/121/loyaltyRule/1/loyaltyEventType \nContent-Type: application/json \n{ \n    \"id\" : \"2\" \n} \nRESPONSE \n201 \nContent-Type: application/json \nContent-Location: /loyaltyManagement/loyaltyProgramProductSpec/121/loyaltyRule/1/loyaltyEventType/2 \n\n\n(Optional: Created Resource in Response Body) \n{ \n    \"id\": \"2\", \n    \"href\": \u201chttp://server:port/loyaltyManagement/loyaltyEventType/2\" \n} \n \nDelete Rule Condition \nDELETE \n/loyaltyManagement/loyaltyProgramProductSpec/{ID}/loyaltyRule\n/{ID}/loyaltyCondition/{ID} \nThis Uniform Contract operation is used to delete a managed entity or a task. \nDescription :  \n\u2022 \nThis operation is used to remove a loyalty event type from a loyalty rule. \n\u2022 \nThis resource represents a managed entity. \n\u2022 \nThe ID may be a string (or a string containing numbers). \nBehavior :  \nReturns status codes \n\u2022 \n200 OK \u2013 The loyalty event type was removed from the loyalty rule. \n\u2022 \n404 Not Found \u2013 The loyalty event type could not be found. \nUsage Samples :  \nREQUEST \nDELETE /loyaltyManagement/loyaltyProgramProductSpec/121/loyaltyRule/2/loyaltyEventType/1 \nAccept: application/json \n \nRESPONSE \n200 \nContent-Type: application/json \n \nOPERATIONS ON Rule Actions \nList / Retrieve Rule Actions"}
{"tmforumApiId": "TMF658", "id": "TMF658-chunk-18", "chunkIndex": 18, "totalChunks": 31, "apiName": "Loyalty Management API user guides 17.0.1", "title": "TMF658_Loyalty_Management_API_user_guides_17.0.1 (Part 18/31)", "documentType": "Tmforum api user guide", "text": "GET \n/loyaltyManagement/loyaltyProgramProductSpec/{ID}/loyaltyRule\n/{ID}/loyaltyActions/{ID} \nThis Uniform Contract operation is used to retrieve the representation of a managed entity or collection. \nNote that collections can be retrieved via GET \n/loyaltyManagement/loyaltyProgramProductSpec/{ID}/loyaltyRule/{ID}/loyaltyAction with no {ID}. \nDescription :  \n\u2022 \nThis operation is used to retrieve the loyalty rule\u2019s loyalty action(s).  \n\u2022 \nFiltering selection is enabled on all first level attributes but not on inner classes. \n\u2022 \nAttribute selection is enabled on all first level attributes but not on inner classes. \n\u2022 \nThe resource is either a managed entity or a collection depending on the query pattern. \n\u2022 \nThe ID may be a string (or a string containing numbers). \nBehavior :  \nReturned status codes: \n\u2022 \n200 OK - The request was successful (includes situation in which no loyalty actions matched supplied \ncriteria) \n\u2022 \n404 Not Found \u2013 The loyalty action could not be found. This return code is only applicable when a managed \nentity is requested. \nUsage Samples :  \nREQUEST \nGET /loyaltyManagement/loyaltyProgramProductSpec/121/loyaltyRule/1/loyaltyAction/2 \nAccept: application/json \nRESPONSE \n200 \nContent-Type: application/json \n{ \n    \"id\": \"2\", \n    \u201chref\u201d: \u201chttp://server:port/loyaltyManagement/loyaltyAction/2\u201d \n} \n \nCreate Rule Action \n\n\nPOST \n/loyaltyManagement/loyaltyProgramProductSpec/{ID}/loyaltyRule\n/{ID}/loyaltyActions \nDescription :  \n\u2022 \nThis operation is used to add a loyalty action to a loyalty rule.  \n\u2022 \nThis resource represents a managed object entity. \nBehavior :  \nReturn status codes \n\u2022 \n201 Created \u2013 The loyalty action was added to the loyalty rule. The created resource may optionally be \nreturned in the response Body. \n\u2022 \n404 Not Found \u2013 The program spec or rule could not be found. \n\u2022 \n409 Conflict \u2013 The loyalty action has already been added to the loyalty rule. \n\u2022 \n422 Unprocessable Entity \u2013 There was a field rule violation or missing required attribute, for example the \nloyalty action does not exist. \nAttribute name \nMandatory \nDefault \nRule \nid \nY \n \nIt should be an \nexisting \nloyaltyAction \n \nUsage Samples : \nREQUEST \nPOST /loyaltyManagement/loyaltyProgramProductSpec/121/loyaltyRule/1/loyaltyAction \nContent-Type: application/json \n{ \n    \"id\" : \"2\" \n} \nRESPONSE \n201 \nContent-Type: application/json \nContent-Location: /loyaltyManagement/loyaltyProgramProductSpec/121/loyaltyRule/1/loyaltyAction/2 \n(Optional: Created Resource in Response Body) \n{ \n    \"id\": \"2\", \n    \u201chref\u201d: \u201chttp://server:port/loyaltyManagement/loyaltyAction/2\u201d \n\n\n } \n \nDelete Rule Action \nDELETE \n/loyaltyManagement/loyaltyProgramProductSpec/{ID}/loyaltyRule\n/{ID}/loyaltyActions/{ID} \nThis Uniform Contract operation is used to delete a managed entity or a task. \nDescription :  \n\u2022 \nThis operation is used to remove a loyalty action from a loyalty rule. \n\u2022 \nThis resource represents a managed entity. \n\u2022 \nThe ID may be a string (or a string containing numbers). \nBehavior :  \nReturns status codes \n\u2022 \n200 OK \u2013 The loyalty action was removed from the loyalty rule. \n\u2022 \n404 Not Found \u2013 The loyalty action could not be found. \nUsage Samples : \nREQUEST \nDELETE /loyaltyManagement/loyaltyProgramProductSpec/121/loyaltyRule/1/loyaltyAction/1 \nAccept: application/json \n \nRESPONSE \n200 \nContent-Type: application/json \n \nOPERATIONS ON CONDITIONS \nList / Retrieve Conditions \nGET /loyaltyManagement/loyaltyCondition/{ID} \nThis Uniform Contract operation is used to retrieve the representation of a managed entity or collection. \nNote that collections can be retrieved via GET /loyaltyManagement/loyaltyCondition with no {ID}. \n\n\nDescription :  \n\u2022 \nThis operation is used to retrieve the loyalty condition. \n\u2022 \nFiltering selection is enabled on all id, attribute and value. \n\u2022 \nAttribute selection is enabled on all first level attributes but not on inner classes. \n\u2022 \nThe resource is either a managed entity or a collection depending on the query pattern. \n\u2022 \nThe ID may be a string (or a string containing numbers). \nBehavior :  \nReturned status codes: \n\u2022 \n200 OK - The request was successful (includes situation in which no loyalty conditions matched supplied \ncriteria) \n\u2022 \n404 Not Found \u2013 The loyalty condition could not be found. This return code is only applicable when a \nmanaged entity is requested. \nUsage Samples : \nREQUEST \nGET /loyaltyManagement/loyaltyCondition/1 \nAccept: application/json \nRESPONSE \n200 \nContent-Type: application/json \n{ \n    \"id\": \"1\", \n    \"attribute\": \"age\", \n    \"operator\": \"<\", \n    \"value\": \"30\", \n    \"href\": \"http://server:port/loyaltyManagement/loyaltyCondition/1\" \n} \n \nUpdate Conditions \nPUT /loyaltyManagement/loyaltyCondition/{ID} \n \nDescription : \n\u2022 \nUpdate the complete loyalty condition. \n\u2022 \nThe resource represents a managed entity. \n\u2022 \nThe ID may be a string (or a string containing numbers). \n\n\nBehavior :  \nReturn status codes \n\u2022 \n201 OK \u2013 The update was successful. \n\u2022 \n404 Not Found \u2013 The loyalty condition to be updated could not be found. \n\u2022 \n422 Unprocessable Entity \u2013 There was a field rule violation or missing required attribute \nUsage Samples : \nREQUEST \nPUT /loyaltyManagement/loyaltyCondition/1 \nContent-Type: application/json \n{ \n    \"attribute\u201d: \u201cstatus\", \n    \"operator\":\"=\", \n    \"value\": \"active\" \n} \nRESPONSE \n201 \nContent-Type: application/json \n{ \n    \"id\" : \"2\", \n    \"attribute\u201d: \u201cstatus\", \n    \"operator\":\"=\", \n    \"value\": \"active\", \n    \"href\": \"http://server:port/loyaltyManagement/loyaltyCondition/1\" \n} \n \nPatch Condition \nPATCH /loyaltyManagement/loyaltyCondition/{ID} \n \nThis Uniform Contract operation is used to partially update the representation of a managed entity or a task. \nDescription :  \n\u2022 \nThis operation partially updates a loyalty condition. \n\u2022 \nThis resource represents a managed entity. \n\u2022 \nThe ID may be a string (or a string containing numbers)."}
{"tmforumApiId": "TMF658", "id": "TMF658-chunk-19", "chunkIndex": 19, "totalChunks": 31, "apiName": "Loyalty Management API user guides 17.0.1", "title": "TMF658_Loyalty_Management_API_user_guides_17.0.1 (Part 19/31)", "documentType": "Tmforum api user guide", "text": "Behavior :  \nReturn status codes \n\u2022 \n201 OK \u2013 The update was successful. \n\u2022 \n404 Not Found \u2013 The loyalty condition to be updated could not be found. \n\u2022 \n422 Unprocessable Entity \u2013 There was a field rule violation or missing required attribute \n \nPatchable attributes are shown in the table below. \nAttribute name \nPatchable \nRule \nid \nN \n \nattribute \nY \n \noperator \nY \n \nvalue \nY \n \n           \nUsage Samples :  \nREQUEST \nPUT /loyaltyManagement/loyaltyCondition/1 \nContent-Type: application/json \n{ \n  \"operator\":\"<=\", \n} \nRESPONSE \n200 \nContent-Type: application/json \n{ \n    \"id\": \"1\", \n    \"attribute\": \"age\", \n    \"operator\": \"<=\", \n    \"value\": \"30\", \n    \"href\": \u201chttp://server:port/loyaltyManagement/loyaltyCondition/1\" \n} \n\n\n \nCreate Condition \nPOST /loyaltyManagement/loyaltyCondition \nThis Uniform Contract operation is used to create a managed entity or a task. \nDescription :  \n\u2022 \nThis operation is used to create a new loyalty condition.  \n\u2022 \nThis resource represents a managed object entity. \nBehavior :  \nReturn status codes \n\u2022 \n201 Created \u2013 The loyalty condition was created. The created resource may optionally be returned in the \nresponse Body. \n\u2022 \n409 Conflict \u2013 Resource already exists. \n\u2022 \n422 Unprocessable Entity \u2013 There was a field rule violation or missing required attribute. \nAttribute name \nMandatory \nDefault \nRule \nid \nN \nAutomatically \ngenerated \nIf not given, the \nid is generated \nby the system. It \nis also possible \nto add an ID in \nthe POST \nrequest, which is \nthen used \nattribute \nY \n \n \noperator \nY \n \n \nvalue \nY \n \n \nUsage Samples :  \nREQUEST \n\n\nPOST /loyaltyManagement/loyaltyCondition \n{ \n    \"id\" : \"2\", \n    \"attribute\":\"status\", \n    \"operator\":\"=\", \n    \"value\": \"active\" \n} \nRESPONSE \n201 \nContent-Type: application/json \nContent-Location: loyaltyManagement/loyaltyCondition/2 \n(Optional: Created Resource in Response Body) \n{ \n    \"id\": \"2\", \n    \"attribute\": \"status\", \n    \"operator\": \"=\", \n    \"value\": \"active\", \n    \"href\": \"http://server:port/loyaltyManagement/loyaltyCondition/2\" \n} \n \nDelete Condition \nDELETE /loyaltyManagement/loyaltyCondition \nThis Uniform Contract operation is used to delete a managed entity or a task. \nDescription :  \n\u2022 \nThis operation is used to delete a loyalty condition. \n\u2022 \nThis resource represents a managed entity. \n\u2022 \nThe ID may be a string (or a string containing numbers). \nBehavior :  \nReturns status codes \n\u2022 \n200 OK \u2013 The loyalty condition was deleted. \n\u2022 \n404 Not Found \u2013 The loyalty condition could not be found. \n\u2022 \n422 Unprocessable Entity \u2013The loyalty condition belongs to a loyalty rule and cannot be deleted. \nUsage Samples :  \n\n\nREQUEST \nDELETE /loyaltyManagement/loyaltyProgramCondition/2 \nAccept: application/json \n \nRESPONSE \n200 \nContent-Type: application/json \n \nOPERATIONS ON ACTIONS \nList / Retrieve Actions \nGET /loyaltyManagement/loyaltyAction/{ID} \nThis Uniform Contract operation is used to retrieve the representation of a managed entity or collection. \nNote that collections can be retrieved via GET /loyaltyManagement/loyaltyAction with no {ID}. \nDescription :  \n\u2022 \nThis operation is used to retrieve the loyalty action. \n\u2022 \nFiltering selection is enabled on all first level attributes but not on inner classes. \n\u2022 \nAttribute selection is enabled on all first level attributes but not on inner classes. \n\u2022 \nThe resource is either a managed entity or a collection depending on the query pattern. \n\u2022 \nThe ID may be a string (or a string containing numbers). \nBehavior :  \nReturned status codes: \n\u2022 \n200 OK - The request was successful (includes situation in which no loyalty actions matched supplied \ncriteria) \n\u2022 \n404 Not Found \u2013 The loyalty action could not be found. This return code is only applicable when a managed \nentity is requested. \nUsage Samples :  \nREQUEST \nGET /loyaltyManagement/loyaltyAction/111 \nAccept: application/json \nRESPONSE \n200 \n\n\nContent-Type: application/json \n{ \n    \u201cid\u201d: \u201c111\u201d, \n    \u201ctype\u201d: \u201cLoyaltyEarn\u201d, \n    \u201cactionAttributes\u201d: { \n        \u201cquantity\u201d: 50 \n    }, \n    headers\u201d: { \n        \u201cContent-Type\u201d: \u201ctext/json\u201d \n    }, \n    \u201cbody\u201d: { \n        \u201corderType\u201d: \u201cdataBundle\u201d, \n        \u201corderCatagory\u201d: \u201cbundles\u201d \n    }, \n    \u201chref\u201d: \u201chttp://server:port/loyaltyManagement/loyaltyAction/111\u201d, \n     \"commonName\": \"Earn50\", \n     \"description\": \"\", \n     \"action\": \"POST\", \n     \"endpoint\": \u201chttp://server:port/loyaltyManagement/loyaltyProgramMember/{memberId}/   \n                            loyaltyBalance/{balanceId}/loyaltyEarn\", \n      \"version\": \"2.0\" \n} \n \nUpdate Action \nPUT /loyaltyManagement/loyaltyAction/{ID} \nDescription : \n\u2022 \nUpdate the complete loyalty action. \n\u2022 \nThe resource represents a managed entity. \n\u2022 \nThe ID may be a string (or a string containing numbers). \nBehavior :  \nReturn status codes \n\u2022 \n201 OK \u2013 The update was successful. \n\u2022 \n404 Not Found \u2013 The loyalty action to be updated could not be found. \n\u2022 \n422 Unprocessable Entity \u2013 There was a field rule violation or missing required attribute \nUsage Samples :  \n\n\nREQUEST \nPUT /loyaltyManagement/loyaltyAction/2 \nContent-Type: application/json \n{ \n    \u201ctype\u201d: \u201cLoyaltyEarn\u201d, \n    \u201cactionAttributes\u201d: { \n        \u201cquantity\u201d: 80 \n    }, \n    headers\u201d: { \n        \u201cContent-Type\u201d: \u201ctext/json\u201d \n    }, \n    \u201cbody\u201d: { \n        \u201corderType\u201d: \u201cdataBundle\u201d, \n        \u201corderCatagory\u201d: \u201cbundles\u201d \n    }, \n    \"commonName\": \"Earn80\", \n    \"description\": \"Award customer loyalty\", \n    \"action\": \"POST\", \n    \"endpoint\": \u201chttp://server:port/loyaltyManagement/loyaltyProgramMember/{memberId}/      \n                            loyaltyBalance/{balanceId}/loyaltyEarn\", \n     \"version\": \"5.0\" \n    } \n} \nRESPONSE \n201 \nContent-Type: application/json \n{ \n    \u201cid\u201d: \u201c2\u201d, \n    \u201ctype\u201d: \u201cLoyaltyEarn\u201d, \n    \u201cactionAttributes\u201d: { \n        \u201cquantity\u201d: 80 \n    }, \n    \u201chref\u201d: \u201chttp://server:port/loyaltyManagement/loyaltyAction/2\u201d, \n     \"commonName\": \"Earn80\", \n     \"description\": \"Award customer loyalty\", \n     \"action\": \"POST\","}
{"tmforumApiId": "TMF658", "id": "TMF658-chunk-20", "chunkIndex": 20, "totalChunks": 31, "apiName": "Loyalty Management API user guides 17.0.1", "title": "TMF658_Loyalty_Management_API_user_guides_17.0.1 (Part 20/31)", "documentType": "Tmforum api user guide", "text": "\"endpoint\": \u201chttp://server:port/loyaltyManagement/loyaltyProgramMember/{memberId}/  \n                            /loyaltyBalance/{balanceId}/loyaltyEarn\", \n    \"version\": \"5.0\" \n} \n \nPatch Action \nPATCH /loyaltyManagement/loyaltyAction/{ID} \nThis Uniform Contract operation is used to partially update the representation of a managed entity or a task. \nDescription :  \n\u2022 \nThis operation partially updates a loyalty action. \n\u2022 \nThis resource represents a managed entity. \n\u2022 \nThe ID may be a string (or a string containing numbers). \nBehavior :  \nReturn status codes \n\u2022 \n201 OK \u2013 The update was successful. \n\u2022 \n404 Not Found \u2013 The loyalty action to be updated could not be found. \n\u2022 \n422 Unprocessable Entity \u2013 There was a field rule violation or missing required attribute \n \nPatchable attributes are shown in the table below. \nAttribute name \nPatchable \nRule \nid \nN \n \ntype \nY \n \nactionAttributes \nY \n \nversion \nY \nShould be higher than the \nprevious version. \ncommonName \nY \n \ndescription \nY \n \naction \nY \n \n\n\nendpoint \nY \n \n           \nUsage Samples :  \nREQUEST \nPATCH /loyaltyManagement/loyaltyAction/2 \nContent-Type: application/json \n{ \n    \u201cactionAttributes\u201d: { \n        \u201cquantity\u201d: 100 \n    }, \n    \"version\": \"6.0\" \n} \nRESPONSE \n201 \nContent-Type: application/json \n{ \n    \u201cid\u201d: \u201c2\u201d, \n    \u201ctype\u201d: \u201cLoyaltyEarn\u201d, \n    \u201cactionAttributes\u201d: { \n        \u201cquantity\u201d: 100 \n    }, \n    \u201chref\u201d: \u201chttp://server:port/loyaltyManagement/loyaltyAction/2\u201d, \n    \"commonName\": \"Earn100\", \n    \"description\": \"Award customer loyalty\", \n    \"action\": \"POST\", \n    \u201cendpoint\": \u201chttp://server:port/loyaltyManagement/loyaltyProgramMember/{memberId}/  \n                            loyaltyBalance/{balanceId}/loyaltyEarn\", \n     \"version\": \"6.0\" \n} \n \nCreate Action \nPOST /loyaltyManagement/loyaltyAction \nThis Uniform Contract operation is used to create a managed entity or a task. \n\n\nDescription :  \n\u2022 \nThis operation is used to create a new loyalty action. \n\u2022 \nThis resource represents a managed object entity. \nBehavior :  \nReturn status codes \n\u2022 \n201 Created \u2013 The loyalty action was created. The created resource may optionally be returned in the \nresponse Body. \n\u2022 \n409 Conflict \u2013 Resource already exists. \n\u2022 \n422 Unprocessable Entity \u2013 There was a field rule violation or missing required attribute. \nAttribute name \nMandatory \nDefault \nRule \nid \nN \nAutomatically \ngenerated \nIf not given, the id is \ngenerated by the \nsystem. It is also \npossible to add an ID in \nthe POST request, \nwhich is then used \ntype \nY \n \nMust be LoyaltyEarn, \nCustomerOrder or \nBusinessInteraction \nactionAttributes \nN \n \n \nbody \nN \n \n \nheaders \nN \n \n \nversion \nN \n1.0 \n \ncommonName \nN \n \n \ndescription \nN \n \n \naction \nY \n \nPOST, PUT, GET or \nDELETE \nendpoint \nY \n \n \n \nUsage Samples :  \n \nREQUEST \n\n\nPOST /loyaltyManagement/loyaltyAction \n{ \n    \u201cid\u201d: \u201c111\u201d, \n    \u201ctype\u201d: \u201cLoyaltyEarn\u201d, \n    \u201cactionAttributes\u201d: { \n        \u201cquantity\u201d: 50 \n    }, \n    \u201cheaders\u201d: { \n        \u201cContent-Type\u201d: \u201ctext/json\u201d \n    }, \n    \u201cbody\u201d: { \n        \u201corderType\u201d: \u201cdataBundle\u201d, \n        \u201corderCatagory\u201d: \u201cbundles\u201d \n    }, \n    \"commonName\": \"LoyaltyEarn\", \n     \"description\": \"\", \n     \"action\": \"POST\", \n     \"endpoint\": \u201chttp://server:port/loyaltyManagement/loyaltyProgramMember/{memberId} \n                            /loyaltyBalance/{balanceId}/loyaltyEarn\", \n      \"version\": \"2.0\" \n} \nRESPONSE \n201 \nContent-Type: application/json \nContent-Location: loyaltyManagement/loyaltyAction/111 \n(Optional: Created Resource in Response Body) \n{ \n    \u201cid\u201d: \u201c111\u201d, \n    \u201ctype\u201d: \u201cLoyaltyEarn\u201d, \n    \u201cactionAttributes\u201d: { \n        \u201cquantity\u201d: 50 \n    }, \n    \u201cheaders\u201d: { \n        \u201cContent-Type\u201d: \u201ctext/json\u201d \n    }, \n    \u201cbody\u201d: { \n        \u201corderType\u201d: \u201cdataBundle\u201d, \n\n\n        \u201corderCatagory\u201d: \u201cbundles\u201d \n    }, \n    \u201chref\u201d: \u201chttp://server:port/loyaltyManagement/loyaltyAction/111\u201d, \n     \"commonName\": \"LoyaltyEarn\", \n     \"description\": \"\", \n     \"action\": \"POST\", \n     \"endpoint\": \u201chttp://server:port/loyaltyManagement/loyaltyProgramMember/{memberId}/  \n                           loyaltyBalance/{balanceId}/loyaltyEarn\", \n     \"version\": \"2.0\" \n} \n \nDelete Action \nPOST /loyaltyManagement/loyaltyAction/{ID} \nThis Uniform Contract operation is used to delete a managed entity or a task. \nDescription :  \n\u2022 \nThis operation is used to delete a loyalty action. \n\u2022 \nThis resource represents a managed entity. \n\u2022 \nThe ID may be a string (or a string containing numbers). \nBehavior :  \nReturns status codes \n\u2022 \n200 OK \u2013 The loyalty action was deleted. \n\u2022 \n404 Not Found \u2013 The loyalty action could not be found. \n\u2022 \n422 Unprocessable Entity \u2013The loyalty action belongs to a loyalty rule and cannot be deleted. \n \nUsage Samples : \nREQUEST \nDELETE /loyaltyManagement/loyaltyAction/78 \nAccept: application/json \n \nRESPONSE \n200 \nContent-Type: application/json \n \n\n\nOPERATIONS ON EVENT TYPES \nList / Retrieve Event Types \nGET /loyaltyManagement/loyaltyEventType/{ID} \nThis Uniform Contract operation is used to retrieve the representation of a managed entity or collection. \nNote that collections can be retrieved via GET /loyaltyManagement/loyaltyEventType with no {ID}. \nDescription :  \n\u2022 \nThis operation is used to retrieve the loyalty event types. \n\u2022 \nFiltering selection is enabled on all attributes. \n\u2022 \nAttribute selection is enabled on all attributes. \n\u2022 \nThe resource is either a managed entity or a collection, depending on the query pattern. \n\u2022 \nThe ID may be a string (or a string containing numbers). \nBehavior :  \nReturned status codes: \n\u2022 \n200 OK - The request was successful (includes situation in which no loyalty event types matched supplied \ncriteria) \n\u2022 \n404 Not Found \u2013 The loyalty event type could not be found. This return code is only applicable when a \nmanaged entity is requested. \nUsage Samples :  \nREQUEST \nGET /loyaltyManagement/loyaltyEventType/111 \nAccept: application/json \nRESPONSE \n200 \nContent-Type: application/json \n{ \n    \u201cid\u201d: \u201c111\u201d, \n    \u201ceventType\u201d: \u201corderCreationNotification\u201d, \n    \u201chref\u201d: \u201chttp://server:port/loyaltyManagement/loyaltyEventType/111\u201d \n} \n \nUpdate Event Type"}
{"tmforumApiId": "TMF658", "id": "TMF658-chunk-21", "chunkIndex": 21, "totalChunks": 31, "apiName": "Loyalty Management API user guides 17.0.1", "title": "TMF658_Loyalty_Management_API_user_guides_17.0.1 (Part 21/31)", "documentType": "Tmforum api user guide", "text": "PUT /loyaltyManagement/loyaltyEventType/{ID} \nDescription : \n\u2022 \nUpdate the complete loyalty event type. \n\u2022 \nThe resource represents a managed entity. \n\u2022 \nThe ID may be a string (or a string containing numbers). \nBehavior :  \nReturn status codes \n\u2022 \n201 OK \u2013 The update was successful. \n\u2022 \n404 Not Found \u2013 The loyalty event type to be updated could not be found. \n\u2022 \n409 Conflict \u2013 The loyalty event type already exists. \n\u2022 \n422 Unprocessable Entity \u2013 There was a field rule violation or missing required attribute \nUsage Samples :  \nREQUEST \nPUT /loyaltyManagement/loyaltyEventType/2 \nContent-Type: application/json \n{ \n    \u201ceventType\u201d: \u201ccreateCustomerInvoice\u201d \n} \nRESPONSE \n201 \nContent-Type: application/json \n{ \n    \u201cid\u201d: \u201c2\u201d, \n    \u201ceventType\u201d: \u201ccreateCustomerInvoice\u201d, \n    \u201chref\u201d: \u201chttp://server:port/loyaltyManagement/loyaltyEventType/2\u201d \n} \n \nPatch Event Type \nPATCH /loyaltyManagement/loyaltyEventType/{ID} \nThis Uniform Contract operation is used to partially update the representation of a managed entity or a task. \nDescription :  \n\u2022 \nThis operation partially updates a loyalty event type. \n\u2022 \nThis resource represents a managed entity. \n\n\n\u2022 \nThe ID may be a string (or a string containing numbers). \nBehavior :  \nReturn status codes \n\u2022 \n201 OK \u2013 The update was successful. \n\u2022 \n404 Not Found \u2013 The loyalty event type to be updated could not be found.  \n\u2022 \n409 Conflict \u2013 The loyalty event type already exists. \n\u2022 \n422 Unprocessable Entity \u2013 There was a field rule violation or missing required attribute \n \nPatchable attributes are shown in the table below. \nAttribute name \nPatchable \nRule \nid \nN \n \neventType \nY \nMust be unique. \n           \nUsage Samples :  \nREQUEST \nPATCH /loyaltyManagement/loyaltyEventType/2 \nContent-Type: application/json \n{ \n    \u201ceventType\u201d: \u201ccreateCustomerInvoice\u201d \n} \nRESPONSE \n201 \nContent-Type: application/json \n{ \n    \u201cid\u201d: \u201c2\u201d, \n    \u201ceventType\u201d: \u201ccreateCustomerInvoice\u201d, \n    \u201chref\u201d: \u201chttp://server:port/loyaltyManagement/loyaltyEventType/111\u201d \n} \n \nCreate Event Type \nPOST /loyaltyManagement/loyaltyEventType \n\n\nThis Uniform Contract operation is used to create a managed entity or a task. \nDescription :  \n\u2022 \nThis operation is used to create a new loyalty event type. \n\u2022 \nThis resource represents a managed object entity. \nBehavior :  \nReturn status codes \n\u2022 \n201 Created \u2013 The loyalty event type was created. The created resource may optionally be returned in the \nresponse Body. \n\u2022 \n409 Conflict \u2013 Resource already exists. \n\u2022 \n422 Unprocessable Entity \u2013 There was a field rule violation or missing required attribute. \nAttribute name \nMandatory \nDefault \nRule \nid \nN \nAutomatically \ngenerated \nIf not given, the id is \ngenerated by the \nsystem. It is also \npossible to add an ID in \nthe POST request, \nwhich is then used \neventType \nY \n \nCorresponds to the \neventType attribute of \nexternal systems \nregistered to trigger a \nLoyaltyEvent. Must be \nunique. \n \nUsage Samples :  \n \nREQUEST \nPOST /loyaltyManagement/loyaltyEventType \n{ \n    \u201cid\u201d: \u201c111\u201d, \n    \u201ceventType\u201d: \u201corderCreationNotification\u201d \n} \nRESPONSE \n201 \nContent-Type: application/json \nContent-Location: loyaltyManagement/loyaltyEventType/111 \n\n\n(Optional: Created Resource in Response Body) \n{ \n    \u201cid\u201d: \u201c111\u201d, \n    \u201ceventType\u201d: \u201corderCreationNotification\u201d, \n    \u201chref\u201d: \u201chttp://server:port/loyaltyManagement/loyaltyEventType/111\u201d \n} \n \nDelete Event Type \nDELETE /loyaltyManagement/loyaltyEventType \nThis Uniform Contract operation is used to delete a managed entity or a task. \nDescription :  \n\u2022 \nThis operation is used to delete a loyalty event type. \n\u2022 \nThis resource represents a managed entity. \n\u2022 \nThe ID may be a string (or a string containing numbers). \nBehavior :  \nReturns status codes \n\u2022 \n200 OK \u2013 The loyalty event type was deleted. \n\u2022 \n404 Not Found \u2013 The loyalty event type could not be found. \n\u2022 \n422 Unprocessable Entity \u2013The loyalty event type belongs to a loyalty rule and cannot be deleted. \nUsage Samples :  \nREQUEST \nDELETE /loyaltyManagement/loyaltyEventType/78 \nAccept: application/json \n \nRESPONSE \n200 \nContent-Type: application/json \n \nOPERATIONS ON LOYALTY PROGRAM PRODUCT \nList / Retrieve Loyalty Program Product \n\n\nGET \n/loyaltyManagement/loyaltyProgramMember/{ID}/loyaltyProgramPr\noduct/{ID} \nThis Uniform Contract operation is used to retrieve the representation of a managed entity or collection. \nNote that collections can be retrieved via GET \n/loyaltyManagement/loyaltyProgramMember/{ID}/loyaltyProgramProduct with no {ID}. \nDescription :  \n\u2022 \nThis operation is used to retrieve the loyalty program member\u2019s loyalty program product(s). \n\u2022 \nFiltering selection is enabled on all first level attributes but not on inner classes. \n\u2022 \nAttribute selection is enabled on all first level attributes but not on inner classes. \n\u2022 \nThe resource is either a managed entity or a collection depending on the query pattern. \n\u2022 \nThe ID may be a string (or a string containing numbers). \nBehavior :  \nReturned status codes: \n\u2022 \n200 OK - The request was successful (includes situation in which no loyalty program products matched \nsupplied criteria) \n\u2022 \n404 Not Found \u2013 The loyalty program product could not be found. This return code is only applicable when a \nmanaged entity is requested. \n \nUsage Samples :  \n \nREQUEST \nGET /loyaltyManagement/loyaltyProgramMember/121/loyaltyProgramProduct/1211 \nAccept: application/json \nRESPONSE \n200 \nContent-Type: application/json \n{ \n    \"id\": \"1211\", \n    \"name\": \"DataUsageBenefit\", \n    \"description\": \"Data Usage Loyalty Benefits\", \n    \"productStatus\": \"suspended\", \n    \"characteristic\": [ \n            {"}
{"tmforumApiId": "TMF658", "id": "TMF658-chunk-22", "chunkIndex": 22, "totalChunks": 31, "apiName": "Loyalty Management API user guides 17.0.1", "title": "TMF658_Loyalty_Management_API_user_guides_17.0.1 (Part 22/31)", "documentType": "Tmforum api user guide", "text": "\"name\": \"DataUsageThreshold\",  \n                \"value\": \"10\" \n            },  \n            { \n                \"name\": \"DataUsageThresholdUnitOfMeasure\",  \n                \"value\": \"GB\" \n            } \n    ], \n    \u201cloyaltyProgramProductSpec\u201d: { \n        \u201cid\u201d: \u201c121\u201d, \n        \u201chref\u201d : \u201chttp://server:port/loyaltyManagement/loyaltyProgramProductSpec/121\u201d \n    }, \n    \u201cloyaltyAccount\u201d: { \n        \u201cid\u201d: \u201c1\u201d, \n        \u201chref\u201d : \u201chttp://server:port/loyaltyManagement/loyaltyProgramMember/121/loyaltyAccount/1\u201d \n    }, \n    \"validFor\": { \n      \"endDateTime\": \"2017-05-19T16:42:20Z\", \n      \"startDateTime\": \"2017-05-19T16:42:20Z\" \n    }, \n    \"href\": \"http://server:port/loyaltyManagement/loyaltyProgramMember/121/loyaltyProgramProduct/1211\" \n} \nPatch Loyalty Program Product \nPATCH \n/loyaltyManagement/loyaltyProgramMember/{ID}/loyaltyProgramPr\noduct/{ID} \nThis Uniform Contract operation is used to partially update the representation of a managed entity or a task. \nDescription :  \n\u2022 \nThis operation partially updates a loyalty program member\u2019s loyalty program product. \n\u2022 \nThis resource represents a managed entity. \n\u2022 \nThe ID may be a string (or a string containing numbers). \n\u2022 \nIf product characteristics are present in the request, it is overwritten. This may still be expanded to support \nthe JSON-PATCH specification. \nBehavior :  \nReturn status codes \n\n\n\u2022 \n200 OK \u2013 The update was successful. \n\u2022 \n404 Not Found \u2013 The loyalty program product to be updated could not be found. \n\u2022 \n422 Unprocessable Entity \u2013 There was a field rule violation or missing required attribute \n \nPatchable attributes are shown in the table below. \nAttribute name \nPatchable \nRule \nid \nN \n \nname \nY \n \ndescription \nY \n \nproductStatus \nY \n \ncharacteristic \nY \n \nvalidFor \nY \n \nproductSpecId \nN \n \naccountId \nY \nThe loyalty account may be \nchanged, but the same rules \napply as with the product creation \n\u2013 if the loyalty program product \nspec requires a loyaltyAccount \nand no account ID is specified, an \naccount ID is generated. \nIf a loyalty program product does \nnot require a loyalty account and \nan ID is specified, an error will be \ndisplayed. \n           \nUsage Samples :  \nREQUEST \nPATCH /loyaltyManagement/loyaltyProgramMember/121/loyaltyProgramProduct/1211 \nContent-Type: application/json \n{ \n\n\n    \"description\":  \"Data Usage Loyalty Benefits\", \n    \"productStatus\" :  \"active\" \n} \nRESPONSE \n201 \nContent-Type: application/json \n{ \n    \u201cid\u201d: \u201c1211\u201d, \n    \"name\" : \"DataUsageBenefit\", \n    \u201chref\u201d : \n\u201chttp://server:port/loyaltyManagement/loyaltyProgramMember/121/loyaltyProgramProduct/1211\u201d, \n    \u201cdescription\":  \"Data Usage Loyalty Benefits\", \n    \u201cproductStatus\" :  \"active\", \n    \"characteristic\": [ \n            { \n                \"name\": \"DataUsageThreshold\",  \n                \"value\": \"10\" \n            },  \n            { \n                \"name\": \"DataUsageThresholdUnitOfMeasure\",  \n                \"value\": \"GB\" \n            } \n    ], \n    \"validFor\": { \n        \"endDateTime\": \"2017-05-19T16:42:20Z\", \n        \"startDateTime\": \"2016-04-19T12:00:00Z\" \n    } \n} \n \nCreate Loyalty Program Product \nPOST \n/loyaltyManagement/loyaltyProgramMember/{ID}/loyaltyProgramPr\noduct \nThis Uniform Contract operation is used to create a managed entity or a task. \nDescription :  \n\n\n\u2022 \nThis operation is used to create a new loyalty program product.  \n\u2022 \nThis resource represents a managed object entity. \nBehavior :  \nReturn status codes \n\u2022 \n201 Created \u2013 The loyalty program product was created. The created resource may optionally be returned in \nthe response Body. \n\u2022 \n409 Conflict \u2013 Resource already exists. \n\u2022 \n422 Unprocessable Entity \u2013 There was a field rule violation or missing required attribute. \nAttribute name \nMan\ndato\nry \nDefault \nRule \nid \nN \nAutomaticall\ny generated \nIf not given, the id is generated \nby the system. It is also possible \nto add an ID in the POST \nrequest, which is then used \nname \nY \n \n \ndescription \nN \n \n \nproductStatus \nN \nactivated \n \nvalidFor \nN \n \n \nproductSpecId \nY \n \nShould be an existing \nLoyaltyProgramProdutSpecificati\non \naccountId \nN \n \nSpecify an existing account ID to \nbe used. \nIf the \nLoyaltyProgramProductSpec\u2019s \nneedsLoyaltyAccount attribute is \nTRUE and both the accountId \nand loyaltyAccount attribute was \nomitted, then an error is \nreturned. \nIf the accountId attribute was \nprovided and the \nLoyaltyProgramProductSpec\u2019s \nneedsLoyaltyAccount attribute is \nFALSE, an error is returned. \nIf the accountId attribute was \nprovided and the \n\n\nLoyaltyProgramProductSpec\u2019s \nneedsLoyaltyAccount attribute is \nTRUE, it must correspond to \none of the LoyaltyMember\u2019s \nexisting loyaltyAccounts. \nloyaltyAccount \nN \n \nIf the account does not yet exist, \nthe account details is specified \nin the loyaltyAccount section. \nloyaltyAccount.id \nN \n \nThe new account ID is \nautogenerated if it is not \npresent. \nloyaltyAccount.loyaltyBalance \nY \n \nA new account must have at \nleast one balance. \nloyaltyAccount.loyaltyBalance.quantity.unit \nY \n \n \nloyaltyAccount.loyaltyBalance.quantity.balance \nN \n0.00 \n \nloyaltyAccount.loyaltyBalance.validFor.startDate\nTime \nN \n \n \nloyaltyAccount.loyaltyBalance.validFor.endDate\nTime \nN \n \n \n \nUsage Samples :  \nThe example below shows creating a new product with an existing account. \n \nREQUEST \nPOST /loyaltyManagement/loyaltyProgramMember/121/loyaltyProgramProduct \nContent-Type: application/json \n{ \n    \"id\": \"1213\", \n    \"name\" : \"PrepaidTopupBenefits\", \n    \"description\":  \"Prepaid account top-up benefits\", \n    \"productStatus\" :  \"active\", \n    \"characteristic\": [ \n            { \n                \"name\": \"DataUsageThreshold\",  \n\n\n                \"value\": \"10\" \n            },  \n            { \n                \"name\": \"DataUsageThresholdUnitOfMeasure\",  \n                \"value\": \"GB\" \n            } \n    ], \n    \"validFor\": { \n        \"endDateTime\": \"2017-05-19T16:42:20Z\", \n        \"startDateTime\": \"2016-04-19T12:00:00Z\" \n    }, \n    \u201cproductSpecId\u201d: \u201c1\u201d, \n    \"accountId\":  \"123\" \n} \nRESPONSE \n201 \nContent-Type: application/json \nContent-Location: /loyaltyManagement/loyaltyProgramMember/121/loyaltyProgramProduct/1213 \n(Optional: Created Resource in Response Body) \n{ \n    \"id\": \"1213\", \n    \"name\" : \"PrepaidTopupBenefits\", \n    \"description\":  \"Prepaid account top-up benefits\", \n    \"productStatus\" :  \"active\", \n    \"characteristic\": [ \n            { \n                \"name\": \"DataUsageThreshold\",  \n                \"value\": \"10\" \n            },  \n            { \n                \"name\": \"DataUsageThresholdUnitOfMeasure\",  \n                \"value\": \"GB\" \n            } \n    ], \n    \u201cloyaltyProgramProductSpec\u201d: { \n        \u201cid\u201d: \u201c121\u201d, \n        \u201chref\u201d : \u201chttp://server:port/loyaltyManagement/loyaltyProgramProductSpec/121\u201d \n    },"}
{"tmforumApiId": "TMF658", "id": "TMF658-chunk-23", "chunkIndex": 23, "totalChunks": 31, "apiName": "Loyalty Management API user guides 17.0.1", "title": "TMF658_Loyalty_Management_API_user_guides_17.0.1 (Part 23/31)", "documentType": "Tmforum api user guide", "text": "\u201cloyaltyAccount\u201d: { \n        \u201cid\u201d: \u201c1\u201d, \n        \u201chref\u201d : \u201chttp://server:port/loyaltyManagement/loyaltyProgramMember/121/loyaltyAccount/1\u201d \n    }, \n    \"href\": \u201chttp://server:port/loyaltyManagement/loyaltyProgramMember/121/loyaltyProgramProduct/1213\", \n    \"validFor\": { \n        \"endDateTime\": \"2017-05-19T16:42:20Z\", \n        \"startDateTime\": \"2016-04-19T12:00:00Z\" \n    } \n} \n \n \n \n\n\nThe example below shows creating a new product with a new account. \nREQUEST \nPOST /loyaltyManagement/loyaltyProgramMember/121/loyaltyProgramProduct \nContent-Type: application/json \n{ \n    \"id\": \"1213\", \n    \"name\" : \"PrepaidTopupBenefits\", \n    \"description\":  \"Prepaid account top-up benefits\", \n    \"productStatus\" :  \"active\", \n    \"characteristic\": [ \n            { \n                \"name\": \"DataUsageThreshold\",  \n                \"value\": \"10\" \n            },  \n            { \n                \"name\": \"DataUsageThresholdUnitOfMeasure\",  \n                \"value\": \"GB\" \n            } \n    ], \n    \"validFor\": { \n        \"endDateTime\": \"2017-05-19T16:42:20Z\", \n        \"startDateTime\": \"2016-04-19T12:00:00Z\" \n    }, \n    \u201cproductSpecId\u201d: \u201c1\u201d, \n    \"loyaltyAccount\":  { \n          \u201cid\u201d: \u201cPaulLoyalty\u201d, \n          \u201cloyaltyBalance\u201d: { \n                \u201cquantity\u201d: { \n                      \u201cunit\u201d: \u201cpoints\u201d, \n                      \u201cbalance\u201d: \u201c10.00\u201d \n                }, \n                \u201cvalidFor\u201d: { \n                     \u201cstartDateTime\u201d: \"2017-05-19T16:42:20Z\", \n                     \"endDateTime\": \"2018-04-19T12:00:00Z\" \n                } \n          } \n     } \n} \n\n\nRESPONSE \n201 \nContent-Type: application/json \nContent-Location: /loyaltyManagement/loyaltyProgramMember/121/loyaltyProgramProduct/1213 \n(Optional: Created Resource in Response Body) \n{ \n    \"id\": \"1213\", \n    \"name\" : \"PrepaidTopupBenefits\", \n    \"description\":  \"Prepaid account top-up benefits\", \n    \"productStatus\" :  \"active\", \n    \"characteristic\": [ \n            { \n                \"name\": \"DataUsageThreshold\",  \n                \"value\": \"10\" \n            },  \n            { \n                \"name\": \"DataUsageThresholdUnitOfMeasure\",  \n                \"value\": \"GB\" \n            } \n    ], \n    \u201cloyaltyProgramProductSpec\u201d: { \n        \u201cid\u201d: \u201c121\u201d, \n        \u201chref\u201d : \u201chttp://server:port/loyaltyManagement/loyaltyProgramProductSpec/121\u201d \n    }, \n    \u201cloyaltyAccount\u201d: { \n        \u201cid\u201d: \u201cPaulLoyalty\u201d, \n        \u201chref\u201d : \u201chttp://server:port/loyaltyManagement/loyaltyProgramMember/121/loyaltyAccount/ \nPaulLoyalty\u201d \n    }, \n    \"href\": \u201chttp://server:port/loyaltyManagement/loyaltyProgramMember/121/loyaltyProgramProduct/1213\", \n    \"validFor\": { \n        \"endDateTime\": \"2017-05-19T16:42:20Z\", \n        \"startDateTime\": \"2016-04-19T12:00:00Z\" \n    } \n} \n \nDelete Loyalty Program Product \n\n\nDELETE \n/loyaltyManagement/loyaltyProgramMember/{ID}/loyaltyProgramPr\noduct/{ID} \nThis Uniform Contract operation is used to delete a managed entity or a task. \nIf the LoyaltyAccount associated with the LoyaltyProgramProduct is used only on the addressed \nloyaltyProgramProduct, the associated LoyaltyAccount will also be deleted. However, if the LoyaltyAccount is reused \non another LoyaltyProgramProduct, the LoyaltyAccount will not be deleted. \nDescription :  \n\u2022 \nThis operation is used to delete a loyalty program product. \n\u2022 \nThis resource represents a managed entity. \n\u2022 \nThe ID may be a string (or a string containing numbers). \nBehavior :  \nReturns status codes \n\u2022 \n200 OK \u2013 The loyalty program product was deleted. \n\u2022 \n404 Not Found \u2013 The loyalty program product could not be found. \nUsage Samples :  \nREQUEST \nDELETE /loyaltyManagement/loyaltyProgramMember/121/loyaltyProgramProduct/1213 \nAccept: application/json \n \nRESPONSE \n200 \nContent-Type: application/json \n \nOPERATIONS ON LOYALTY EXECUTION POINT \nList / Retrieve Loyalty Execution Points \nGET \n/loyaltyManagement/loyaltyProgramMember/{ID}/loyaltyProgramPr\noduct/{ID}/loyaltyExecutionPoint/{ID} \nThis Uniform Contract operation is used to retrieve the representation of a managed entity or collection. \nNote that collections can be retrieved via GET /loyaltyManagement/loyaltyProgramProduct/{ID}/loyaltyExecutionPoint \nwith no {ID}. \n\n\nDescription :  \n\u2022 \nThis operation is used to retrieve the loyalty execution points for a loyalty program product. \n\u2022 \nFiltering selection is enabled on all first level attributes. \n\u2022 \nAttribute selection is enabled on all first level attributes. \n\u2022 \nThe resource is either a managed entity or a collection depending on the query pattern. \n\u2022 \nThe ID may be a string (or a string containing numbers). \nBehavior :  \nReturned status codes: \n\u2022 \n200 OK - The request was successful (includes situation in which no loyalty program products matched \nsupplied criteria) \n\u2022 \n404 Not Found \u2013 The loyalty program product could not be found. This return code is only applicable when a \nmanaged entity is requested. \nUsage Samples :  \nREQUEST \nGET \n/loyaltyManagement/loyaltyProgramMember/348243/loyaltyProgramProduct/1211/loyaltyExecutionPoint \nAccept: application/json \nRESPONSE \n200 \nContent-Type: application/json \n[{ \n    \"id\": \"2\", \n    \u201ctype\u201d: \u201cLoyaltyEarn\u201d, \n    \u201cactionAttributes\u201d: { \n        \u201cquantity\u201d: 50 \n    }, \n    \u201chref\u201d: \n\u201chttp://server:port/loyaltyManagement/loyaltyProgramMember/348243/loyaltyProgramProduct/1211/loyalty\nExecutionPoint/2\u201d, \n    \"commonName\": \"Earn50\", \n    \"description\": \"\", \n    \"action\": \"POST\", \n     \"endpoint\": \u201chttp://server:port/loyaltyManagement/loyaltyProgramMember/{memberId}/ \nloyaltyBalance/{balanceId}/loyaltyEarn\", \n     \"version\": \"2.0\", \n     \"dateTime\": \"2017-05-19T16:42:20Z \" \n},"}
{"tmforumApiId": "TMF658", "id": "TMF658-chunk-24", "chunkIndex": 24, "totalChunks": 31, "apiName": "Loyalty Management API user guides 17.0.1", "title": "TMF658_Loyalty_Management_API_user_guides_17.0.1 (Part 24/31)", "documentType": "Tmforum api user guide", "text": "{ \n    \"id\": \"434\", \n    \u201ctype\u201d: \u201cBusinessInteraction\u201d, \n    \u201cactionAttributes\u201d: { \n        \u201cquantity\u201d: 50 \n    }, \n    \u201chref\u201d: \n\u201chttp://server:port/loyaltyManagement/loyaltyProgramMember/348243/loyaltyProgramProduct/1211/loyalty\nExecutionPoint/434\u201d, \n    \"commonName\": \"Earn50\", \n    \"description\": \"\", \n    \"action\": \"POST\", \n     \"endpoint\": \u201chttp://server:port/loyaltyManagement/loyaltyProgramMember/{memberId}/ \nloyaltyBalance/{balanceId}/loyaltyEarn\", \n     \"version\": \"2.0\", \n     \"dateTime\": \"2016-05-19T16:42:20Z \" \n}] \n \nOPERATIONS ON LOYALTY PROGRAM MEMBER \nList / Retrieve Loyalty Program Members \nGET /loyaltyManagement/loyaltyProgramMember/{ID} \nThis Uniform Contract operation is used to retrieve the representation of a managed entity or a task. \nNote that collections can be retrieved via GET /loyaltyManagement/loyaltyProgramMember with no {ID} \nDescription :  \n\u2022 \nThis operation retrieves loyalty program members. \n\u2022 \nThe resource represents a managed entity or a collection depending on the query pattern. \n\u2022 \nThe identifier is a string that can consist of numbers and letters. \n\u2022 \nFiltering is enabled on all the first level loyalty program member attributes. \n\u2022 \nAttribute selection is enabled on all the first level loyalty program member attributes. \nBehavior :  \nReturn status codes \n\u2022 \n200 OK - The request was successful (includes situation in which no loyalty program members match the \nfiltering criteria) \n\u2022 \n404 Not Found \u2013 The loyalty member could not be found. This return code is only applicable when a \nmanaged entity is requested. \nUsage Samples : \n\n\nREQUEST \nGET /loyaltyManagement/loyaltyProgramMember/JDSU778DS \nAccept: application/json \nRESPONSE \n200 \nContent-Type: application/json \n \n{ \n    \"id\":\"JDSU778DS \", \n    \"href\":\"http://server:port/loyaltyManagement/loyaltyProgramMember/JDSU778DS\", \n    \"status\":\"active\", \n    \"name\":\"Jane Joe\", \n    \"validFor\": { \n        \"startDateTime\":\"2015-04-19T16:42:23.0Z \", \n        \"endDateTime\":\"2016-04-19T16:42:23.0Z\" \n    } \n} \n \nUpdate Loyalty Program Members \nPUT /loyaltyManagement/loyaltyProgramMember/{ID} \n \nThis Uniform Contract operation is used to update the entire representation of a managed entity or a task. \nDescription :  \n\u2022 \nThis operation updates the attributes of a loyalty program member present in the request body. \n\u2022 \nThe resource represents a managed entity. \n\u2022 \nThe identifier is a string that can consist of numbers and letters. \nBehavior :  \n\u2022 \n200 OK \u2013 The loyalty program member was successfully updated. \n\u2022 \n404 Not Found \u2013 The loyalty program member could not be found. \n\u2022 \n422 Unprocessable Entity \u2013 There was a field rule violation. \nUsage Samples : \nREQUEST \nPATCH /loyaltyManagement/loyaltyProgramMember/JDSU778DS \nContent-type: application/json \n \n\n\n{ \n    \"status\":\"suspended\", \n    \"name\":\"James Joe\", \n    \"validFor\": { \n        \"startDateTime\":\"2015-04-19T16:42:23.0Z \", \n        \"endDateTime\":\"2016-04-19T16:42:23.0Z\" \n    } \n} \nRESPONSE \n201 \nContent-Type: application/json \n \n{ \n    \u201cid\u201d: \u201cJDSU778DS\u201d, \n    \"href\":\"http://server:port/loyaltyManagement/loyaltyProgramMember/JDSU778DS\", \n    \"status\":\"suspended\", \n    \"name\":\"James Joe\", \n    \"validFor\": { \n        \"startDateTime\":\"2015-04-19T16:42:23.0Z \", \n        \"endDateTime\":\"2016-04-19T16:42:23.0Z\" \n    } \n} \n \nPatch Loyalty Program Members \nPATCH /loyaltyManagement/loyaltyProgramMember/{ID} \n \nThis Uniform Contract operation is used to partially update the representation of a managed entity or a task. \nDescription :  \n\u2022 \nThis operation updates the attributes of a loyalty program member present in the request body. \n\u2022 \nThe resource represents a managed entity. \n\u2022 \nThe identifier is a string that can consist of numbers and letters. \nBehavior :  \n\u2022 \n200 OK \u2013 The loyalty program member was successfully updated. \n\u2022 \n404 Not Found \u2013 The loyalty program member could not be found. \n\u2022 \n422 Unprocessable Entity \u2013 There was a field rule violation. \n \n \n\n\nAttribute name \nPatchable \nRule \nid \nN \n \nstatus \nY \n \nname \nY \n \nvalidFor.startDateTime \nY \n \nvalidFor:endDateTime \nY \nThe end date must be after the \nstart date. \n \nUsage Samples : \nREQUEST \nPATCH /loyaltyManagement/loyaltyProgramMember/JDSU778DS \nContent-type: application/json \n \n{ \n    \"status\":\"suspended\", \n    \"name\":\"James Joe\" \n} \nRESPONSE \n201 \nContent-Type: application/json \n \n{ \n    \u201cid\u201d: \u201cJDSU778DS\u201d, \n    \"href\":\"http://server:port/loyaltyManagement/loyaltyProgramMember/JDSU778DS\", \n    \"status\":\"suspended\", \n    \"name\":\"James Joe\", \n    \"validFor\": { \n        \"startDateTime\":\"2015-04-19T16:42:23.0Z \", \n        \"endDateTime\":\"2016-04-19T16:42:23.0Z\" \n    } \n} \n \n \n\n\nCreate Loyalty Program Members \nPOST /loyaltyManagement/loyaltyProgramMember \n \nThis Uniform Contract operation is used to create a managed entity or a task. \nDescription :  \n\u2022 \nThis operation creates a new loyalty program member.  \n\u2022 \nThe resource represents a managed entity. \n\u2022 \nThe identifier is a string that can consist of numbers and letters. \n\u2022 \nThere are no mandatory attributes to create a new loyalty program member. If no identifier is provided, an \nidentifier is autogenerated. \nBehavior :  \n\u2022 \n201 Created \u2013 The loyalty program member was successfully created. The created resource may optionally \nbe returned in the response Body. \n\u2022 \n409 Conflict \u2013 A loyalty program member with the same identifier already exists. \n\u2022 \n422 Unprocessable Entity \u2013 There was a field rule violation. \n \n \nSpecify the attributes required when an entity is created (and their default values if not): \nAttribute name \nMandatory \nDefault \nRule \nid \nN \nAuto generated if \nnot present in the \nrequest. \n \nstatus \nN \nEmpty string \n \nname \nN \nEmpty string \n \nvalidFor.startDateTime \nN \nToday \nValid date not \nearlier than one \nbill cycle in the \npast \nvalidFor:endDateTime \nN \n \nAfter the start \ndate \n \nREQUEST \nPOST /loyaltyManagement/loyaltyProgramMember \nContent-type: application/json \n \n\n\n{ \n    \"status\":\"suspended\", \n    \"name\":\"James Joe\", \n    \"validFor\": { \n        \"startDateTime\":\"2015-04-19T16:42:23.0Z \", \n        \"endDateTime\":\"2016-04-19T16:42:23.0Z\" \n    } \n} \nRESPONSE \n201 \nContent-Type: application/json \nContent-Location: /loyaltyManagement/loyaltyProgramMember/123 \n(Optional: Created Resource in Response Body) \n \n{ \n    \u201cid\u201d: \u201c123\u201d, \n    \"status\":\"suspended\", \n    \"name\":\"James Joe\", \n    \"validFor\": { \n        \"startDateTime\":\"2015-04-19T16:42:23.0Z \", \n        \"endDateTime\":\"2016-04-19T16:42:23.0Z\" \n    }, \n    \u201chref\u201d: \u201chttp://server:port/loyaltyManagement/loyaltyProgramMember/123\u201d \n} \n \nDelete Loyalty Program Members \nDELETE /loyaltyManagement/loyaltyProgramMember/{ID} \nThis Uniform Contract operation is used to delete a managed entity or a task. \nDescription :  \n\u2022 \nThis operation deletes a loyalty program member. \n\u2022 \nThe resource represents a managed entity. \n\u2022 \nThe identifier is a string that can consist of numbers and letters. \nBehavior :  \n\u2022 \n200 OK \u2013 The loyalty program member was successfully deleted. \n\u2022 \n404 Not Found \u2013 The loyalty program member could not be found. \nUsage Samples :"}
{"tmforumApiId": "TMF658", "id": "TMF658-chunk-25", "chunkIndex": 25, "totalChunks": 31, "apiName": "Loyalty Management API user guides 17.0.1", "title": "TMF658_Loyalty_Management_API_user_guides_17.0.1 (Part 25/31)", "documentType": "Tmforum api user guide", "text": "REQUEST \nDELETE /loyaltyManagement/loyaltyProgramMember/JDSU778DS  \n \nRESPONSE \n200 \n \n \nOPERATIONS ON LOYALTY ACCOUNT \nList / Retrieve Loyalty Balances \nGET /loyaltyManagement/loyaltyAccount/{ID}/loyaltyAccount \n \nThis Uniform Contract operation is used to retrieve the representation of a managed entity or a task. \nNote that collections can be retrieved via GET /loyaltyManagement/loyaltyProgramMember/{ID}/loyaltyAccount with \nno {ID}  \nOnly GET operations are supported under the LoyaltyAccount resource, as LoyaltyAccounts are linked to a \nLoyaltyProgamProduct and cannot be modified without referencing the LoyaltyAccount. \nDescription :  \n\u2022 \nThis operation retrieves loyalty program member accounts. The account resource is also returned within \neach balance entity. \n\u2022 \nThe resource represents a managed entity or a collection depending on the query pattern. \n\u2022 \nThe identifier is a string that can consist of numbers and letters. \n\u2022 \nFiltering is enabled productId only. \n\u2022 \nAttribute selection is enabled on all the first level loyalty account attributes. \nBehavior :  \nReturn status codes \n\u2022 \n200 OK - The request was successful (includes situation in which no loyalty program accounts match the \nfiltering criteria) \n\u2022 \n404 Not Found \u2013 The loyalty member or loyalty account could not be found.  \nUsage Samples : \nREQUEST \nGET /loyaltyManagement/loyaltyProgramMember/JDSU778DS/loyaltyAccount \nAccept: application/json \n\n\nRESPONSE \n200 \nContent-Type: application/json \n \n[{ \n    \"id\": \"ValueBundle\", \n    \"href\": \" http://server:port/loyaltyManagement/loyaltyProgramMember/PHDUIU8336/ \nloyaltyAccount/ValueBundle\", \n    \"loyaltyProgramProduct\": { \n         \"id\": \"1211\", \n         \"href\": \"http://server:port/loyaltyManagement/loyaltyProgramMember/PHDUIU8336/ \nloyaltyProgramProduct/1211\" \n    } \n}] \n \nOPERATIONS ON LOYALTY BALANCE \nList / Retrieve Loyalty Balances \nGET /loyaltyManagement/loyaltyAccount/{ID}/loyaltyBalance \nThis Uniform Contract operation is used to retrieve the representation of a managed entity or a task. \nNote that collections can be retrieved via GET /loyaltyManagement/loyaltyAccount/{ID}/loyaltyBalance with no {ID}. \nDescription :  \n\u2022 \nThis operation retrieves loyalty program member account balances.  \n\u2022 \nThe resource represents a managed entity or a collection depending on the query pattern. \n\u2022 \nThe identifier is a string that can consist of numbers and letters. \n\u2022 \nFiltering is not enabled on balances. \n\u2022 \nAttribute selection is enabled on all the first level loyalty balance attributes. \nBehavior :  \nReturn status codes \n\u2022 \n200 OK - The request was successful (includes situation in which no loyalty program balance match the \nfiltering criteria) \n\u2022 \n404 Not Found \u2013 The loyalty account or loyalty balance could not be found.  \nUsage Samples : \nREQUEST \n\n\nGET /loyaltyManagement/loyaltyAccount/JohnLoyalty/loyaltyBalance \nAccept: application/json \nRESPONSE \n200 \nContent-Type: application/json \n \n[{ \n    \"id\": \"iTunes\", \n    \"href\": \" http://server:port/loyaltyManagement/loyaltyAccount/JohnLoyalty/loyaltyBalance/iTunes\", \n    \"quantity\": { \n             \"unit\": \"NZD\", \n             \"balance\": 300 \n     }, \n    \u201cloyaltyProgramMember\u201d: { \n        \u201cid\u201d: \u201cPHDUIU8336\u201d, \n        \u201chref\u201d: \"http://server:port/loyaltyManagement/loyaltyProgramMember/PHDUIU8336\" \n    } \n    \"validFor\": { \n        \"startDateTime\": \"2016/02/19 18:42:23\", \n        \"endDateTime\": \"2018/12/30 17:42:23\" \n    } \n }] \n \nPatch Loyalty Balances \nPATCH \n/loyaltyManagement/loyaltyAccount/{ID}/loyaltyBalance/{ID} \nThis Uniform Contract operation is used to partially update the representation of a managed entity or a task. \nDescription :  \n\u2022 \nThis operation updates the attributes of a loyalty account loyalty balance present in the request body. \n\u2022 \nThe resource represents a managed entity. \n\u2022 \nThe identifier is a string that can consist of numbers and letters. \n\u2022 \nOnly first level attributes can be updated in its entirety. loyaltyEarn and loyaltyBurn resources are managed \non the respective resource endpoints. \nBehavior :  \n\u2022 \n200 OK \u2013 The loyalty program member loyalty balance was successfully updated. \n\u2022 \n404 Not Found \u2013 The loyalty program account or loyalty balance could not be found. \n\u2022 \n422 Unprocessable Entity \u2013 There was a field rule violation. \n\n\n \n \nAttribute name \nPatchable \nRule \nid \nN \n \nquantity.unit \nN \n \nquantity.balance \nN \n \nvalidFor.startDateTime \nY \n \nvalidFor:endDateTime \nY \nThe end date must be after the \nstart date. \nloyaltyProgramMember \nN \nManaged on the loyalty program \nmember endpoint. \n \nUsage Samples : \nREQUEST \nPATCH /loyaltyManagement/loyaltyAccount/JohnLoyalty/loyaltyBalance/iTunes \nContent-type: application/json \n \n{ \n    \"validFor\": { \n        \"startDateTime\": \"2016/02/19 18:42:23\", \n        \"endDateTime\": \"2018/12/30 17:42:23\" \n    } \n} \nRESPONSE \n201 \nContent-Type: application/json \n{ \n    \"id\": \"iTunes\", \n    \"href\": \"/loyaltyManagement/loyaltyAccount/JohnLoyalty/loyaltyBalance/iTunes\", \n    \"quantity\": { \n             \"unit\": \"NZD\", \n\n\n             \"balance\": 300 \n     }, \n    \u201cloyaltyProgramMember\u201d: { \n        \u201cid\u201d: \u201cPHDUIU8336\u201d, \n        \u201chref\u201d: \"/loyaltyManagement/loyaltyProgramMember/PHDUIU8336 \" \n    } \n    \"validFor\": { \n        \"startDateTime\": \"2016/02/19 18:42:23\", \n        \"endDateTime\": \"2018/12/30 17:42:23\" \n    } \n } \n \nPost Loyalty Balances \nPOST \n/loyaltyManagement/loyaltyAccount/{ID}/loyaltyBalance \nThis Uniform Contract operation is used to create a managed entity or a task. \nDescription :  \n\u2022 \nThis operation creates a new loyalty account balance. \n\u2022 \nThe resource represents a managed entity. \n\u2022 \nThe identifier is a string that can consist of numbers and letters. \n\u2022 \nThere are only mandatory attributes for a loyalty balance is an existing loyalty account. \nBehavior :  \n\u2022 \n201 Created \u2013 The loyalty program balance was successfully created. The created resource may optionally \nbe returned in the response Body. \n\u2022 \n404 \u2013 The loyalty account could not be found. \n\u2022 \n409 Conflict \u2013 A loyalty program balance with the same identifier already exists. \n\u2022 \n422 Unprocessable Entity \u2013 There was a field rule violation. \n \n \nSpecify the attributes required when an entity is created (and their default values if not): \nAttribute name \nMandatory \nDefault \nRule \nid \nN \nAuto generated if \nnot present in the \nrequest. \n \nquantity.unit \nY"}
{"tmforumApiId": "TMF658", "id": "TMF658-chunk-26", "chunkIndex": 26, "totalChunks": 31, "apiName": "Loyalty Management API user guides 17.0.1", "title": "TMF658_Loyalty_Management_API_user_guides_17.0.1 (Part 26/31)", "documentType": "Tmforum api user guide", "text": "quantity.balance \nN \n0.00 \n \nvalidFor.startDateTime \nN \n \n \nvalidFor:endDateTime \nN \n \nMust be after \nthe start date. \n \nUsage Samples : \n \nREQUEST \nPOST /loyaltyManagement/loyaltyAccount/JohnLoyalty/loyaltyBalance \nContent-type: application/json \n \n{ \n    \"id\": \"839\", \n    \u201cunit\u201d:\u201dpoints\u201d \n} \nRESPONSE \n201 \nContent-Type: application/json \nContent-Location: /loyaltyManagement/loyaltyProgramMember/PHDUIU8336/loyaltyBalance/839 \n(Optional: Created Resource in Response Body) \n \n{ \n    \u201cid\u201d: \u201c839\u201d, \n    \"href\": \"http://server:port/loyaltyManagement/loyaltyAccount/JohnLoyalty/loyaltyBalance/839\", \n    \"quantity\": { \n             \"unit\": \"NZD\", \n             \"balance\": 300 \n    }, \n    \"validFor\": { \n        \u201cstartDateTime\u201d:\u201d2016-07-08 17:15:41\u201d \n    }, \n    \"loyaltyProgramMember\": { \n         \u201cid\u201d: \u201cPHDUIU8336\u201d, \n         \"href\": \"http://server:port/loyaltyManagement/loyaltyProgramMember/PHDUIU8336 \" \n    } \n} \n \n\n\nDelete Loyalty Balances \nDELETE \n/loyaltyManagement/loyaltyAccount/{ID}/loyaltyBalance/{ID} \nThis Uniform Contract operation is used to delete a managed entity or a task. \nDescription :  \n\u2022 \nThis operation deletes a loyalty account balance. \nBehavior :  \n\u2022 \n200 OK \u2013 The loyalty account member balance was successfully deleted. \n\u2022 \n404 Not Found \u2013 The loyalty account or loyalty program balance could not be found. \nUsage Samples : \nREQUEST \nDELETE /loyaltyManagement/loyaltyAccount/JohnLoyalty/loyaltyBalance/839 \n \nRESPONSE \n200 \n \n \nOPERATIONS ON LOYALTY EVENT \nList / Retrieve Loyalty Earn \nGET \n/loyaltyManagement/loyaltyAccount/{ID}/loyaltyBalance/{ID}/lo\nyaltyEarn \n \nThis Uniform Contract operation is used to retrieve a collection of a managed entity. \nNote that collections can be retrieved via GET /loyaltyManagement/loyaltyAccount/{ID} \n/loyaltyBalance/{ID}/loyaltyEarn with no {ID} \nDescription :  \n\u2022 \nThis operation retrieves a loyalty program member loyalty earn transactions on a spesific account balance. \n\u2022 \nThe resource presents a collection or a managed entity, depending on the query pattern. \n\u2022 \nThe identifier is a string that can consist of numbers and letters. \n\u2022 \nFiltering is enabled on all the first level loyalty earn attributes. \n\n\n\u2022 \nAttribute selection is enabled on all the first level loyalty earn attributes. \n \nBehavior :  \nReturn status codes \n\u2022 \n200 OK - The request was successful (includes situation in which no loyalty program balance match the \nfiltering criteria) \n\u2022 \n404 Not Found \u2013 The loyalty account, loyalty balance or loyalty earn transaction could not be found.  \nUsage Samples : \nREQUEST \nGET /loyaltyManagement/loyaltyAccount/JohnLoyalty/loyaltyBalance/iTunes/loyaltyEarn \nAccept: application/json \n \nRESPONSE \n200 \nContent-Type: application/json \n \n[{ \n    \"id\": \"843G-838F-HY23-0238\", \n    \"href\": \"http://server:port/loyaltyManagement/loyaltyAccount/JohnLoyalty/loyaltyBalance \n/iTunes/loyaltyEarn/843G-838F-HY23-0238\", \n    \"quantity\": 20.00, \n    \"openingBalance\": 280.00, \n    \"closingBalance\": 300.00, \n    \"dateTime\": \"2016-07-29 12:18:51\", \n    \"description\": \"A loyalty event triggered and points earned.\" \n}, \n{ \n    \"id\": \"146G-3408-WW40-P238\", \n    \"href\": \u201chttp://server:port/loyaltyManagement/loyaltyAccount/JohnLoyalty/loyaltyBalance/ \niTunes/loyaltyEarn/146G-3408-WW40-P238\", \n    \"quantity\": 10.00, \n    \"openingBalance\": 250.00, \n    \"closingBalance\": 260.00, \n    \"dateTime\": \"2016-07-12 23:34:25\", \n    \"description\": \"Earn loyalty points on Justin Bieber album purchase.\" \n}] \n \n\n\nCreate Loyalty Earn \nPOST \n/loyaltyManagement/loyaltyAccount/{ID}/loyaltyBalance/{ID}/lo\nyaltyEarn \nThis Uniform Contract operation is used to create a managed entity or a task. \nDescription :  \n\u2022 \nThis operation creates a new loyalty earn transaction. \n\u2022 \nThe resource represents a managed entity. \n\u2022 \nThe identifier is a string that can consist of numbers and letters. The identifier serves as the transaction \nidentifier. \n\u2022 \nThe only mandatory attribute to create a loyalty earn transaction is quantity. \nBehavior :  \n\u2022 \n201 Created \u2013 The loyalty earn transaction was successfully created. The created resource may optionally \nbe returned in the response Body. \n\u2022 \n404 Not Found \u2013 The account or balance could not be found. \n\u2022 \n409 Conflict \u2013 A loyalty transaction with the same identifier already exists. \n\u2022 \n422 Unprocessable Entity \u2013 There was a field rule violation. \n \n \nSpecify the attributes required when an entity is created (and their default values if not): \nAttribute name \nMandatory \nDefault \nRule \nid \nN \nAuto generated if not \npresent in the request. \n \nquantity \nY \n \nThe quantity may be of type \nstring or number. If it is a \nstring, it will be converted to \na number. If it cannot be \nconverted, a 409 error will \nbe returned. \ndescription \nN \nEmpty string \n \n \nUsage Samples : \nREQUEST \nPOST /loyaltyManagement/loyaltyAccount/JohnLoyalty/loyaltyBalance/iTunes/loyaltyEarn Content-type: \napplication/json \n{ \n\n\n    \"quantity\": 30, \n    \"description\": \"Earned loyalty points on handset purchase.\" \n} \nRESPONSE \n201 \nContent-Type: application/json \nContent-Location: \n/loyaltyManagement/loyaltyAccount/JohnLoyalty/loyaltyBalance/iTunes/loyaltyEarn/738F-039J-2636-LDH8 \n \n(Optional: Created Resource in Response Body) \n{ \n    \"id\":\"738F-039J-2636-LDH8\", \n    \"href\": \"http://server:port/loyaltyManagement/loyaltyAccount/JohnLoyalty/loyaltyBalance/ \niTunes/loyaltyEarn/738F-039J-2636-LDH8\", \n    \"quantity\":30, \n    \"openingBalance\": 280.00, \n    \"closingBalance\": 310.00, \n    \"dateTime\": \"2016-07-29 12:18:51\", \n    \"description\": \"Earned loyalty points on handset purchase.\" \n} \n \n \n \nOPERATIONS ON LOYALTY BURN \nList / Retrieve Loyalty Burn \nGET \n/loyaltyManagement/loyaltyAccount/{ID}/loyaltyBalance/{ID}/lo\nyaltyBurn \n \nThis Uniform Contract operation is used to retrieve a collection of a managed entity. \nNote that collections can be retrieved via GET /loyaltyManagement/loyaltyAccount/{ID} \n/loyaltyBalance/{ID}/loyaltyBurn with no {ID} \nDescription :  \n\u2022 \nThis operation retrieves a loyalty program loyalty burn transactions on a spesific account balance. \n\u2022 \nThe resource presents a collection or a managed entity, depending on the query pattern."}
{"tmforumApiId": "TMF658", "id": "TMF658-chunk-27", "chunkIndex": 27, "totalChunks": 31, "apiName": "Loyalty Management API user guides 17.0.1", "title": "TMF658_Loyalty_Management_API_user_guides_17.0.1 (Part 27/31)", "documentType": "Tmforum api user guide", "text": "\u2022 \nThe identifier is a string that can consist of numbers and letters. \n\u2022 \nFiltering is enabled on all the first level loyalty burn attributes. \n\u2022 \nAttribute selection is enabled on all the first level loyalty burn attributes. \nBehavior :  \nReturn status codes \n\u2022 \n200 OK - The request was successful (includes situation in which no loyalty program balance match the \nfiltering criteria) \n\u2022 \n404 Not Found \u2013 The loyalty account, loyalty balance or loyalty earn transaction could not be found.  \nUsage Samples : \nREQUEST \nGET /loyaltyManagement/loyaltyAccount/JohnLoyalty/loyaltyBalance/iTunes/loyaltyBurn \nAccept: application/json \n \nRESPONSE \n200 \nContent-Type: application/json \n \n[{ \n    \"id\": \"94JU-03J8-57S4-0893\", \n    \"href\": \"http://server:port/loyaltyManagement/loyaltyAccount/JohnLoyalty/loyaltyBalance/ \niTunes/loyaltyBurn/94JU-03J8-57S4-0893\", \n    \"quantity\": 20.00, \n    \"openingBalance\": 1000.00, \n    \"closingBalance\": 1020.00, \n    \"dateTime\": \"2016-07-08 13:11:27\", \n    \"description\": \"Beyonce CD purchase loyalty points.\" \n}, \n{ \n    \"id\": \"0347-4378-HT82-6CSJ\", \n    \"href\": \"http://server:port/loyaltyManagement/loyaltyAccount/JohnLoyalty/loyaltyBalance/ \niTunes/loyaltyBurn/0347-4378-HT82-6CSJ\", \n    \"quantity\": 179.00, \n    \"openingBalance\": 3430.00, \n    \"closingBalance\": 3251.00, \n    \"dateTime\": \"2016-07-08 17:15:41\", \n    \"description\": \"Burn loyalty points on Beyonce Song purchase.\" \n}] \n \n\n\nCreate Loyalty Burn \nPOST \n/loyaltyManagement/loyaltyAccount/{ID}/loyaltyBalance/{ID}/lo\nyaltyBurn \nThis Uniform Contract operation is used to create a managed entity or a task. \nDescription :  \n\u2022 \nThis operation creates a new loyalty burn transaction. \n\u2022 \nThe resource represents a managed entity. \n\u2022 \nThe identifier is a string that can consist of numbers and letters. The identifier serves as the transaction \nidentifier. \n\u2022 \nThe only mandatory attribute to create a loyalty burn transaction is quantity. \nBehavior :  \n\u2022 \n201 Created \u2013 The loyalty burn transaction was successfully created. The created resource may optionally \nbe returned in the response Body. \n\u2022 \n404 Not Found \u2013 The account or balance could not be found. \n\u2022 \n409 Conflict \u2013 A loyalty transaction with the same identifier already exists. \n\u2022 \n422 Unprocessable Entity \u2013 There was a field rule violation. \n \n \nSpecify the attributes required when an entity is created (and their default values if not): \nAttribute name \nMandatory \nDefault \nRule \nid \nN \nAuto generated if not \npresent in the request. \n \nquantity \nY \n \nThe quantity may be of type \nstring or number. If it is a \nstring, it will be converted to \na number. If it cannot be \nconverted, a 409 error will \nbe returned. \ndescription \nN \nEmpty string \n \n \nUsage Samples : \nREQUEST \nPOST /loyaltyManagement/loyaltyAccount/JohanLoyalty/loyaltyBalance/iTunes/loyaltyBurn \nContent-type: application/json \n \n\n\n \n{ \n    \"quantity\": 20, \n    \"description\": \"Burned loyalty points on album purchase.\" \n} \nRESPONSE \n201 \nContent-Type: application/json \nContent-Location: /loyaltyManagement/loyaltyAccount/JohanLoyalty/loyaltyBalance/ \niTunes/loyaltyBurn/738F-039J-2636-LDH8 \n(Optional: Created Resource in Response Body) \n \n{ \n    \"id\":\"738F-039J-2636-LDH8\", \n    \"href\": \"http://server:port/loyaltyManagement/loyaltyAccount/JohanLoyalty/loyaltyBalance/ \niTunes/loyaltyBurn/738F-039J-2636-LDH8\", \n    \"quantity\":20, \n    \"openingBalance\": 310.00, \n    \"closingBalance\": 290.00, \n    \"dateTime\": \"2016-08-05 12:18:51\", \n    \"description\": \"Burned loyalty points on album purchase.\" \n} \nOPERATIONS ON LOYALTY EVENT \nCreate Loyalty Event \nGET /loyaltyManagement/loyaltyEvent/{ID} \nThis Uniform Contract operation is used to create a managed entity or a task. \nDescription :  \n\u2022 \nThis operation specifies a loyalty event that has occurred. \n\u2022 \nThe resource only triggers the loyalty rule evaluation for the incoming event\u2019s loyalty member, if the event \ntype corresponds to a loyalty rule associated with the loyalty member\u2019s products. \n\u2022 \nThe only mandatory attribute in the loyalty event request is eventType. \nBehavior :  \n\u2022 \n201 Created \u2013 The loyalty event was successfully received. The created resource may optionally be returned \nin the response Body. \n\u2022 \n422 Unprocessable Entity \u2013 There was a field rule violation. \n \n \n\n\nSpecify the attributes required when an entity is created (and their default values if not): \nAttribute name \nMandatory \nDefault \nRule \neventType \nY \n \n \nmemberId \nY \n \n \n \nUsage Samples :  \nREQUEST \nPOST /loyaltyManagement/loyaltyEvent \nContent-type: application/json \n{ \n    \"eventId\":\"00001\", \n    \"eventTime\":\"2013-04-19T16:42:25-04:00\", \n    \"eventType\":\"orderCreationNotification\", \n    \u201cmemberId\u201d:\u201d11843385\u201d, \n    \"event\":{ \n        \"productOrder\":{ \n            \"id\":\"42\", \n             \"href\":\"http://serverlocation:port/orderManagement/productOrder/42\", \n             \"externalId\":\"NiceNameForTheConsumer_42\", \n             \u2026 \n        } \n    } \n} \nRESPONSE \n201 \nContent-Type: application/json \n \n \n\n\nAPI NOTIFICATION TEMPLATES \nNOTIFICATIONS ON LOYALTY PROGRAM MEMBER \nRegister Loyalty Program Member Listener \nPOST /loyaltyManagement/loyaltyProgramMember/hub \nDescription :  \nSets the communication endpoint address the service instance must use to deliver information about its health state, \nexecution state, failures and metrics. Supports multiple listeners. \nBehavior :  \nReturns HTTP/1.1 status code 204 if the request was successful. \n \nReturns HTTP/1.1 status code 409 if request is not successful. \nUsage Samples : \nREQUEST \nPOST /loyaltyManagement/loyaltyProgramMember/hub \nAccept: application/json \n \n{\"callback\": \"http://in.listener.com\"} \nRESPONSE \n201 \nContent-Type: application/json \nLocation: /loyaltyManagement/loyaltyProgramMember/hub/42 \n \n{\"id\":\"42\",\"callback\":\"http://in.listener.com\",\"query\":null} \n \nUnregister Loyalty Program Member Listener \nDELETE /loyaltyManagement/loyaltyProgramMember/hub/{id} \nDescription :  \nClears the communication endpoint address that was set by creating the Hub. \nBehavior :  \nReturns HTTP/1.1 status code 204 if the request was successful. \n \nReturns HTTP/1.1 status code 404 if the resource is not found."}
{"tmforumApiId": "TMF658", "id": "TMF658-chunk-28", "chunkIndex": 28, "totalChunks": 31, "apiName": "Loyalty Management API user guides 17.0.1", "title": "TMF658_Loyalty_Management_API_user_guides_17.0.1 (Part 28/31)", "documentType": "Tmforum api user guide", "text": "Usage Samples : \nREQUEST \nDELETE /loyaltyManagement/loyaltyProgramMember/hub/42 \nAccept: application/json \n \nRESPONSE \n204 \n \nPublish Loyalty Program Member Listener \nPOST /client/listener \nDescription :  \nThe supported loyalty program member event types are: \n\u2022 \nLoyaltyProgramMemberCreationNotification \n\u2022 \nLoyaltyProgramMemberUpdateNotification \n\u2022 \nLoyaltyProgramMemberDeleteNotification \nEach of these events will publish an event to the registered listeners, will request structures are set out in the event \nmodel section. \nBehavior :  \nReturns HTTP/1.1 status code 201 if the service is able to set the configuration. \nUsage Samples : \nREQUEST \nPOST /client/listener \nAccept: application/json \n \n{ \n    \"eventId\": \"111\", \n    \"eventType\": \"LoyaltyProgramMemberCreationNotification\", \n    \"event\": { \n        EVENT BODY as described in loyaltyProgramMember event model section.  \n     } \n} \nRESPONSE \n\n\n201 \nContent-Type: application/json \n \n \nNOTIFICATIONS ON LOYALTY MEMBER PRODUCT \nRegister Loyalty Member Product Listener \nPOST /loyaltyManagement/loyaltyProgramMemberProduct/hub \nDescription :  \nSets the communication endpoint address the service instance must use to deliver information about its health state, \nexecution state, failures and metrics. Supports multiple listeners. \nBehavior :  \nReturns HTTP/1.1 status code 204 if the request was successful. \n \nReturns HTTP/1.1 status code 409 if request is not successful. \nUsage Samples : \nREQUEST \nPOST /loyaltyManagement/loyaltyProgramMemberProduct/hub \nAccept: application/json \n \n{\"callback\": \"http://in.listener.com\"} \nRESPONSE \n201 \nContent-Type: application/json \nLocation: /loyaltyManagement/loyaltyProgramMemberProduct/hub/42 \n \n{\"id\":\"42\",\"callback\":\"http://in.listener.com\",\"query\":null} \n \nUnregister Loyalty Member Product Listener \nDELETE \n/loyaltyManagement/loyaltyProgramMemberProduct/hub/{ID} \nDescription :  \nClears the communication endpoint address that was set by creating the Hub. \nBehavior :  \n\n\nReturns HTTP/1.1 status code 204 if the request was successful. \n \nReturns HTTP/1.1 status code 404 if the resource is not found. \nUsage Samples :  \nREQUEST \nDELETE /loyaltyManagement/loyaltyProgramMemberProduct/hub/42 \nAccept: application/json \n \nRESPONSE \n204 \n \nPublish Loyalty Member Product Listener \nPOST /client/listener \nDescription :  \nThe supported loyalty program member product event types are: \n\u2022 \nLoyaltyProgramMemberProductCreationNotification \n\u2022 \nLoyaltyProgramMemberProductUpdateNotification \n\u2022 \nLoyaltyProgramMemberProductDeleteNotification \nEach of these events will publish an event to the registered listeners, will request structures are set out in the event \nmodel section. \nBehavior :  \nReturns HTTP/1.1 status code 201 if the service is able to set the configuration. \nUsage Samples :  \nREQUEST \nPOST /client/listener \nAccept: application/json \n \n{ \n    \"eventId\": \"111\", \n    \"eventType\": \"LoyaltyProgramMemberProductCreationNotification\", \n    \"event\": { \n\n\n        EVENT BODY as described in loyaltyProgramProductMember event model section.  \n     } \n} \nRESPONSE \n201 \nContent-Type: application/json \n \n \n \nNOTIFICATIONS ON LOYALTY EARN \nRegister Loyalty Earn Listener \nPOST /loyaltyManagement/loyaltyEarn/hub \nDescription :  \nSets the communication endpoint address the service instance must use to deliver information about its health state, \nexecution state, failures and metrics. Supports multiple listeners. \nBehavior :  \nReturns HTTP/1.1 status code 204 if the request was successful. \n \nReturns HTTP/1.1 status code 409 if request is not successful. \nUsage Samples :  \nREQUEST \nPOST /loyaltyManagement/loyaltyEarn/hub \nAccept: application/json \n \n{\"callback\": \"http://in.listener.com\"} \nRESPONSE \n201 \nContent-Type: application/json \nLocation: /loyaltyManagement/loyaltyEarn/hub/42 \n \n{\"id\":\"42\",\"callback\":\"http://in.listener.com\",\"query\":null} \n \nUnregister Loyalty Earn Listener \n\n\nDELETE /loyaltyManagement/loyaltyEarn/hub/{id} \nDescription :  \nClears the communication endpoint address that was set by creating the Hub. \nBehavior :  \nReturns HTTP/1.1 status code 204 if the request was successful. \n \nReturns HTTP/1.1 status code 404 if the resource is not found. \nUsage Samples :  \nREQUEST \nDELETE /loyaltyManagement/loyaltyEarn/hub/42 \nAccept: application/json \n \nRESPONSE \n204 \n \nPublish Loyalty Earn Listener \nPOST /client/listener \nDescription :  \nThe only supported loyalty earn event type is loyaltyEarnNotification. \nEach of these events will publish an event to the registered listeners, will request structures are set out in the event \nmodel section. \nBehavior :  \nReturns HTTP/1.1 status code 201 if the service is able to set the configuration. \nSample Usage : \nREQUEST \nPOST /client/listener \nAccept: application/json \n \n{ \n    \"eventId\": \"111\", \n    \"eventType\": \"LoyaltyEarnNotification\", \n    \"event\": { \n\n\n        EVENT BODY as described in loyaltyEarn event model section.  \n     } \n} \nRESPONSE \n201 \nContent-Type: application/json \n \n \n \nNOTIFICATIONS ON LOYALTY BURN \nRegister Loyalty Burn Listener \nPOST /loyaltyManagement/loyaltyBurn/hub \nDescription :  \nSets the communication endpoint address the service instance must use to deliver information about its health state, \nexecution state, failures and metrics. Supports multiple listeners. \nBehavior :  \nReturns HTTP/1.1 status code 204 if the request was successful. \n \nReturns HTTP/1.1 status code 409 if request is not successful. \nSample Usage : \nREQUEST \nPOST /loyaltyManagement/loyaltyBurn/hub \nAccept: application/json \n \n{\"callback\": \"http://in.listener.com\"} \nRESPONSE \n201 \nContent-Type: application/json \nLocation: /loyaltyManagement/loyaltyBurn/hub/42 \n \n{\"id\":\"42\",\"callback\":\"http://in.listener.com\",\"query\":null} \n \n \nUnregister Loyalty Burn Listener"}
{"tmforumApiId": "TMF658", "id": "TMF658-chunk-29", "chunkIndex": 29, "totalChunks": 31, "apiName": "Loyalty Management API user guides 17.0.1", "title": "TMF658_Loyalty_Management_API_user_guides_17.0.1 (Part 29/31)", "documentType": "Tmforum api user guide", "text": "DELETE /loyaltyManagement/loyaltyBurn/hub/{id} \nDescription :  \nClears the communication endpoint address that was set by creating the Hub. \nBehavior :  \nReturns HTTP/1.1 status code 204 if the request was successful. \n \nReturns HTTP/1.1 status code 404 if the resource is not found. \nUsage Samples :  \nREQUEST \nDELETE /loyaltyManagement/loyaltyBurn/hub/42 \nAccept: application/json \n \nRESPONSE \n204 \n \nPublish Loyalty Burn Listener \nPOST /client/listener \nDescription :  \nThe only supported loyalty earn event type is loyaltyBurnNotification. \nEach of these events will publish an event to the registered listeners, will request structures are set out in the event \nmodel section. \nBehavior :  \nReturns HTTP/1.1 status code 201 if the service is able to set the configuration. \nUsage Sampels :  \nREQUEST \nPOST /client/listener \nAccept: application/json \n \n{ \n    \"eventId\": \"111\", \n    \"eventType\": \"LoyaltyBurnNotification\", \n\n\n    \"event\": { \n        EVENT BODY as described in loyaltyBurn event model section.  \n     } \n} \nRESPONSE \n201 \nContent-Type: application/json \n \n \n \nNOTIFICATIONS ON LOYALTY EVENT \nRegister Loyalty Event Listener \nPOST /loyaltyManagement/loyaltyEvent/hub \n \nDescription :  \nSets the communication endpoint address the service instance must use to deliver information about its health state, \nexecution state, failures and metrics. Supports multiple listeners. \nBehavior :  \nReturns HTTP/1.1 status code 204 if the request was successful. \n \nReturns HTTP/1.1 status code 409 if request is not successful. \nUsage Samples :  \nREQUEST \nPOST /loyaltyManagement/loyaltyEvent/hub \nAccept: application/json \n \n{\"callback\": \"http://in.listener.com\"} \nRESPONSE \n201 \nContent-Type: application/json \nLocation: /loyaltyManagement/loyaltyEvent/hub/42 \n \n{\"id\":\"42\",\"callback\":\"http://in.listener.com\",\"query\":null} \nUnregister Loyalty Event Listener \n\n\nDELETE /loyaltyManagement/loyaltyEvent/hub/{id} \nDescription :  \nClears the communication endpoint address that was set by creating the Hub. \nBehavior :  \nReturns HTTP/1.1 status code 204 if the request was successful. \n \nReturns HTTP/1.1 status code 404 if the resource is not found. \nUsage Samples :  \nREQUEST \nDELETE /loyaltyManagement/loyaltyEvent/hub/42 \nAccept: application/json \n \nRESPONSE \n204 \n \nPublish Loyalty Event Listener \nPOST /client/listener \nDescription :  \nThe only supported loyalty earn event type is loyaltyEventNotification. \nEach of these events will publish an event to the registered listeners, will request structures are set out in the event \nmodel section. \nBehavior :  \nReturns HTTP/1.1 status code 201 if the service is able to set the configuration. \nSample Usages :  \nREQUEST \nPOST /client/listener \nAccept: application/json \n \n{ \n    \"eventId\": \"111\", \n    \"eventType\": \"LoyaltyEventNotification\", \n\n\n    \"event\": { \n        EVENT BODY as described in loyaltyEvent event model section.  \n     } \n} \nRESPONSE \n201 \nContent-Type: application/json \n \n \n\n\nEvent Models \nLoyalty Program Member Notification Model \nloyaltyProgramMemberCreateNotification \n{ \n    \"eventType\": \"LoyaltyProgramMemberCreationNotification\",  \n    \"eventTime\": \"2015-09-27T05:46:25.0Z\",  \n    \"eventId\": \"4343\",  \n    \"event\": {  \n        \"loyaltyProgramMember\": {  \n            \"status\":\"suspended\", \n            \"name\":\"James Joe\", \n            \"validFor\": { \n                \"startDateTime\":\"2015-04-19T16:42:23.0Z \", \n                \"endDateTime\":\"2016-04-19T16:42:23.0Z\" \n            } \n        }  \n    }  \n} \n \nField \nDescription \neventType \nThe event type. This value is \nLoyaltyProgramMemberCreateNotification for this event model. \neventId \nA unique event identifier. \nevent.loyaltyProgramMember The loyaltyProgramMember that was created. \n \nloyaltyProgramMemberUpdateNotification \n{ \n    \"eventType\": \"LoyaltyProgramMemberUpdateNotification\",  \n    \"eventTime\": \"2015-09-27T05:46:25.0Z\",  \n    \"eventId\": \"4343\",  \n    \"event\": {  \n        \"loyaltyProgramMember\": {  \n            \"status\":\"active\", \n\n\n            \"name\":\"James Joe\", \n            \"validFor\": { \n                \"startDateTime\":\"2015-04-19T16:42:23.0Z \", \n                \"endDateTime\":\"2016-04-19T16:42:23.0Z\" \n            } \n        }  \n    }  \n} \n \nField \nDescription \neventType \nThe event type. This value is \nLoyaltyProgramMemberUpdateNotification for this event model. \neventId \nA unique event identifier. \nevent.loyaltyProgramMember The loyaltyProgramMember that was created. \n \nloyaltyProgramMemberDeleteNotification \n{ \n    \"eventType\": \"LoyaltyProgramMemberDeleteNotification\",  \n    \"eventTime\": \"2015-10-28T05:46:25.0Z\",  \n    \"eventId\": \"3958\",  \n    \"event\": {  \n        \"loyaltyProgramMember\": {  \n            \"status\":\"active\", \n            \"name\":\"James Joe\", \n            \"validFor\": { \n                \"startDateTime\":\"2015-04-19T16:42:23.0Z \", \n                \"endDateTime\":\"2016-04-19T16:42:23.0Z\" \n            } \n        }  \n    }  \n} \n \nField \nDescription \neventType \nThe event type. This value is \nLoyaltyProgramMemberDeleteNotification for this event model. \neventId \nA unique event identifier. \nevent.loyaltyProgramMember The details of the loyaltyProgramMember before it was deleted. \n\n\nLoyalty Program Member Product Model \nloyaltyProgramMemberProductCreateNotification \n{ \n    \"eventType\": \"LoyaltyProgramMemberProductCreationNotification\",  \n    \"eventTime\": \"2015-09-27T05:46:25.0Z\",  \n    \"eventId\": \"4343\",  \n    \"event\": {  \n        \"loyaltyProgramProduct\": { \n            \"id\": \"1211\", \n            \"name\": \"DataUsageBenefit\", \n            \"description\": \"Data Usage Loyalty Benefits\", \n            \"productStatus\": \"suspended\", \n            \u201cloyaltyProgramProductSpec\u201d: { \n                \u201cid\u201d: \u201c121\u201d, \n                \u201chref\u201d: \u201c/loyaltyManagement/loyaltyProgramProductSpec/121\u201d \n            }, \n            \u201cloyaltyAccount\u201d: { \n                \u201cid\u201d: \u201c1\u201d, \n                \u201chref\u201d : \u201c/loyaltyManagement/loyaltyProgramMember/121/loyaltyAccount/1\u201d \n            }, \n            \"validFor\": { \n                  \"endDateTime\": \"2017-05-19T16:42:20Z\", \n                  \"startDateTime\": \"2017-05-19T16:42:20Z\" \n             }, \n            \"href\": \"/loyaltyManagement/loyaltyProgramMember/121/loyaltyProgramProduct/1211\" \n        }     \n    }  \n} \n \nField \nDescription \neventType \nThe event type. This value is \nLoyaltyProgramMemberProductCreateNotification for this event \nmodel. \neventId \nA unique event identifier. \nevent.loyaltyProgramProduct The loyaltyProgramProduct that was created."}
{"tmforumApiId": "TMF658", "id": "TMF658-chunk-30", "chunkIndex": 30, "totalChunks": 31, "apiName": "Loyalty Management API user guides 17.0.1", "title": "TMF658_Loyalty_Management_API_user_guides_17.0.1 (Part 30/31)", "documentType": "Tmforum api user guide", "text": "loyaltyProgramMemberUpdateNotification \n{ \n    \"eventType\": \"LoyaltyProgramMemberProductUpdateNotification\",  \n    \"eventTime\": \"2015-09-27T05:46:25.0Z\",  \n    \"eventId\": \"4343\",  \n    \"event\": {  \n        \"loyaltyProgramProduct\": { \n            \"id\": \"1211\", \n            \"name\": \"DataUsageBenefit\", \n            \"description\": \"Data Usage Loyalty Benefits\", \n            \"productStatus\": \"active\", \n            \u201cloyaltyProgramProductSpec\u201d: { \n                \u201cid\u201d: \u201c121\u201d, \n                \u201chref\u201d: \u201c/loyaltyManagement/loyaltyProgramProductSpec/121\u201d \n            }, \n            \u201cloyaltyAccount\u201d: { \n                \u201cid\u201d: \u201c1\u201d, \n                \u201chref\u201d : \u201c/loyaltyManagement/loyaltyProgramMember/121/loyaltyAccount/1\u201d \n            }, \n            \"validFor\": { \n                  \"endDateTime\": \"2017-05-19T16:42:20Z\", \n                  \"startDateTime\": \"2017-05-19T16:42:20Z\" \n             }, \n            \"href\": \"/loyaltyManagement/loyaltyProgramMember/121/loyaltyProgramProduct/1211\" \n        }     \n    }  \n} \n \nField \nDescription \neventType \nThe event type. This value is \nLoyaltyProgramMemberProductUpdateNotification for this event \nmodel. \neventId \nA unique event identifier. \nevent.loyaltyProgramProduct The loyaltyProgramProduct that was updated. \n \nloyaltyProgramMemberDeleteNotification \n\n\n{ \n    \"eventType\": \"LoyaltyProgramMemberProductDeleteNotification\",  \n    \"eventTime\": \"2015-09-27T05:46:25.0Z\",  \n    \"eventId\": \"9438\",  \n    \"event\": {  \n        \"loyaltyProgramProduct\": { \n            \"id\": \"1211\", \n            \"name\": \"DataUsageBenefit\", \n            \"description\": \"Data Usage Loyalty Benefits\", \n            \"productStatus\": \"active\", \n            \u201cloyaltyProgramProductSpec\u201d: { \n                \u201cid\u201d: \u201c121\u201d, \n                \u201chref\u201d: \u201c/loyaltyManagement/loyaltyProgramProductSpec/121\u201d \n            }, \n            \u201cloyaltyAccount\u201d: { \n                \u201cid\u201d: \u201c1\u201d, \n                \u201chref\u201d : \u201c/loyaltyManagement/loyaltyProgramMember/121/loyaltyAccount/1\u201d \n            }, \n            \"validFor\": { \n                  \"endDateTime\": \"2017-05-19T16:42:20Z\", \n                  \"startDateTime\": \"2017-05-19T16:42:20Z\" \n             }, \n            \"href\": \"/loyaltyManagement/loyaltyProgramMember/121/loyaltyProgramProduct/1211\" \n        }     \n    }  \n} \n \nField \nDescription \neventType \nThe event type. This value is \nLoyaltyProgramMemberProductDeleteNotification for this event \nmodel. \neventId \nA unique event identifier. \nevent.loyaltyProgramProduct The loyaltyProgramProduct before it was deleted. \n \nLoyalty Earn Model \nloyaltyEarnNotification \n\n\n{ \n    \"eventType\": \"LoyaltyEarnNotification\",  \n    \"eventTime\": \"2016-06-04T07:42:25.0Z\",  \n    \"eventId\": \"3983\",  \n    \"event\": {  \n        \"loyaltyEarn\": {  \n            \"id\": \"843G-838F-HY23-0238\", \n            \"href\": \"loyaltyManagement/loyaltyProgramMember/PHDUIU8336/loyaltyBalance/ \niTunes/loyaltyEarn/843G-838F-HY23-0238\", \n            \"quantity\": 20.00, \n            \"openingBalance\": 280.00, \n            \"closingBalance\": 300.00, \n            \"dateTime\": \"2016-07-29 12:18:51\", \n            \"description\": \"A loyalty event triggered and points earned.\" \n        }  \n    }  \n} \n \nField \nDescription \neventType \nThe event type. This value is LoyaltyEarnNotification for this event \nmodel. \neventId \nA unique event identifier. \nevent.loyaltyEarn \nThe loyaltyEarn that was transacted. \n \nLoyalty Burn Model \nloyaltyBurnNotification \n{ \n    \"eventType\": \"LoyaltyBurnNotification\",  \n    \"eventTime\": \"2015-02-04T07:42:25.0Z\",  \n    \"eventId\": \"3435\",  \n    \"event\": {  \n        \"loyaltyBurn\": {  \n            \"id\": \"843G-838F-HY23-0238\", \n            \"href\": \"loyaltyManagement/loyaltyProgramMember/PHDUIU8336/loyaltyBalance/ \n\n\niTunes/loyaltyBurn/843G-838F-HY23-0238\", \n            \"quantity\": 20.00, \n            \"openingBalance\": 280.00, \n            \"closingBalance\": 260.00, \n            \"dateTime\": \"2015-02-04 07:42:20\", \n            \"description\": \"Burn loyalty points on Beyonce Song purchase.\" \n        }  \n    }  \n} \n \nField \nDescription \neventType \nThe event type. This value is LoyaltyBurnNotification for this event \nmodel. \neventId \nA unique event identifier. \nevent.loyaltBurn \nThe loyaltyBurn that was transacted. \n \nLoyalty Event Model \nloyaltyEventNotification \n \n{ \n    \"eventType\": \"LoyaltyEarnNotification\",  \n    \"eventTime\": \"2016-06-04T07:42:25.0Z\",  \n    \"eventId\": \"3983\",  \n    \"memberId\": \"4893294389\", \n    \"event\": {  \n        \"loyaltyEvent\": {  \n            All the incoming event attributes. \n        }  \n    }  \n} \n \nField \nDescription \neventType \nThe event type. This value is LoyaltyEvent for this event model. \neventTime \nThe time that the event occurred. \neventId \nA unique event identifier. \n\n\nmemberId \nThe loyalty program member ID associated with the event. \nevent.loyaltyEvent \nAll the attributes incoming from the LoyaltyEvent."}
{"tmforumApiId": "TMF658", "id": "TMF658-chunk-31", "chunkIndex": 31, "totalChunks": 31, "apiName": "Loyalty Management API user guides 17.0.1", "title": "TMF658_Loyalty_Management_API_user_guides_17.0.1 (Part 31/31)", "documentType": "Tmforum api user guide", "text": "OPEN ISSUES \n \nThere are several open issues that needs to be considered: \n\u2022 \nIn the GB922_Loyalty_R14.0.pdf document, a loyaltyProgramMember is not directly linked to a \nloyaltyProgramProduct. Is it acceptable that our API specification links the product instance directly with the \nloyalty program member? \n\u2022 \nIn the GB922_Loyalty_R14.0.pdf document, there is a statement, \"LoyaltyPrograms might be incompatible \nwith each other and in this case the customer has to choose only one LoyaltyProgram\". How will this look in \nthe design model? The document does not elaborate further on this point. \n\u2022 \nThe SID specifies the loyaltyAction as \"A LoyaltyAction may correspond either to a CustomerOrder (Ex: 100 \nSMS free), or to an Interaction (Ex: a SMS notifying the 100 SMS free) or to a LoyaltyEarn (Ex: 100 points \non the LoyaltyAccount)\", but the GB922_Loyalty_R14.0.pdf document diagram specifies that a LoyaltyAction \nmay have a CustomerOrder and a LoyaltyEarn and Interaction. Which is correct? \n\u2022 \nIf there are multiple loyaltyActions and there is a failure during the execution of a loyalty action, there is no \nrollback procedure. We propose that if there are multiple loyalty actions necessary, that the API consumer \nspecifies the loyaltyAction as a business interaction and handle the rest of the actions necessary himself. \n\u2022 \nShould an error be returned when deleting a product specification and there are products that have been \ncreated according to this specification? \n\u2022 \nIn the GB922_Loyalty_R14.0.pdf document, figure Pr. 38 indicates that a loyaltyAction describes multiple \nloyaltyExecutionPoints. We propose that this be changed to a loyaltyAction only describing a single \nloyaltyExecutionPoint, since in practice it is unlikely that you will have a single loyaltyAction resource will \nedequately be able to describe a LoyaltyEarn, CustomerOrder and BusinessInteraction resource. \n\u2022 \nConsidering the \u201cunit\u201d attribute on the LoyaltyBalance resource, it may be necessary to specify a conversion \nratio of loyalty units if it is not a monetary unit. \n \n\n\nRELEASE HISTORY \n \nVersion \nNumber \nDate  \nRelease led by: \nDescription  \nRelease 1.0 \n04/15/2013 \nClara van Staden \nFirst Release of Draft Version of the \nDocument. \nRelease 1.1 \n \nAlicja Kawecki \nUpdated cover and Notice to reflect \nTM Forum Team Approved status. \nRelease 2.0.0 \n07/19/2017 \nAPI Team \nUpdates for Fx17 \nRelease 17.0.1 \nVersion 2.0.1 \n20-Nov-2017 \nAdrienne Walcott \nUpdated to reflect TM Forum \nApproved Status \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n\nCOMPANY CONTACT DETAILS \n \nCompany \nTeam Member Representative  \nGlobetom \nName: Clara van Staden \nTitle: Senior Software Engineer \nEmail: clara.vstaden@globetom.com \nPhone: +27 84 206 4826"}
