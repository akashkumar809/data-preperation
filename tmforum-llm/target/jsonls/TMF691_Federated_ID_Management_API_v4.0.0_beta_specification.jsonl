{"tmforumApiId": "TMF691", "id": "TMF691-chunk-1", "chunkIndex": 1, "totalChunks": 5, "apiName": "Federated ID Management API v4.0.0 beta specification", "title": "TMF691_Federated_ID_Management_API_v4.0.0_beta_specification (Part 1/5)", "documentType": "Tmforum api user guide", "text": "TM Forum Specification \n \n \nFederated Identity API User Guide \n \n \n \n \n \nTMF691 \nTeam Approved Date: 28-May-2020 \n \n \n \nRelease Status: Pre-production \nApproval Status: Team Approved \nVersion 4.0.0 \nIPR Mode: RAND \n\n\nNOTICE \nCopyright \u00a9 TM Forum 2020. All Rights Reserved. \n \nThis document and translations of it may be copied and furnished to others, and derivative works that \ncomment on or otherwise explain it or assist in its implementation may be prepared, copied, published, \nand distributed, in whole or in part, without restriction of any kind, provided that the above copyright \nnotice and this section are included on all such copies and derivative works. However, this document itself \nmay not be modified in any way, including by removing the copyright notice or references to TM FORUM, \nexcept as needed for the purpose of developing any document or deliverable produced by a TM FORUM \nCollaboration Project Team (in which case the rules applicable to copyrights, as set forth in the TM FORUM \nIPR Policy, must be followed) or as required to translate it into languages other than English. \n \nThe limited permissions granted above are perpetual and will not be revoked by TM FORUM or its \nsuccessors or assigns. \n \nThis document and the information contained herein is provided on an \"AS IS\" basis and TM FORUM \nDISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY \nTHAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP RIGHTS OR ANY \nIMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. \n \nDirect inquiries to the TM Forum office: \n \n4 Century Drive, Suite 100 \nParsippany, NJ 07054, USA \nTel No. +1 973 944 5100 \nFax No. +1 973 998 7196 \nTM Forum Web Page: www.tmforum.org \n \n \n \n \n \n \n \n \n \n \n\n\nTable of Contents \n \nNOTICE ...................................................................................................................................................... 2 \nTable of Contents ................................................................................................................................... 3 \nList of Tables ............................................................................................................................................ 4 \nIntroduction ............................................................................................................................................. 5 \nSAMPLE USE CASES ........................................................................................................................................ 6 \nRESOURCE MODEL ......................................................................................................................................... 7 \nUserinfo resource ................................................................................................................................... 7 \nNotification Resource Models ............................................................................................................. 15 \nAPI OPERATIONS .......................................................................................................................................... 17 \nOperations on Userinfo ........................................................................................................................... 18 \nList userinfos ........................................................................................................................................ 18 \nRetrieve userinfo .................................................................................................................................. 20 \nAcknowledgements ..................................................................................................................................... 22 \nVersion History ........................................................................................................................................ 22 \nRelease History ........................................................................................................................................ 22 \n\n\nList of Tables \nN/A \n \n\n\nIntroduction \n \nThe following document is the specification of the REST API for Federated ID Management. It \nincludes the model definition as well as all available operations for SID userinfo entity. \nThis API covers the operations required to allow an application (for instance a selfcare mobile app) \nrequest identity information about the individual that is making use of the functionality provided by such \napplication (the user), or in general to allow an application to request identity related information about \nan individual to the system holding such identity information. This API, instead of defining new \noperations, relies on the use of industry standard for identity information such as OpenID Connect \n(http://openid.net/specs/openid-connect-core-1_0.html ) and \nOAuth2.0 (RFC6749). \n \nThis API manages Federated Identity because it defines the operations that must be supported by \nany system in order to allow providing identity related information (i.e.: the set of attributes related \nto the individual, such as name, family name, primary phone number, gender, birthdate, \u2026) to \ndifferent requesting applications, provided they are authorized to perform such request. \nAuthorization can be granted by providing a valid proof of authorization (e.g.: an OAuth2.0 token) \ngranted by the individual whose identity is being requested. \n \nIt is up to each implementation to define how authorization can be provided (and confirmed), this \nAPI only defines the operations required to request identity related information by an authorized \napplication. As indicated before industry standard mechanisms (OpenID Connect and OAuth2.0) are \nconsidered for the implementation of this API, therefore it is assumed in this specification that the \nrequest for user\u00b4s identity includes an Authorization header with a valid token. \n \nThis API relates with existing TM Forum PartyManagement API (TMF632) because a user is actually an \nindividual (i.e.: a party) acting with the role of \u201cuser\u201d when interacting with the application requesting \nthe identity information, therefore the so called \u201cuserinfo\u201d can be actually either an extension or a \nsubset of the specific party data information, which typically encompasses identity related and any other \nadditional information related to such individual (such as for instance the date when the individual \nregistered in the system, the status or the list of other related parties which is not identity-specific \ninformation). \n \nThis API defines a set of extended claims over those standard claims defined in OpenID Connect, in \norder to provide not only the basic user identity information but also the so called \u201cuserAssets\u201d or list \nof assets that can be managed by the individual whose identity information is being requested."}
{"tmforumApiId": "TMF691", "id": "TMF691-chunk-2", "chunkIndex": 2, "totalChunks": 5, "apiName": "Federated ID Management API v4.0.0 beta specification", "title": "TMF691_Federated_ID_Management_API_v4.0.0_beta_specification (Part 2/5)", "documentType": "Tmforum api user guide", "text": "SAMPLE USE CASES \nThis section includes a set of main use cases that can be performed with this API. Additional use cases \ncan be generated using the operations and resources defined in this specification. \n\u2022 \nAn application that is being used by an individual and provides functionality to that individual \n(i.e.: End user) based on his identity (for instance a selfCare application that greets the user \ndisplaying his name on the screen), needs to identify such individual.  \nIn order to obtain identity information of the individual, the app performs the following \nsteps \n1. The application obtains a proof of authorization by the individual to request his \nidentity information (e.g.: an OAUth2.0 token) \n \n2. The application requests the identity-related information of the user (i.e.: the \nuserinfo) associated to the individual whose proof of authorization is provided \n \n\u2022 \nAn application that is being used by an individual and provides functionality to that individual \n(i.e.: End user) based on the information stored in a system (for instance a selfCare application \nthat will request billing information about the billing accounts associated to the user), needs to \nidentify such individual and know what assets that user can manage.  \nIn order to obtain identity information of the individual, the app performs the following \nsteps \n1. The application obtains a proof of authorization by the individual to request his \nidentity information (e.g.: an OAUth2.0 token) \n \n2. The application requests the identity-related information of the user (i.e.: the \nuserinfo and userAssets) associated to the individual whose proof of \nauthorization is provided \n \nReader will find additional example of use cases using Usage API in \u201cOpen Digital Business Scenarios and \nUse Cases\u201d document. \n \n \n \n\n\nRESOURCE MODEL \nUserinfo resource \n \nResource model \n \n \n \n\n\nField descriptions \nUserinfo fields \naddress \nA geographic address (GeographicAddress). Structure including the End-\nUser's preferred postal address. \nbirthdate \nA string. End-User's birthday, represented as an [ISO8601-2004] YYYY-MM-\nDD format. The year MAY be 0000, indicating that it is omitted. To \nrepresent only the year, YYYY format is allowed. Note that depending on \nthe underlying platform's date related function, providing just year can \nresult in varying month and day, so the implementers need to take this \nfactor into account to correctly process the dates. \nemail \nA string. End-User's preferred e-mail address. Its value MUST conform to \nthe [RFC5322] addr-spec syntax. \nemail_verified \nA boolean. True if the user's email has been verified. \nfamily_name \nA string. Surname(s) or last name(s) of the End-User. Note that in some \ncultures, people can have multiple family names or no family name; all can \nbe present, with the names being separated by space characters. \ngender \nA string. End-User's gender. Values defined by this specification are female \nand male. Other values MAY be used when neither of the defined values \nare applicable. \ngiven_name \nA string. Given name(s) or first name(s) of the End-User. Note that in some \ncultures, people can have multiple given names; all can be present, with \nthe names being separated by space characters. \nlegalId \nA list of individual identifications (IndividualIdentification [*]). Identification \ndocumentation of the contact. \nlocale \nA string. End-User's locale, represented as a [RFC5646] language tag. This is \ntypically an [ISO639-1] language code in lowercase and an [ISO3166-1] \ncountry code in uppercase, separated by a dash. For example, en-US or fr-\nCA. As a compatibility note, some implementations have used an \nunderscore as the separator rather than a dash, for example, en_US. \nmiddle_name \nA string. Middle name(s) of the End-User. Note that in some cultures, \npeople can have multiple middle names; all can be present, with the names \nbeing separated by space characters. Also note that in some cultures, \nmiddle names are not used. \nname \nA string. End-User's full name in displayable form including all name parts, \npossibly including titles and suffixes, ordered according to the End-User's \nlocale and preferences. \n\n\nnickname \nA string. Casual name of the End-User that may or may not be the same as \nthe given_name. For instance, a nickname value of Mike might be returned \nalongside a given_name value of Michael. \nphone_number \nA string. End-User's preferred telephone number. [E.164] is \nRECOMMENDED as the format of this Claim, for example, +1 (425) 555-\n1212 or +56 82) 687 2400. If the phone number contains an extension, it is \nRECOMMENDED that the extension be represented using the [RFC3966] \nextension syntax, for example, +1 (604) 555-1234;ext=5678. \nphone_number_verified A boolean. True if the user's phone number has been verified. \npicture \nA string. URL of the End-User's profile picture. This URL MUST refer to an \nimage file (for example, a PNG, JPEG, or GIF image file), rather than to a \nWeb page containing an image. Note that this URL SHOULD specifically \nreference a profile photo of the End-User suitable for displaying when \ndescribing the End-User, rather than an arbitrary photo taken by the End-\nUser. \npreferred_username \nA string. Shorthand name by which the End-User wishes to be referred to at \nthe RP, such as janedoe or j.doe. This value MAY be any valid JSON string \nincluding special characters such as @, /, or whitespace. \nprofile \nA string. URL of the End-User's profile page. The contents of this Web page \nSHOULD be about the End-User. \nsub \nA string. Subject - Unique Identifier for the End-User. \nuserAssets \nA list of user assets (UserAsset [*]). List of additional profile information. \nwebsite \nA string. URL of the End-User's Web page or blog. This Web page SHOULD \ncontain information published by the End-User or an organization that the \nEnd-User is affiliated with. \nzoneinfo \nA string. String from zoneinfo time zone database representing the End-\nUser's time zone. For example, Europe/Paris or America/Los_Angeles. \nAttachmentRefOrValue sub-resource \nAn attachment by value or by reference. An attachment complements the description of an element, for \nexample through a document, a video, a picture. \n@referredType \nA string. The actual type of the target instance when needed for \ndisambiguation. \ndescription \nA string. A narrative text describing the content of the attachment. \nhref \nAn uri (Uri). URI for this Attachment. \nid \nA string. Unique identifier for this particular attachment."}
{"tmforumApiId": "TMF691", "id": "TMF691-chunk-3", "chunkIndex": 3, "totalChunks": 5, "apiName": "Federated ID Management API v4.0.0 beta specification", "title": "TMF691_Federated_ID_Management_API_v4.0.0_beta_specification (Part 3/5)", "documentType": "Tmforum api user guide", "text": "url \nAn uri (Uri). Uniform Resource Locator, is a web page address (a subset of \nURI). \nname \nA string. The name of the attachment. \n@baseType \nA string. When sub-classing, this defines the super-class. \n@schemaLocation \nAn uri (Uri). A URI to a JSON-Schema file that defines additional attributes \nand relationships. \n@type \nA string. When sub-classing, this defines the sub-class Extensible name. \nattachmentType \nA string. Attachment type such as video, picture. \ncontent \nA base 6 4 (Base64). The actual contents of the attachment object, if \nembedded, encoded as base64. \nmimeType \nA string. Attachment mime type such as extension file for video, picture and \ndocument. \nsize \nA quantity (Quantity). The size of the attachment. \nvalidFor \nA time period. The period of time for which the attachment is valid. \nEntitlement sub-resource \nAn Entitlement defines access levels to operate over a given function that can be included in an asset. \naction \nA string. Level of access granted as part of the permission. \nfunction \nA string. Specific function that can be managed over a given asset. \nid \nA string. Identifier of the entitlement. \nGeographicAddress sub-resource \nStructured textual way of describing how to find a Property in an urban area (country properties are \noften defined differently). \nNote : Address corresponds to SID UrbanPropertyAddress. \nhref \nA string. Unique reference of the place. \nid \nA string. Unique identifier of the place. \nname \nA string. A user-friendly name for the place, such as [Paris Store], [London \nStore], [Main Home]. \ncity \nA string. City that the address is in. \ncountry \nA string. Country that the address is in. \ngeographicLocation \nA geographic location ref or value (GeographicLocationRefOrValue). A \nGeographicLocation is a pure-virtual super-class to the GeoJSON-aligned \n\n\ngeometries of Point (addresses and locations), MultiPoint, LineString \n(streets, highways and boundaries), MultiLineString and Polygon (countries, \nprovinces, tracts of land). Use the @type attribute to specify which of these \nis being specified by the geometry attribute. \ngeographicSubAddress \nA list of geographic sub addresses (GeographicSubAddress [*]). \nRepresentation of a GeographicSubAddress  \nIt is used for addressing within a property in an urban area (country \nproperties are often defined differently). It may refer to a building, a building \ncluster, or a floor of a multistory building. \nlocality \nA string. An area of defined or undefined boundaries within a local authority \nor other legislatively defined area, usually rural or semi rural in nature. \n[ANZLIC-STREET], or a suburb, a bounded locality within a city, town or shire \nprincipally of urban character [ANZLICSTREET]. \npostcode \nA string. descriptor for a postal delivery area, used to speed and simplify the \ndelivery of mail (also know as zipcode). \nstateOrProvince \nA string. the State or Province that the address is in. \nstreetName \nA string. Name of the street or other street type. \nstreetNr \nA string. Number identifying a specific property on a public street. It may be \ncombined with streetNrLast for ranged addresses. \nstreetNrLast \nA string. Last number in a range of street numbers allocated to a property. \nstreetNrLastSuffix \nA string. Last street number suffix for a ranged address. \nstreetNrSuffix \nA string. the first street number suffix. \nstreetSuffix \nA string. A modifier denoting a relative direction. \nstreetType \nA string. alley, avenue, boulevard, brae, crescent, drive, highway, lane, \nterrace, parade, place, tarn, way, wharf. \nGeographicLocationRefOrValue sub-resource \nA GeographicLocation is a pure-virtual super-class to the GeoJSON-aligned geometries of Point \n(addresses and locations), MultiPoint, LineString (streets, highways and boundaries), MultiLineString and \nPolygon (countries, provinces, tracts of land). Use the @type attribute to specify which of these is being \nspecified by the geometry attribute. \n@referredType \nA string. The actual type of the target instance when needed for \ndisambiguation. \nname \nA string. A user-friendly name for the place, such as [Paris Store], [London \nStore], [Main Home]. \nhref \nA string. Unique reference of the place. \n\n\nid \nA string. Unique identifier of the place. \n@baseType \nA string. When sub-classing, this defines the super-class. \n@schemaLocation \nAn uri (Uri). A URI to a JSON-Schema file that defines additional attributes \nand relationships. \n@type \nA string. The name of the GeoJSON structure used in the geometry attribute. \nGeographicSubAddress sub-resource \nRepresentation of a GeographicSubAddress  \nIt is used for addressing within a property in an urban area (country properties are often defined \ndifferently). It may refer to a building, a building cluster, or a floor of a multistory building. \nbuildingName \nA string. allows for buildings that have well-known names. \nhref \nA string. Link to the subAddress. \nid \nA string. Unique Identifier of the subAddress. \nlevelNumber \nA string. used where a level type may be repeated e.g. BASEMENT 1, \nBASEMENT 2. \nlevelType \nA string. describes level types within a building. \nname \nA string. Name of the subAddress to identify it with a meaningful \nidentification. \nprivateStreetName \nA string. private streets internal to a property (e.g. a university) may have \ninternal names that are not recorded by the land title office. \nprivateStreetNumber \nA string. private streets numbers internal to a private street. \nsubAddressType \nA string. Type of subAddress : it can be a subunit or a private street. \nsubUnitNumber \nA string. the discriminator used for the subunit \noften just a simple number e.g. FLAT 5, may also be a range. \nsubUnitType \nA string. the type of subunit \ne.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF. \nIndividualIdentification sub-resource \nRepresents our registration of information used as proof of identity by an individual (passport, national \nidentity card, drivers license, social security number, birth certificate). \nattachment \nAn attachment ref or value (AttachmentRefOrValue). An attachment by value \nor by reference. An attachment complements the description of an element, \nfor example through a document, a video, a picture. \nidentificationId \nA string. Identifier."}
{"tmforumApiId": "TMF691", "id": "TMF691-chunk-4", "chunkIndex": 4, "totalChunks": 5, "apiName": "Federated ID Management API v4.0.0 beta specification", "title": "TMF691_Federated_ID_Management_API_v4.0.0_beta_specification (Part 4/5)", "documentType": "Tmforum api user guide", "text": "identificationType \nA string. Identification type (passport, national identity card, drivers license, \nsocial security number, birth certificate). \nissuingAuthority \nA string. Authority which has issued the identifier, such as: social security, \ntown hall. \nissuingDate \nA date time (DateTime). Date at which the identifier was issued. \nvalidFor \nA time period. The period for which the identification information is valid. \nQuantity sub-resource \nAn amount in a given unit. \namount \nA float. Numeric value in a given unit. \nunits \nA string. Unit. \nUserAsset sub-resource \n \nassetType \nA string. Second level to define the type of managed element for \nproduct/service/resource managed entities (e.g.: mobile line subscription, \nvideo platform license, mobile equipment, etc). Allows identifying the specific \nasset within the server referenced. Supported values are implementation and \napplication specific. Other values can be added if those listed are not enough. \nentitlement \nA list of entitlements (Entitlement [*]). information about individual \nentitlements to define access levels to operate over different functions that \ncan be defined in an asset. \nentityType \nA string. Type of managed entity (e.g.: product, resource, service, customer, \naccount). \nid \nA string. Unique identifier of referenced entity within the entity/asset pair \n(customerId, accountId, mobile line number, ...). \nrole \nA string. Represents the part played by an individual in relation to being \ngranted a set of entitlements for manageable assets (e.g.: owner, user, viewer, \n...). \nJson representation sample \nWe provide below the json representation of an example of a 'Userinfo' resource object \n{ \n    \"address\": { \n        \"id\": \"1a2b3c\", \n        \"href\": \"https://host:port/location/geographicAddress/1a2b3c\", \n        \"streetNr\": \"1\", \n        \"streetName\": \"UnterDenLinden\", \n\"city\": \"Berlin\"\n\n\n        \"country\": \"Germany\", \n        \"postcode\": \"10117\", \n        \"@type\": \"GeographicAddress\", \n        \"geographicLocation\": { \n            \"id\": \"afuih78g\" \n        } \n    }, \n    \"birthdate\": \"1970-11-02\", \n    \"email\": \"jane.doe@email.com\", \n    \"email_verified\": true, \n    \"family_name\": \"Doe\", \n    \"gender\": \"female\", \n    \"given_name\": \"Jane\", \n    \"legalId\": [ \n        { \n            \"identificationType\": \"passport\", \n            \"identificationId\": \"51DD1234\", \n            \"issuingAuthority\": \"US Government\", \n            \"issuingDate\": \"2017-10-22T07:49:25.246Z\", \n            \"validFor\": { \n                \"startDateTime\": \"2017-10-22T07:49:25.246Z\", \n                \"endDateTime\": \"2027-10-21T07:49:25.246Z\" \n            }, \n            \"attachment\": [ \n                { \n                    \"attachmentType\": \"passportCopy\", \n                    \"isRef\": false, \n                    \"name\": \"PassportCopy321.pdf\", \n                    \"description\": \"Scanned copy of the passport\", \n                    \"mimeType\": \"application/pdf\", \n                    \"url\": \"http://DocumentManager/321/PassportCopy321.pdf\" \n                } \n            ] \n        } \n    ], \n    \"locale\": \"en\", \n    \"middle_name\": \"Mary\", \n    \"name\": \"Jane Mary Doe\", \n    \"nickname\": \"JaneDoe\", \n    \"phone_number\": \"+1 (425) 555-1212\", \n    \"phone_number_verified\": true, \n    \"picture\": \"https://some.url.com/janeDoe.jpg\", \n    \"preferred_username\": \"janeDoe\", \n    \"profile\": \"https://my.blog.com/janeDoe\", \n    \"sub\": \"a066ffd5-f685-43bc-ad57-bfb7639decb0\", \n    \"userAssets\": [ \n        { \n            \"id\": \"2289c5f7-7e14-41a5-a71d-5ba811618ad0\", \n            \"assetType\": \"landline\", \n            \"entityType\": \"service\", \n            \"role\": \"authorizedUser\", \n            \"entitlement\": [ \n                { \n                    \"action\": \"string\", \n                    \"function\": \"string\" \n                } \n            ], \n\"h\nf\" \"h\n//h\n/\nI f /\nA\n/2289 5f7 7 14 41 5 71d 5b 811618 d0\"\n\n\n            \"@schemaLocation\": \"https://mycsp.com:8080/tmf-api/schema/Common/UserAsser.schema.json\", \n            \"@type\": \"UserAsset\" \n        } \n    ], \n    \"website\": \"https://janedoe.com\", \n    \"zoneinfo\": \"America/Los_Angeles\", \n    \"id\": \"a066ffd5-f685-43bc-ad57-bfb7639decb0\", \n    \"href\": \"https://host:port/userInfo/a066ffd5-f685-43bc-ad57-bfb7639decb0\", \n    \"@schemaLocation\": \"https://mycsp.com:8080/tmf-api/schema/Common/UserInfo.schema.json\", \n    \"@type\": \"UserInfo\" \n} \n \nNotification Resource Models \n \n0 notifications are defined for this API \nThe notification structure for all notifications in this API follow the pattern depicted by the figure below. \nA notification event resource (depicted by \"SpecificEvent\" placeholder) is a sub class of a generic Event \nstructure containing at least an id of the event occurrence (eventId), an event timestamp (eventTime), \nand the name of the resource (eventType).  \nThis notification structure owns an event payload structure (\"SpecificEventPayload\" placeholder) linked \nto the resource concerned by the notification using the resource name as access field (\"resourceName\" \nplaceholder). \n\n\n \n \n \n\n\nAPI OPERATIONS \nRemember the following Uniform Contract: \nOperation on Entities \nUniform API Operation \nDescription \nQuery Entities \nGET Resource \nGET must be used to \nretrieve a representation \nof a resource. \n \nCreate Entity \nPOST Resource \nPOST must be used to \ncreate a new resource \nPartial Update of an \nEntity \nPATCH Resource \nPATCH must be used to \npartially update a resource \nComplete Update of an \nEntity \nPUT Resource \nPUT must be used to \ncompletely update a \nresource identified by its \nresource URI  \nRemove an Entity \nDELETE Resource \nDELETE must be used to \nremove a resource \nExecute an Action on an \nEntity  \nPOST on TASK Resource \nPOST must be used to \nexecute Task Resources \nOther Request Methods \nPOST on TASK Resource \nGET and POST must not be \nused to tunnel other \nrequest methods. \n \nFiltering and attribute selection rules are described in the TMF REST Design Guidelines. \nNotifications are also described in a subsequent section. \n \n \n \n\n\nOperations on Userinfo \nList userinfos \n  GET /userinfo?fields=...&{filtering} \nDescription \nThis operation list userinfo entities. \nAttribute selection is enabled for all first level attributes. \nFiltering may be available depending on the compliance level supported by an implementation. \nUsage Samples \nThis example details how userinfo is retrieved for a user. In this example a valid Authorization token \nmust be present in the header \n \nRequest \n \nGET /tmf-api/openid/v4/userinfo \nAccept: application/json \n \n \n \nResponse \n \n200 \n \n{ \n    \"address\": { \n        \"id\": \"1a2b3c\", \n        \"href\": \"https://host:port/location/geographicAddress/1a2b3c\", \n        \"streetNr\": \"1\", \n        \"streetName\": \"UnterDenLinden\", \n        \"city\": \"Berlin\", \n        \"country\": \"Germany\", \n        \"postcode\": \"10117\", \n        \"@type\": \"GeographicAddress\", \n        \"geographicLocation\": { \n            \"id\": \"afuih78g\" \n        } \n    }, \n    \"birthdate\": \"1970-11-02\", \n    \"email\": \"jane.doe@email.com\", \n    \"email_verified\": true, \n    \"family_name\": \"Doe\", \n    \"gender\": \"female\", \n    \"given_name\": \"Jane\", \n    \"legalId\": [ \n        { \n            \"identificationType\": \"passport\", \n            \"identificationId\": \"51DD1234\", \n            \"issuingAuthority\": \"US Government\","}
{"tmforumApiId": "TMF691", "id": "TMF691-chunk-5", "chunkIndex": 5, "totalChunks": 5, "apiName": "Federated ID Management API v4.0.0 beta specification", "title": "TMF691_Federated_ID_Management_API_v4.0.0_beta_specification (Part 5/5)", "documentType": "Tmforum api user guide", "text": "\"validFor\": { \n                \"startDateTime\": \"2017-10-22T07:49:25.246Z\", \n                \"endDateTime\": \"2027-10-21T07:49:25.246Z\" \n            }, \n            \"attachment\": [ \n                { \n                    \"attachmentType\": \"passportCopy\", \n                    \"isRef\": false, \n                    \"name\": \"PassportCopy321.pdf\", \n                    \"description\": \"Scanned copy of the passport\", \n                    \"mimeType\": \"application/pdf\", \n                    \"url\": \"http://DocumentManager/321/PassportCopy321.pdf\" \n                } \n            ] \n        } \n    ], \n    \"locale\": \"en\", \n    \"middle_name\": \"Mary\", \n    \"name\": \"Jane Mary Doe\", \n    \"nickname\": \"JaneDoe\", \n    \"phone_number\": \"+1 (425) 555-1212\", \n    \"phone_number_verified\": true, \n    \"picture\": \"https://some.url.com/janeDoe.jpg\", \n    \"preferred_username\": \"janeDoe\", \n    \"profile\": \"https://my.blog.com/janeDoe\", \n    \"sub\": \"a066ffd5-f685-43bc-ad57-bfb7639decb0\", \n    \"userAssets\": [ \n        { \n            \"id\": \"2289c5f7-7e14-41a5-a71d-5ba811618ad0\", \n            \"assetType\": \"landline\", \n            \"entityType\": \"service\", \n            \"role\": \"authorizedUser\", \n            \"entitlement\": [ \n                { \n                    \"action\": \"string\", \n                    \"function\": \"string\" \n                } \n            ], \n            \"@baseType\": \"UserAsset\", \n            \"href\": \"https://host:port/userInfo/userAssets/2289c5f7-7e14-41a5-a71d-5ba811618ad0\", \n            \"@schemaLocation\": \"https://mycsp.com:8080/tmf-api/schema/Common/UserAsser.schema.json\", \n            \"@type\": \"UserAsset\" \n        } \n    ], \n    \"website\": \"https://janedoe.com\", \n    \"zoneinfo\": \"America/Los_Angeles\", \n    \"id\": \"a066ffd5-f685-43bc-ad57-bfb7639decb0\", \n    \"href\": \"https://host:port/userInfo/a066ffd5-f685-43bc-ad57-bfb7639decb0\", \n    \"@schemaLocation\": \"https://mycsp.com:8080/tmf-api/schema/Common/UserInfo.schema.json\", \n    \"@type\": \"UserInfo\" \n} \n \n \n \n \n\n\nRetrieve userinfo \n  GET /userinfo/{id}?fields=...&{filtering} \nDescription \nThis operation retrieves an userinfo entity. \nAttribute selection is enabled for all first level attributes. \nFiltering on sub-resources may be available depending on the compliance level supported by an \nimplementation. \nUsage Samples \nThe Userinfo entity is not a list and therefore there is no operation to retrive userinfo by ID. Userinfo is \nretrieved for the user specified in the header token. \n \nRequest \n \nGET /tmf-api/openid/v4/userinfo/42 \nAccept: application/json \n \n \n \nResponse \n \n200 \n \n{ \n    \"address\": { \n        \"id\": \"1a2b3c\", \n        \"href\": \"https://host:port/location/geographicAddress/1a2b3c\", \n        \"streetNr\": \"1\", \n        \"streetName\": \"UnterDenLinden\", \n        \"city\": \"Berlin\", \n        \"country\": \"Germany\", \n        \"postcode\": \"10117\", \n        \"@type\": \"GeographicAddress\", \n        \"geographicLocation\": { \n            \"id\": \"afuih78g\" \n        } \n    }, \n    \"birthdate\": \"1970-11-02\", \n    \"email\": \"jane.doe@email.com\", \n    \"email_verified\": true, \n    \"family_name\": \"Doe\", \n    \"gender\": \"female\", \n    \"given_name\": \"Jane\", \n    \"legalId\": [ \n        { \n            \"identificationType\": \"passport\", \n            \"identificationId\": \"51DD1234\", \n            \"issuingAuthority\": \"US Government\", \n            \"issuingDate\": \"2017-10-22T07:49:25.246Z\", \n\"validFor\": {\n\n\n                \"startDateTime\": \"2017-10-22T07:49:25.246Z\", \n                \"endDateTime\": \"2027-10-21T07:49:25.246Z\" \n            }, \n            \"attachment\": [ \n                { \n                    \"attachmentType\": \"passportCopy\", \n                    \"isRef\": false, \n                    \"name\": \"PassportCopy321.pdf\", \n                    \"description\": \"Scanned copy of the passport\", \n                    \"mimeType\": \"application/pdf\", \n                    \"url\": \"http://DocumentManager/321/PassportCopy321.pdf\" \n                } \n            ] \n        } \n    ], \n    \"locale\": \"en\", \n    \"middle_name\": \"Mary\", \n    \"name\": \"Jane Mary Doe\", \n    \"nickname\": \"JaneDoe\", \n    \"phone_number\": \"+1 (425) 555-1212\", \n    \"phone_number_verified\": true, \n    \"picture\": \"https://some.url.com/janeDoe.jpg\", \n    \"preferred_username\": \"janeDoe\", \n    \"profile\": \"https://my.blog.com/janeDoe\", \n    \"sub\": \"a066ffd5-f685-43bc-ad57-bfb7639decb0\", \n    \"userAssets\": [ \n        { \n            \"id\": \"2289c5f7-7e14-41a5-a71d-5ba811618ad0\", \n            \"assetType\": \"landline\", \n            \"entityType\": \"service\", \n            \"role\": \"authorizedUser\", \n            \"entitlement\": [ \n                { \n                    \"action\": \"string\", \n                    \"function\": \"string\" \n                } \n            ], \n            \"@baseType\": \"UserAsset\", \n            \"href\": \"https://host:port/userInfo/userAssets/2289c5f7-7e14-41a5-a71d-5ba811618ad0\", \n            \"@schemaLocation\": \"https://mycsp.com:8080/tmf-api/schema/Common/UserAsser.schema.json\", \n            \"@type\": \"UserAsset\" \n        } \n    ], \n    \"website\": \"https://janedoe.com\", \n    \"zoneinfo\": \"America/Los_Angeles\", \n    \"id\": \"a066ffd5-f685-43bc-ad57-bfb7639decb0\", \n    \"href\": \"https://host:port/userInfo/a066ffd5-f685-43bc-ad57-bfb7639decb0\", \n    \"@schemaLocation\": \"https://mycsp.com:8080/tmf-api/schema/Common/UserInfo.schema.json\", \n    \"@type\": \"UserInfo\" \n} \n \n \n \n \n\n\nAcknowledgements \n \nVersion History \n \nVersion \nNumber \nDate  \nRelease led by: \nDescription  \n1.01 \n03-Jul-2018 \nLuis Velarde \n(Telef\u00f3nica) \nFirst Release of Draft Version of the \nDocument. \n1.0.2 \n29-Jun-2018 \nAdrienne Walcott \nFormatting/style edits prior to R18 \npublishing. \n1.0.3 \n10-Sep-2018 \nAdrienne Walcott \nUpdated to reflect TM Forum \nApproved Status \n4.0.0 \n28-May-2020 \nAlan Pope \nAlignment with Guidelines 4.0 \n \nRelease History \n \nRelease \nNumber \nDate  \nRelease led by: \nDescription  \n18.0.0 \n03-Jul-2018 \nLuis Velarde (Telef\u00f3nica) \nInitial Release \n18.0.1 \n10-Sep-2018 \nAdrienne Walcott \nUpdated to reflect TM Forum \nApproved Status \nPre-production  28-May-2020 \nAlan Pope \nAlignment with Guidelines 4.0"}
