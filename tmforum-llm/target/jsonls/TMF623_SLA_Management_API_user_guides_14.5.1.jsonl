{"tmforumApiId": "TMF623", "id": "TMF623-chunk-1", "chunkIndex": 1, "totalChunks": 7, "apiName": "SLA Management API user guides 14.5.1", "title": "TMF623_SLA_Management_API_user_guides_14.5.1 (Part 1/7)", "documentType": "Tmforum api user guide", "text": "Frameworx Specification \n \nSLA Management API REST \nSpecification \n \n \n \n \n \n      TMF623 \n      Release 14.5.1 \n      June 2015 \n \n \n \nLatest Update: Frameworx Release 14.5 \nTM Forum Approved \nVersion 1.0.1 \nIPR Mode: RAND \n\n\n \nNOTICE \n \nCopyright \u00a9 TM Forum 2015. All Rights Reserved. \n \n \n \nThis document and translations of it may be copied and furnished to others, and derivative works that \ncomment on or otherwise explain it or assist in its implementation may be prepared, copied, published, and \ndistributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and \nthis section are included on all such copies and derivative works. However, this document itself may not be \nmodified in any way, including by removing the copyright notice or references to TM FORUM, except as \nneeded for the purpose of developing any document or deliverable produced by a TM FORUM Collaboration \nProject Team (in which case the rules applicable to copyrights, as set forth in the TM FORUM IPR Policy, \nmust be followed) or as required to translate it into languages other than English.  \n \n \n \n \n \nThe limited permissions granted above are perpetual and will not be revoked by TM FORUM or its \nsuccessors or assigns.  \n \n \n \nThis document and the information contained herein is provided on an \"AS IS\" basis and TM FORUM \nDISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY \nWARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP \nRIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR \nPURPOSE.  \n \nTM FORUM invites any TM FORUM Member or any other party that believes it has patent claims that would \nnecessarily be infringed by implementations of this TM Forum Standards Final Deliverable, to notify the TM \nFORUM Team Administrator and provide an indication of its willingness to grant patent licenses to such \npatent claims in a manner consistent with the IPR Mode of the TM FORUM Collaboration Project Team that \nproduced this deliverable. \n  \nThe TM FORUM invites any party to contact the TM FORUM Team Administrator if it is aware of a claim of \nownership of any patent claims that would necessarily be infringed by implementations of this TM FORUM \nStandards Final Deliverable by a patent holder that is not willing to provide a license to such patent claims in \na manner consistent with the IPR Mode of the TM FORUM Collaboration Project Team that produced this TM \nFORUM Standards Final Deliverable. TM FORUM may include such claims on its website, but disclaims any \nobligation to do so. \n \nTM FORUM takes no position regarding the validity or scope of any intellectual property or other rights that \nmight be claimed to pertain to the implementation or use of the technology described in this TM FORUM \nStandards Final Deliverable or the extent to which any license under such rights might or might not be \navailable; neither does it represent that it has made any effort to identify any such rights. Information on TM \nFORUM's procedures with respect to rights in any document or deliverable produced by a TM FORUM \nCollaboration Project Team can be found on the TM FORUM website. Copies of claims of rights made \navailable for publication and any assurances of licenses to be made available, or the result of an attempt \nmade to obtain a general license or permission for the use of such proprietary rights by implementers or users \nof this TM FORUM Standards Final Deliverable, can be obtained from the TM FORUM Team Administrator. \nTM FORUM makes no representation that any information or list of intellectual property rights will at any time \nbe complete, or that any claims in such list are, in fact, Essential Claims. \n\n\n \n \nDirect inquiries to the TM Forum office:  \n  \n240 Headquarters Plaza, \nEast Tower \u2013 10th Floor, \nMorristown, NJ  07960 USA \nTel No.  +1 973 944 5100 \nFax No.  +1 973 944 5110 \nTM Forum Web Page: www.tmforum.org.  \n \n\n\n \nTABLE OF CONTENTS \nNOTICE............................................................................................................................................................ 2 \nTable of Contents ............................................................................................................................................. 4 \nList of Tables .................................................................................................................................................... 6 \nIntroduction ...................................................................................................................................................... 7 \nSAMPLE USE CASES ..................................................................................................................................... 9 \nRESOURCE MODEL ..................................................................................................................................... 10 \nService Level Agreement \u201cSLA\u201d Resource ..................................................................................................................... 10 \nField description .............................................................................................................................................................. 12 \nService Level Agreement \u201cSLA\u201d States .......................................................................................................................... 13 \nSLA resource model ....................................................................................................................................................... 14 \nSLAViolation Resource ................................................................................................................................................... 14 \nField description .............................................................................................................................................................. 16 \nSLAViolation resource model UML ................................................................................................................ 18 \nEvent Model ................................................................................................................................................... 19 \nSLA Violation Create Notification ................................................................................................................................ 19 \nSLA OPERATIONS ........................................................................................................................................ 21 \nGET API/SLA/{ID} ........................................................................................................................................................... 22 \nPUT API/SLA/{ID} ........................................................................................................................................................... 23 \nPATCH API/SLA/{ID} ...................................................................................................................................................... 24 \nPOST API/SLA/{ID} ......................................................................................................................................................... 26 \nDELETE API/SLA/{ID} .................................................................................................................................................... 29 \nSLAVIOLATION OPERATIONS .................................................................................................................... 30 \nGET API / SLAVIOLATION / {ID} .................................................................................................................................... 31 \nPUT API/ SLAVIOLATION /{ID} ...................................................................................................................................... 31 \nPATCH API/ SLAVIOLATION /{ID} ................................................................................................................................. 32"}
{"tmforumApiId": "TMF623", "id": "TMF623-chunk-2", "chunkIndex": 2, "totalChunks": 7, "apiName": "SLA Management API user guides 14.5.1", "title": "TMF623_SLA_Management_API_user_guides_14.5.1 (Part 2/7)", "documentType": "Tmforum api user guide", "text": "POST API/ SLAVIOLATION /{ID} ................................................................................................................................... 33 \nDELETE API/ SLAVIOLATION /{ID} ............................................................................................................................... 35 \nSLA NOTIFICATIOnS .................................................................................................................................... 37 \nREGISTER LISTENER   POST /hub .............................................................................................................................. 37 \nUNREGISTER LISTENER DELETE hub/{id} ................................................................................................................. 37 \npublish {EventTYPE} POST /listener .............................................................................................................................. 38 \nSLAVIOLATION  NOTIFICATIONS ............................................................................................................... 40 \nREGISTER LISTENER   POST /hub .............................................................................................................................. 40 \nUNREGISTER LISTENER DELETE hub/{id} ................................................................................................................. 40 \npublish {EventTYPE} POST /listener .............................................................................................................................. 41 \nRelease History ............................................................................................................................................................... 42 \nContributors to Document ............................................................................................................................................... 42 \n \n\n\n \nLIST OF TABLES \n \nN/A \n \n\n\n \nINTRODUCTION \nThe following document is the specification of the REST API for the SLA and SLA Violation resources. It includes the \nmodel definition as well as all available operations. Possible actions are creating and retrieving a SLA or SLA Violation, \nupdating the whole SLA or only do a patch update. Furthermore the HTTP GET allows filtering. \nThe SLA API provides a standardized interface for SLA life cycle Management (SLA Negotiation, SLA configuration, SLA \nActivation/enforcement, SLA Operations, SLA violation / consequence handling, SLA reporting) between a Customer and  a \nService Provider which provides offers (product with attached SLA in its catalogue) the customer can discover, browse, trigger \nand order. \nIt will be also useful in a multi-partner environment where exchanging SLA is needed in order to allow rapid and efficient SLA life \ncycle management across a partner\u2019s environment. From SLA perspective, duties and rights are assigned to each actor & \nassociated roles mainly in the case where a service is composed of various components brought by different partners within \nfederation or / and syndication models. \nSLA Management API manages the following resources: \n- \nService Level  Agreement (SLA)  \no \nPart of a business agreement between a Service Provider and a Customer, quantitatively specifying the \nservice performance level the Service Provider commits to deliver. Other actors & roles can be involved \nsuch as SLA Auditor or SLA Integrator. SLA includes rules or Service Level Specifications (SLA \nParameters, Metrics and Thresholds), as well as a description of measuring, reporting and violation \nhandling processes. For the purpose of the specification, it can be expressed in terms of validity of \nperiod, related parties, and rules (metrics, reference value, tolerance, consequence \u2026). \no \nFrom the Customer perspective, this means that the end Customer provides Quality of Service requirements \nassociated to its business applications to a Service Provider. The two parties negotiate the specific set of SLA \nparameters and parameter values that best serves them. \no \nFrom the Service Provider perspective, each offered product or service can be provided with a standard \nProduct SLA. \n- \nSLA Violation \no \nIt represents any SLA failures observed through a metric threshold crossing restricted to what has been \nagreed in the SLAs for the given service (consequences, penalties, remedies...). SLA Violation is \ncomposed of Metrics, reported date, period,. The Related Parties are represented in the same way as \nfor \u201cSLA\u201d resource. This practical and operational view allows the related parties to react and perform an \nimmediate and direct analysis of potential impacts of the violation. \no \nThere is also an \u201cAttachment\u201d which represents statistics, a dashboard or reporting data to be presented \nto the target parties, for deeper analysis purpose. \n \n \n \n\n\n \nSLA API performs the following operations on Service Level Agreement: \n- \nRetrieval  \no \nall SLAs (with \u201cSLA Provider\u201d, \u201cSLA Customer\u201d or \u201cEnd User\u201d role) \no \nSLAs based on template \no \nSLAs with specified ID \u2013 only one SLA is returned \n- \nCreation of a SLA (planned) \n- \nFull update of a SLA (planned) \n- \nPartial update of a SLA (planned) \n- \nCreation of a SLA violation  (planned) \n- \nRetrieval of a  SLA violation \n- \nNotification of SLA Violation Creation \n \n\n\n \nSAMPLE USE CASES \nReader will find examples of use cases using SLA management API in \u201cOpen Digital Business Scenarios and Use \nCases\u201d document."}
{"tmforumApiId": "TMF623", "id": "TMF623-chunk-3", "chunkIndex": 3, "totalChunks": 7, "apiName": "SLA Management API user guides 14.5.1", "title": "TMF623_SLA_Management_API_user_guides_14.5.1 (Part 3/7)", "documentType": "Tmforum api user guide", "text": "RESOURCE MODEL \nThis specification involves two resources: Service Level Agreement \u201cSLA\u201d and \u201cSLA Violation\u201d \nService Level Agreement \u201cSLA\u201d Resource \na) Description \nThis Service Level Agreement \u201cSLA\u201d Resource Model aims at illustrating the way to translating \u201cSLA \nResource Model\u201d in JSON representation, reflecting the resource aspect described in the \u201cSLA API \nProfile\u201d (Management Requirements) document V0.2. Service Level Agreement (SLA) Resource \nModel and associate attributes are aligned with those described in SID Service Level Agreement \nmodeling. Meaning no Resources are imported from other sources.  Besides, the entities are \nrepresented in terms of roles, each with its rights & duties covering Multi-partner model illustrating \nB2BX model (SLA Provider, SLA Consumer, SLA Auditor, EndUser roles). In this model, \u201cSLA \nProvider\u201d is referring to a CSP while \u201cSLA Consumer\u201d is referring to a DSP. The \u201cEndUser\u201d is \nreferring to the customer of the DSP, in some cases he could be a customer of both (CSP and \nDSP). \u201cSLA Auditor\u201d role is to monitor SLA as described in TR178V2. It could be played either by the \nCSP himself or delegated to a 3rd party. The \u201cAgreed\u201d or \u201cApproved SLA\u201d is described in terms of  \nSLA rules which contains the Metrics, their related values or range, thresholds, valid period or date, \nconsequences in case of violation of any clause of the SLA. It is also assumed all Metrics are the \nexisting ones which are stored in the Service Provider \u201cMetrics Library\u201d with their attached \nreferences. Besides, each metric is attached to a given Product in the Catalogue with a dedicated \nreference e.g. \u201dURL\u201d. The Service Level Agreement \u201cSLA\u201d resource model is also characterized by \nits \u201cvalidity period\u201d. This use case covers the situation where the validity period is pre-determined \n(planned) which excludes the case of Time-variant SLA that could be attached to a \u201cSLA on-\nDemand\u201d use case. The latter could be considered in another release for specific use cases (Cloud, \nvirtualization) for instance. \nIn order to optimize the SLA resource,  there is a need for defining a common pattern or Template \n\u201crule\u201d. This pattern is structured as following: the Id of the metric, its name, the measurement unit \nattached to the considered metric, its reference value, the tolerance value when the threshold is \ncrossed and the consequence in case of violation. Regarding the financial-related aspect and \npenalties associated to a consequence, a pointer is simply mentioned to the Service Level \nAgreement \u201cSLA\u201d contract.   \nb) Example of the JSON representation of an Service Level Agreement \u201cSLA\u201d resource  \n{ \n \n\"id\": \"123444\", \n \n\"href\": \"http/www.acme.com/SlaManagement/sla/123444\", \n\n\n \n \n\"name\": \"HighSpeedDataSLA\", \n \n\"description\": \"SLA for high speed data.\", \n \n\"version\": \"0.1\", \n \n\"validFor\":  \n \n{ \n \n \n\"startDateTime\": \"2013-04-19T16:42:23.0Z\", \n \n \n\"endDateTime\": \"2013-04-21T09:43:54.0Z\" \n \n}, \n \n \n\"relatedParty\":  \n \n[ \n \n \n{ \n \n \n \n\"href\": \"http://\", \n \n \n \n\"role\": \"SLAProvider\" \n \n \n}, \n \n \n \n{ \n \n \n \n\"href\": \"http://\", \n \n \n \n\"role\": \"SLAConsumer\" \n \n \n}, \n \n \n \n{ \n \n \n \n\"href\": \"http://\", \n \n \n \n\"role\": \"SLAAuditor\" \n \n \n}, \n \n \n \n{ \n \n \n \n\"href\": \"http://\", \n \n \n \n\"role\": \"SLABusinessBroker\" \n \n \n}, \n \n \n \n{ \n \n \n \n\"href\": \"http://\", \n \n \n \n\"role\": \"SLATechnicalBroker\" \n \n \n}, \n \n \n \n{ \n \n \n \n\"href\": \"http://\", \n \n \n \n\"role\": \"ThirdPartySLAManager\" \n \n \n}, \n \n \n \n{ \n \n \n \n\"href\": \"http://\", \n \n \n \n\"role\": \"EndUser\" \n \n \n} \n \n], \n \n \n\"rule\":  \n \n[ \n \n \n{ \n \n \n \n\"id\": \"availability\", \n \n \n \n\"metric\": \"http://IEEE99.5/Availability\", \n\n\n \n \n \n \n\"unit\": \"string\", \n \n \n \n\"referenceValue\": \"available\", \n \n \n \n\"operator\": \".eq\", \n \n \n \n\"tolerance\": \"0.05\", \n \n \n \n\"consequence\": \"http://ww.acme.com/contract/clause/42\" \n \n \n}, \n \n \n \n{ \n \n \n \n\"id\": \"downstream_GBR\", \n \n \n \n\"metric\": \"http://IEEE99.5/Data/bitrates/GBR/down\", \n \n \n \n\"unit\": \"kbps\", \n \n \n \n\"referenceValue\": \"1024\", \n \n \n \n\"operator\": \".ge\", \n \n \n \n\"tolerance\": \"0.20\", \n \n \n \n\"consequence\": \"http://ww.acme.com/contract/clause/45\" \n \n \n} \n \n], \n \n \n\"template\":  \n \n{ \n \n \n\"href\": \"http/www.acme.com/slaManagement/slaTemplate/42\", \n \n \n\"name\": \"DataSLATemplate\", \n \n \n\"description\": \"basic template for Data SLA\" \n \n} \n} \nField description \nField \nDescription \nid \nUnique identifier of the Service level Agreement (SLA) \nname \nName of the Service level Agreement (SLA) \ndescription \nDescription of the Service level Agreement (SLA) \nversion \nVersion of the Service level Agreement (SLA) \nvalidityPeriod \nPeriod where the clauses of the SLA are applicable \n     startTime \nDate/Time of the beginning of the validityPeriod \n     endTime \nDate/Time of the end of the validityPeriod \ntemplate \nSLA Template characteristics \n       href \nReference of the Template \n       name \nName of the template  \n       description \nDescription of the template \nrelatedParty \nParties engaged in the SLA (SLA provider, SLA consumer, \u2026) \nRole \nRole attached to each party (SLA provider, SLA consumer, \u2026) \nhref \nReference of the party \nstate \nService Level Agreement state \napproved \nIndicates if the service level agreement is approved or not (True or false) \nrule \nCommon pattern or Template for the SLA parameters, metrics, and thresholds   \nid \nUnique identifier of the metric \nmetric \nReference of metric stored in the Service Provider \u201cMetrics Library\u201d \nunit \nUnit of measure of metric \nreferenceValue \nReference value of metric \noperator \nOperator used when calculating the rule \n\n\n \ntolerance \nAllowable variation of metric \nconsequence \ndefines the action to be applied as a result of a threshold crossing \nService Level Agreement \u201cSLA\u201d States  \nRegarding \u201cSLA States\u201d, the source considered is \u201cWS-Agreement\u201d diagram (state graphic) from \nwhich the allowed status changes as recommended in the \u201cSLA Profile\u201d document (section 4) when \napplicable.  \nFor instance, it is assumed that the processes that are linked to the \u201cNegotiation Phase\u201d of the SLA \nManagement lifecycle such as SLA \u201cApproval\u201d, \u201cTerms or Conditions\u201d and \u201cConsequence\u201d are in the \nstatus of \u201ccompleted\u201d. That means, only one state \u201cObserved\u201d is considered which supposes the \nSLA is approved and accepted by the related Parties."}
{"tmforumApiId": "TMF623", "id": "TMF623-chunk-4", "chunkIndex": 4, "totalChunks": 7, "apiName": "SLA Management API user guides 14.5.1", "title": "TMF623_SLA_Management_API_user_guides_14.5.1 (Part 4/7)", "documentType": "Tmforum api user guide", "text": "SLA resource model \n \nSLAViolation Resource \n \na) SLA Violation  resource description \nThis \u201cSLAViolation\u201d is the second resource considered in this translation into JSON representation. \nThe same representation used for \u201cSLA\u201d resource is applied and is aligned with the SID modeling as \nwell.  \nIt is assumed all Metrics are the ones already stored in the Service Provider \u201cMetrics Library\u201d with \ntheir attached references and associated with products on-boarded in the Catalogue.  \nThe \u201cviolation\u201d is defined in terms of ID, description (Metrics, reported date, period). Besides, the \nRelatedParty such as SLA Provider (CSP), SLA Consumer (DSP) and SLA Auditor (for SLA \nmonitoring) is represented in the same way as   for Service Level Agreement \u201cSLA\u201d resource. The \nsame goes for \u201cEndUser\u201d role. Two levels of event representation could be useful to introduce:  \nServiceLevelAgreement\n- \nid  :String\n- \nhref  :String\n- \nname  :String\n- \ndescription  :String\n- \nversion  :String\n- \nvalidFor  :TimePeriod\n- \nstate  :String\n- \napproved  :Boolean\n- \napprovalDate  :DateTime\nTemplateRef\n- \nhref  :String\n- \nname  :String\n- \ndescription  :String\nRelatedPartyRef\n- \nhref  :String\n- \nrole  :String\n- \nname  :String\n- \nvalidFor  :TimePeriod\nRule\n- \nid  :String\n- \nmetric  :String\n- \nunit  :String\n- \nreferenceValue  :String\n- \noperator  :String\n- \ntolerance  :String\n- \nconsequence  :String\n+template\n1\nSLAHasTemplate\n1\n+relatedParty\n0..*\nSLAHasRelatedParty\n1\n+rule\n0..*\nSLAHasRule\n1\n\n\n \n\uf0b7 an immediate view of the event result impact. This practical and operational view allows the \nRelated Party to react and perform an immediate and direct analysis of potential impacts of \nthe violation. \n* The \u201cattachment\u201d is associated with the event and represents statistics, a dashboard or reporting \ndata to be presented to the target Related Party, DSP (SLA Consumer) or / and to CSP (SLA \nProvider) for deeper analysis purpose. \n \nb) Example of the JSON representation of an SLAViolation \n{ \n \n\"id\": \"7467\", \n \n\"href\": \"http/www.acme.com/slaManagement/slaViolation/123444\", \n \n\"relatedParty\":  \n \n[ \n \n \n{ \n \n \n \n\"href\": \"http://\", \n \n \n \n\"role\": \"SLAProvider\" \n \n \n}, \n \n \n \n{ \n \n \n \n\"href\": \"http://\", \n \n \n \n\"role\": \"SLAConsumer\" \n \n \n}, \n \n \n \n{ \n \n \n \n\"href\": \"http://\", \n \n \n \n\"role\": \"SLAAuditor\" \n \n \n}, \n \n \n \n{ \n \n \n \n\"href\": \"http://\", \n \n \n \n\"role\": \"SLABusinessBroker\" \n \n \n}, \n \n \n \n{ \n \n \n \n\"href\": \"http://\", \n \n \n \n\"role\": \"SLATechnicalBroker\" \n \n \n}, \n \n \n \n{ \n \n \n \n\"href\": \"http://\", \n \n \n \n\"role\": \"ThirdPartySLAManager\" \n \n \n}, \n \n \n \n{ \n \n \n \n\"href\": \"http://\", \n\n\n \n \n \n \n\"role\": \"EndUser\" \n \n \n} \n \n], \n \n \n\"sla\":  \n \n{ \n \n \n\"href\": \"http/www.acme.com/slaManagement/sla/123444\", \n \n \n\"description\": \"sla of premium video\" \n \n}, \n \n \n\"violation\":  \n \n{ \n \n \n\"unit\": \"string\", \n \n \n\"referenceValue\": \"available\", \n \n \n\"operator\": \".eq\", \n \n \n\"actualValue\": \"available\", \n \n \n\"tolerance\": \"0.05\", \n \n \n\"violationAverage\": \"0.1\", \n \n \n\"comment\": \"Availability below agreed level.\", \n \n \n\"consequence\": \"http://ww.acme.com/contract/clause/42\", \n \n \n\"attachment\":  \n \n \n{ \n \n \n \n\"href\": \"https://foo.bar/screenshot.123\", \n \n \n \n\"description\": \"availability statistics for August 2013\" \n \n \n}, \n \n \n \n\"rule\":  \n \n \n{ \n \n \n \n\"href\": \"http/www.zak.com/slaManagement/sla/123444/rules/availability\", \n \n \n \n\"description\": \"availability\" \n \n \n} \n \n} \n} \nField description \nField \nDescription \nid \nThe id of the resource model (SLAViolation) \nSLA \n \ndescription \nDescription of the Service level Agreement (SLA) \nhref \nReference of the Service Level Agreement \nRelatedParty \nParty engaged in the SLA (SLA provider, SLA consumer, \u2026) \nrole \nRole attached to each party (SLA provider, SLA consumer, \u2026) \nhref \nReference of the party \nViolation \nA discrepancy identified by applying rules to Service Level Agreement related entities. \nrule \nThe rule represents the value of the threshold of the metric. Once crossed it triggers a \nviolation. \ndescription \nDescription of the rule \nhref \nReference of the rule \nunit \nUnit of measure of metric \nreferenceValue \nReference value of metric \n\n\n \noperator \nOperator used when calculating the rule \nactualValue \nActual value of the metric \ntolerance \nAllowable variation of metric \nviolationAverage \nTBD \nComment \nComment about violation \nconsequence \ndefines the action to be applied as a result of a threshold crossing \nattachment \nrepresents statistics, a dashboard or reporting data to be presented to the target \nparties \ndescription \nDescription of the attachment \nhref \nReference of the attachment \n\n\n \nSLAVIOLATION RESOURCE MODEL UML \n \nFigure 2 \u2013 SLAViolation resource model \n \nSLAViolation\n- \nid  :String\n- \nhref  :String\n- \ndate  :DateTime\nRelatedPartyRef\n- \nhref  :String\n- \nrole  :String\n- \nname  :String\n- \nvalidFor  :TimePeriod\nSLARef\n- \nhref  :String\n- \ndescription  :String\nViolation\n- \nunit  :String\n- \nreferenceValue  :String\n- \noperator  :String\n- \nactualValue  :String\n- \ntolerance  :String\n- \nviolationAverage  :String\n- \ncomment  :String\n- \nconsequence  :String\nRuleRef\n- \nhref  :String\n- \ndescription  :String\nAttachmentRef\n- \nhref  :String\n- \ndescription  :String\n+violation\n1\nSLAViolationHasViolation\n1\n+sla\n1\nSLAViolationConcernsSLA\n1\n+relatedParty\n0..*\nSLAViolationHasRelatedParty\n1\n+rule\n1\nViolationHasRule\n1\n+attachment\n1\nViolationHasAttachment\n1\n\n\n \nEVENT MODEL \nSLA VIOLATION CREATE NOTIFICATION \nThis event is generated whenever a SLAViolation resource is created. In addition to the occurrence \ndate, it contains the created SLAViolation. \nUML Model: \n \na) Example of the JSON representation of an SLAViolationCreation event \n{ \n \n\"eventType\": \"SLAViolationCreateNotification\", \n \n\"eventTime\": \"2014-09-27T05:46:25.0Z\", \n \n\"eventId\": \"430958\", \n \n\"event\":  \n \n{ \nNotification\n- \neventType  :String\n- \neventTime  :DateTime\n- \neventId  :String\nSLAViolationCreateNotification\nSLAViolationEvent\nSLAViolation\n+slaViolation\n1\nSLAViolationEventConcernsSLAViolation\n1\n+event\n1\nSLAViolationCreateEvent\n1\n\n\n \n \n \n\"slaViolation\":  \n \n \n{ \n \n \n \n\"id\": \"89045\", \n            Following a whole representation of the SLA Violation with all its attributes  \n            See SLA Violation Resource. \n \n \n} \n \n} \n} \n \nField \nDescription \neventTime \nDate/time when the event was generated (may be posterior to SLAViolation creation date) \nSLAViolation \nThe created SLAViolation resource \neventType \nType of the event. Must be \"SLAViolationCreateNotification\""}
{"tmforumApiId": "TMF623", "id": "TMF623-chunk-5", "chunkIndex": 5, "totalChunks": 7, "apiName": "SLA Management API user guides 14.5.1", "title": "TMF623_SLA_Management_API_user_guides_14.5.1 (Part 5/7)", "documentType": "Tmforum api user guide", "text": "SLA OPERATIONS \nFor every single of operation on the entities use the following templates and provide sample REST \nrequests and responses.  \nRemember that the following Uniform Contract rules must be used : \nOperation on Entities \nUniform API Operation \nDescription \nQuery Entities \nGET Resource \nGET must be used to \nretrieve a representation of \na resource. \n \nCreate Entity \nPOST Resource \nPOST must be used to \ncreate a new resource \nPartial Update of an Entity \nPATCH Resource \nPATCH must be used to \npartially update a resource \nComplete Update of an \nEntity \nPUT Resource \nPUT must be used to \ncompletely update a \nresource identified by its \nresource URI  \nRemove an Entity \nDELETE Resource \nDELETE must be used to \nremove a resource \nExecute an Action on an \nEntity  \nPOST on TASK Resource \nPOST must be used to \nexecute Task Resources \nOther Request Methods \nPOST on TASK Resource \nGET and POST must not \nbe used to tunnel other \nrequest methods. \nFiltering and attribute selection rules are described in the TMF REST Design Guidelines. \n\n\n \nNotifications are also described in a subsequent section. \nGET API/SLA/{ID} \nThis Uniform Contract operation is used to retrieve the representation of a managed entity or a task. \nNote that collections can be retrieved via GET API/SLA with no {ID} \nDescription :  \n\uf0b7 Provide an overall description of the Operation \n\uf0b7 Describe the returned representation of the <resource> instance(s). \n\uf0b7 Describe if filtering is enabled and what can be done using query parameters.  \n\uf0b7 Describe if attribute selection is enabled. \n\uf0b7 Describe if the resource represents a managed entity, a collection or a task. \n\uf0b7 Describe the structure of the identifier. \nBehavior :  \n\uf0b7 What status and exception codes are returned. \n\uf0b7 Returns HTTP/1.1 status code 200 if the request was successful. \n\uf0b7 Any other special return and/or exception codes. \n\uf0b7 Specify what level of attribute filtering can be used. In fact we mandate L0 (equality) filtering \nin every specification as per REST Guidelines. Add this to Template. \nREQUEST \nGET /api/sla \nAccept: application/json \nRESPONSE \n200 \nContent-Type: application/json \n \n{\"sla\": [ \n \nJSON Resource Representation with every attributes }] \n} \n \nRetrieving all SLAs \u2013 returns an array/ a list of SLAs: \n\n\n \n\uf0b7 GET /api/sla \nRetrieving all SLAs where \u2018http://..//acme.com\u2019 is involved with \u201cSLAProvider\u201d role: \n\uf0b7 GET /api/sla? \u2026. \nRetrieving all SLAs where \u2018http://\u2026//mycompany.com\u2019 is involved with \u201cSLAConsumer\u201d role: \n\uf0b7 GET /api/sla? \u2026. \nRetrieving all SLAs where \u2018http://\u2026//John.Doe\u2019 is involved with \u201cEndUser\u201d role: \n\uf0b7 GET /api/sla? \u2026. \nRetrieving all SLAs based on template \u2018\"http/www.acme.com/slaManagement/slaTemplate/42\": \n\uf0b7 GET /api/sla? \u2026. \nRetrieve sla with specified ID \u2013 only one SLA is returned: \n\uf0b7 GET /api/sla/1 \nPUT API/SLA/{ID} \nThis Uniform Contract operation is used to completely update the representation of a managed \nentity or a task. \nDescription :  \n\uf0b7 Provide an overall description of the Operation \n\uf0b7 Describe the input  representation of the <resource> instance. \n\uf0b7 Describe if the resource represents a managed entity or a task. \n\uf0b7 Describe the structure of the identifier. \nBehavior :  \n\uf0b7 What status and exception codes are returned. \n\uf0b7 Returns HTTP/1.1 status code 201 if the request was successful. \n\uf0b7 Any other special return and/or exception codes. \nDescription:  \n\uf0b7 This Uniform Contract operation is used to completely update the representation of a SLA. \n\uf0b7 Resource represents a managed entity. \n\n\n \nBehavior:  \n\uf0b7 Returns HTTP/1.1 status code 201 if the request was successful. \n\uf0b7 Returns HTTP/1.1 status code 400 (Bad request) if content is invalid (missing required \nattributes, \u2026). \nUpdating the whole SLA \u2013 if you try to change the SLA ID itself an exception is returned. All fields \nwith different values will be changed. If the request contains the same values like the current SLA \nrepresentation, nothing is changed. If an element is empty in the request, the value of the element \nwill be deleted. If it is a required element, an exception is returned. \nREQUEST \nPUT API/SLA/1 \nContent-type: application/json \n \n{\"sla\": { \nJSON Resource Representation with every attributes \n}} \nRESPONSE \n201 \nContent-Type: application/json \n \n{\"sla\": { \nJSON Resource Representation with every attributes } \n \nPATCH API/SLA/{ID} \nDescription:  \n\uf0b7 This Uniform Contract operation is used to partially update the representation of a SLA. \n\uf0b7 Resource represents a managed entity. \nTable of patchable attributes  \nAttribute name \nPatchable \nRule \nid \nN \n \n\n\n \nname \nY \n \ndescription \nY \n \nversion \nY \n \nvalidityPeriod \nY \n \ntemplate \nY \n \nhref \nY \n \nname \nY \n \ndescription \nY \n \nrelatedParty \nY \n \nstate \nY \n \napproved \nY \n \nrules \nY \n \nid \nY \n \nmetric \nY \n \nunit \nY \n \nreferenceValue \nY \n \noperator \nY \n \ntolerance \nY \n \n\n\n \nConsequence \nY \n \n \nFurther document any rules that must be implemented when patching attributes. It is use-case \ndriven \nRule name \nRule/Pre Condition/Side Effects/Post Conditons \n \n \n \n \n \nREQUEST \nPATCH API/sla/{ID} \nContent-type: application/json \n \n{\"sla\": { \nJSON Resource Representation with every attributes \n}} \nRESPONSE \n201 \nContent-Type: application/json \n \n{\"sla\": { \nJSON Resource Representation with every attributes \n}} \n \nPOST API/SLA/{ID} \nDescription:  \n\uf0b7 This Uniform Contract operation is used to create a SLA. \n\uf0b7 Resource represents a managed entity. \n\uf0b7 Mandatory attributes that must be provided when you create the SLA : \nDescription, severity, type"}
{"tmforumApiId": "TMF623", "id": "TMF623-chunk-6", "chunkIndex": 6, "totalChunks": 7, "apiName": "SLA Management API user guides 14.5.1", "title": "TMF623_SLA_Management_API_user_guides_14.5.1 (Part 6/7)", "documentType": "Tmforum api user guide", "text": "Behavior:  \n\uf0b7 Returns HTTP/1.1 status code 201 if the request was successful. \n\uf0b7 Returns HTTP/1.1 status code 400 (Bad request) if content is invalid (missing required \nattributes, \u2026). \nThe requester cannot generate the id \u2013 the id to identify the REST resource is generated \nautomatically in the back-end. The correlationId can be set from external but is not mandatory. \nSpecify the attributes required when an entity is created (and their default values if not): \nAttribute name \nMandatory \nDefault \nRule \nid \nN \n \n \nname \nY \n \n \ndescription \nN \n \n \nversion \nN \n \n \nvalidityPeriod \nN \n \n \ntemplate \nN \n \n \nhref \nN \n \n \nname \nN \n \n \ndescription \nN \n \n \nrelatedParty \nN \n \n \nstate \nN \n \n \napproved \nN \n \n \nrules \nN \n \n \n\n\n \nid \nN \n \n \nmetric \nN \n \n \nunit \nN \n \n \nreferenceValue \nN \n \n \noperator \nN \n \n \ntolerance \nN \n \n \nConsequence \nN \n \n \n \n\uf0b7 Further specify any rules on the creation of the entity \nRule name \nRule \n \n \n \n \n \nREQUEST \nPOST API/sla \nContent-type: application/json \n \n{\"sla\": { \n  JSON Resource Representation with every attributes \", \n}} \nRESPONSE \n201 \nContent-Type: application/json \n \n{\"sla\": { \n\n\n \n \n  JSON Resource Representation with every attributes \n}} \n \nDELETE API/SLA/{ID} \nThis Uniform Contract operation is used to delete a managed entity or a task. \nDescription :  \n\uf0b7 Provide an overall description of the Operation \n\uf0b7 Describe if the resource represents a managed entity or a task. \n\uf0b7 Describe the structure of the identifier. \nBehavior :  \n\uf0b7 What status and exception codes are returned. \n\uf0b7 Returns HTTP/1.1 status code 200 if the request was successful. \n\uf0b7 Any other special return and/or exception codes. \nREQUEST \nDELETE API/SLA/{ID} \n \n \nRESPONSE \n200 \n \n \nExample see TMF REST Design Guidelines. \n\n\n \nSLAVIOLATION OPERATIONS \nFor every single of operation on the entities use the following templates and provide sample REST \nrequests and responses.  \nRemember that the following Uniform Contract rules must be used : \nOperation on Entities \nUniform API Operation \nDescription \nQuery Entities \nGET Resource \nGET must be used to \nretrieve a representation of \na resource. \n \nCreate Entity \nPOST Resource \nPOST must be used to \ncreate a new resource \nPartial Update of an Entity \nPATCH Resource \nPATCH must be used to \npartially update a resource \nComplete Update of an \nEntity \nPUT Resource \nPUT must be used to \ncompletely update a \nresource identified by its \nresource URI  \nRemove an Entity \nDELETE Resource \nDELETE must be used to \nremove a resource \nExecute an Action on an \nEntity  \nPOST on TASK Resource \nPOST must be used to \nexecute Task Resources \nOther Request Methods \nPOST on TASK Resource \nGET and POST must not \nbe used to tunnel other \nrequest methods. \n \n\n\n \nFiltering and attribute selection rules are described in the TMF REST Design Guidelines. \nNotifications are also described in a subsequent section. \nGET API / SLAVIOLATION / {ID} \nThis Uniform Contract operation is used to retrieve the representation of a managed entity or a task. \nNote that collections can be retrieved via GET /API/SLAVIOLATION with no {ID} \nREQUEST \nGET /api/SLAVIOLATION/{ID}/{attributeSelector}?{filtering expression} \nAccept: application/json \nRESPONSE \n200 \nContent-Type: application/json \n \n{ \n  JSON Resource Representation \n} \n \nExample see TMF REST Design Guidelines. \nPUT API/ SLAVIOLATION /{ID} \nThis Uniform Contract operation is used to completely update the representation of a managed \nentity or a task. \nREQUEST \nPUT API/SLAVIOLATION /{ID} \nContent-type: application/json \n \n{ \n  JSON Resource Representation with every attributes \n} \nRESPONSE \n201 \nContent-Type: application/json \n \n\n\n \n{  JSON Resource Representation with every attributes \n} \nExample see TMF REST Design Guidelines. \n \nPATCH API/ SLAVIOLATION /{ID} \nThis Uniform Contract operation is used to partially update the representation of a managed entity or \na task. \nSpecify which attributes are patchable using the following table (to capture RO attributes) \nAttribute name \nPatchable \nRule \nid \nN \n \nSLA \nY \n \ndescription \nY \n \nhref \nY \n \nRelatedParty \nY \n \nViolation \nY \n \nrule \nY \n \nunit \nY \n \nreferenceValue \nY \n \noperator \nY \n \nactualValue \nY \n \ntolerance \nY \n \n\n\n \nviolationAverage \nY \n \nComment \nY \n \nconsequence \nY \n \nattachments \nY \n \n \nFurther document any rules that must be implemented when patching attributes. \nRule name \nRule/Pre Condition/Side Effects/Post Conditons \n \n \n \n \n \nREQUEST \nPATCH API/ SLAVIOLATION /{ID} \nContent-type: application/json \n \n{ \n  JSON Resource Representation with every attributes \n} \nRESPONSE \n201 \nContent-Type: application/json \n \n{  JSON Resource Representation with every attributes \n} \n \nExample see TMF REST Design Guidelines. \n \nPOST API/ SLAVIOLATION /{ID} \n\n\n \nThis Uniform Contract operation is used to create a managed entity or a task. \n       ID Management : \nSpecify the ID Management Rule POST without specifying the ID  must result in the system \ngenerating the ID for the <Entity>. In a specific case, the ID can also be included in the POST \n(optional) \nAttributes required when an entity is created (and their default values if not): \nAttribute name \nMandatory \nDefault \nRule \nid \nN \n \n \nSLA \nN \n \n \ndescription \nN \n \n \nhref \nN \n \n \nRelatedParty \nN \n \n \nViolation \nN \n \n \nrule \nN \n \n \nunit \nN \n \n \nreferenceValue \nN \n \n \noperator \nN \n \n \nactualValue \nN \n \n \ntolerance \nN \n \n \nviolationAverage \nN \n \n \nComment \nN \n \n \n\n\n \nconsequence \nN \n \n \nattachments \nN \n \n \n \nFurther specify any rules on the creation of the entity \nRule name \nRule \n \n \n \n \n \nREQUEST \nPOST API/SLAVIOLATION \nContent-type: application/json \n \n{ \n  JSON Resource Representation with every mandatory attributes \n} \nRESPONSE \n201 \nContent-Type: application/json \n \n{  JSON Resource Representation with every provided and default attributes \n} \n \nExample see TMF REST Design Guidelines. \n \nDELETE API/ SLAVIOLATION /{ID} \nThis Uniform Contract operation is used to delete a managed entity or a task. \nREQUEST"}
{"tmforumApiId": "TMF623", "id": "TMF623-chunk-7", "chunkIndex": 7, "totalChunks": 7, "apiName": "SLA Management API user guides 14.5.1", "title": "TMF623_SLA_Management_API_user_guides_14.5.1 (Part 7/7)", "documentType": "Tmforum api user guide", "text": "DELETE API/ SLAVIOLATION /{ID} \n \n \nRESPONSE \n200 \n \n \nExample see TMF REST Design Guidelines. \n\n\n \nSLA NOTIFICATIONS \nFor every single of operation on the entities use the following templates and provide sample REST \nnotification POST calls. \nIt is assumed that the Pub/Sub uses the Register and UnRegister mechanisms described in the \nREST Guidelines reproduced below. \n REGISTER LISTENER   POST /HUB \nDescription :  \nSets the communication endpoint address the service instance must use to deliver \ninformation about its health state, execution state, failures and metrics. Subsequent \nPOST calls will be rejected by the service if it does not support multiple listeners. In \nthis case DELETE /api/hub/{id} must be called before an endpoint can be created \nagain. \nBehavior :  \nReturns HTTP/1.1 status code 204 if the request was successful. \n \nReturns HTTP/1.1 status code 409 if request is not successful. \nREQUEST \nPOST /api/hub \nAccept: application/json \n \n{\"callback\": \"http://in.listener.com\"} \nRESPONSE \n201 \nContent-Type: application/json \nLocation: /api/hub/42 \n \n{\"id\":\"42\",\"callback\":\"http://in.listener.com\",\"query\":null} \nUNREGISTER LISTENER DELETE HUB/{ID} \n\n\n \nDescription :  \nClears the communication endpoint address that was set by creating the Hub. \nBehavior :  \nReturns HTTP/1.1 status code 204 if the request was successful. \n \nReturns HTTP/1.1 status code 404 if the resource is not found. \nREQUEST \nDELETE /api/hub/{id} \nAccept: application/json \n \nRESPONSE \n204 \nPUBLISH {EVENTTYPE} POST /LISTENER \nDescription :  \nProvide the Event description \nBehavior :  \nReturns HTTP/1.1 status code 201 if the service is able to set the configuration. \nREQUEST \nPOST /client/listener \nAccept: application/json \n \n{ \n \n\"eventType\": \"EventType\", \n \n\"eventTime\": \"2014-09-27T05:46:25.0Z\", \n \n\"eventId\": \"1562231\", \n \n\"event\":  \n \n{ \n    EVENT BODY  \n \n} \n\n\n \n} \nRESPONSE \n201 \nContent-Type: application/json \n \nExample see TMF REST Design Guidelines. \n \n\n\n \nSLAVIOLATION  NOTIFICATIONS \nFor every single of operation on the entities use the following templates and provide sample \nREST notification POST calls. \nIt is assumed that the Pub/Sub uses the Register and UnRegister mechanisms described in the \nREST Guidelines reproduced below. \n REGISTER LISTENER   POST /HUB \nDescription :  \nSets the communication endpoint address the service instance must use to deliver \ninformation about its health state, execution state, failures and metrics. Subsequent \nPOST calls will be rejected by the service if it does not support multiple listeners. In \nthis case DELETE /api/hub/{id} must be called before an endpoint can be created \nagain. \nBehavior :  \nReturns HTTP/1.1 status code 204 if the request was successful. \n \nReturns HTTP/1.1 status code 409 if request is not successful. \nREQUEST \nPOST /api/hub \nAccept: application/json \n \n{\"callback\": \"http://in.listener.com\"} \nRESPONSE \n201 \nContent-Type: application/json \nLocation: /api/hub/42 \n \n{\"id\":\"42\",\"callback\":\"http://in.listener.com\",\"query\":null} \nUNREGISTER LISTENER DELETE HUB/{ID} \nDescription :  \n\n\n \nReturns HTTP/1.1 status code 204 if the request was successful. \n \nReturns HTTP/1.1 status code 404 if the resource is not found. \nREQUEST \nDELETE /api/hub/{id} \nAccept: application/json \n \nRESPONSE \n204 \nPUBLISH {EVENTTYPE} POST /LISTENER \nDescription :  \nProvide the Event description \nBehavior :  \nReturns HTTP/1.1 status code 201 if the service is able to set the configuration. \nREQUEST \nPOST /client/listener \nAccept: application/json \n \n{ \n \n\"eventType\": \"EventType\", \n \n\"eventTime\": \"2014-09-27T05:46:25.0Z\", \n \n\"eventId\": \"1562231\", \n \n\"event\":  \n \n{ \n    EVENT BODY  \n \n} \n} \nRESPONSE \n201 \nContent-Type: application/json \n\n\n \nRELEASE HISTORY \n \nRelease \nNumber \nDate  \nRelease led by: \nDescription  \nRelease 0.7 \n11/09/2013 \nzavisa.bjelogrlic@accenture.com  \ntayeb.benmeriem@orange.com \njerome.hannebelle@orange.com \npgauthier@tmforum.org \nFirst Spec Jam in Paris. \nRelease 1.0 \n15/05/2014 \ntayeb.benmeriem@orange.com \njerome.hannebelle@orange.com \nReformatted to Template 1.1 \n \nCONTRIBUTORS TO DOCUMENT \nVeronique Mauneau \nOrange \nJean-Luc Tymen \nOrange \nPierre Gauthier \nTM Forum \nJohn Morey \nCiena \nCliff C Faurer \nAMKB Cloud"}
