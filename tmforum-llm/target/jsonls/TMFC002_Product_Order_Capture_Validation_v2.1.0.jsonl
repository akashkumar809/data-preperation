{"tmforumApiId": "TMFC002", "id": "TMFC002-chunk-1", "chunkIndex": 1, "totalChunks": 8, "apiName": "Product Order Capture Validation v2.1.0", "title": "TMFC002_Product_Order_Capture_Validation_v2.1.0 (Part 1/8)", "documentType": "Tmforum api user guide", "text": "TM Forum Technical Specification \n \n \n \nProduct Order Capture & \nValidation \n \n \n \n \n \n \n \n \n \nTMFC002 \n \nMaturity Level: General Availability (GA) \nTeam Approved Date: 26-Nov-2024 \nRelease Status: Production \nApproval Status: TM Forum Approved \nVersion 2.1.0 \nIPR Mode: RAND \n \n \n \n\n\n \nNotice \nCopyright \u00a9 TM Forum 2024. All Rights Reserved. \n \nThis document and translations of it may be copied and furnished to others, and \nderivative works that comment on or otherwise explain it or assist in its implementation \nmay be prepared, copied, published, and distributed, in whole or in part, without \nrestriction of any kind, provided that the above copyright notice and this section are \nincluded on all such copies and derivative works. However, this document itself may \nnot be modified in any way, including by removing the copyright notice or references to \nTM FORUM, except as needed for the purpose of developing any document or \ndeliverable produced by a TM FORUM Collaboration Project Team (in which case the \nrules applicable to copyrights, as set forth in the TM FORUM IPR Policy, must be \nfollowed) or as required to translate it into languages other than English. \n \nThe limited permissions granted above are perpetual and will not be revoked by TM \nFORUM or its successors or assigns.  \n \nThis document and the information contained herein is provided on an \u201cAS IS\u201d basis \nand TM FORUM DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE \nINFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP RIGHTS OR ANY \nIMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR \nPURPOSE.  \n \nTM FORUM invites any TM FORUM Member or any other party that believes it has \npatent claims that would necessarily be infringed by implementations of this TM Forum \nStandards Final Deliverable, to notify the TM FORUM Team Administrator and provide \nan indication of its willingness to grant patent licenses to such patent claims in a \nmanner consistent with the IPR Mode of the TM FORUM Collaboration Project Team \nthat produced this deliverable. \nThe TM FORUM invites any party to contact the TM FORUM Team Administrator if it is \naware of a claim of ownership of any patent claims that would necessarily be infringed \nby implementations of this TM FORUM Standards Final Deliverable by a patent holder \nthat is not willing to provide a license to such patent claims in a manner consistent with \nthe IPR Mode of the TM FORUM Collaboration Project Team that produced this TM \nFORUM Standards Final Deliverable. TM FORUM may include such claims on its \nwebsite but disclaims any obligation to do so. \nTM FORUM takes no position regarding the validity or scope of any intellectual \nproperty or other rights that might be claimed to pertain to the implementation or use of \nthe technology described in this TM FORUM Standards Final Deliverable or the extent \nto which any license under such rights might or might not be available; neither does it \nrepresent that it has made any effort to identify any such rights. Information on TM \nFORUM's procedures with respect to rights in any document or deliverable produced \nby a TM FORUM Collaboration Project Team can be found on the TM FORUM \nwebsite. Copies of claims of rights made available for publication and any assurances \nof licenses to be made available, or the result of an attempt made to obtain a general \nlicense or permission for the use of such proprietary rights by implementers or users of \nthis TM FORUM Standards Final Deliverable, can be obtained from the TM FORUM \nTeam Administrator. TM FORUM makes no representation that any information or list \nof intellectual property rights will at any time be complete, or that any claims in such list \nare, in fact, Essential Claims. \n\n\nDirect inquiries to the TM Forum office:  \n \n181 New Road, Suite 304 \nParsippany, NJ 07054, USA \nTel No.  +1 862 227 1648 \nTM Forum Web Page: www.tmforum.org \n \n \n \n \n \n \n\n\nTable of Contents \nNotice .................................................................................................................... 2 \nTable of Contents .................................................................................................. 4 \n1. \nOverview ........................................................................................................ 5 \n2. \neTOM Processes, SID Data Entities and Functional Framework Functions .... 7 \n2.1. \neTOM business activities ................................................................... 7 \n2.2. \nSID ABEs ......................................................................................... 10 \n2.3. \neTOM L2 - SID ABEs links ............................................................... 10 \n2.4. \nFunctional Framework Functions ..................................................... 12 \n3. \nTM Forum Open APIs & Events ................................................................... 22 \n3.1. \nExposed APIs .................................................................................. 22 \n3.2. \nDependent APIs ............................................................................... 24 \n3.3. \nEvents .............................................................................................. 28 \n4. \nMachine Readable Component Specification ............................................... 29 \n5. \nReferences ................................................................................................... 30 \n5.1. \nTMF Standards related versions ...................................................... 30 \n5.2. \nJira References ................................................................................ 30 \n5.2.1. eTOM ........................................................................................... 30 \n5.2.2. SID ............................................................................................... 30 \n5.2.3. Functional Framework .................................................................. 30 \n5.2.4. API ............................................................................................... 30 \n5.2.5. Further resources ......................................................................... 31 \n6. \nAdministrative Appendix ............................................................................... 32 \n6.1. \nDocument History ............................................................................ 32 \n6.1.1. Version History............................................................................. 32 \n6.1.2. Release History ............................................................................ 32 \n6.1.3. Acknowledgments ........................................................................ 33"}
{"tmforumApiId": "TMFC002", "id": "TMFC002-chunk-2", "chunkIndex": 2, "totalChunks": 8, "apiName": "Product Order Capture Validation v2.1.0", "title": "TMFC002_Product_Order_Capture_Validation_v2.1.0 (Part 2/8)", "documentType": "Tmforum api user guide", "text": "1. Overview \nComponent \nName \nID \nDescription \nODA \nFunction \nBlock \nProduct Order \nCapture and \nValidation \nTMFC002 Addresses the means of capturing what a \ncustomer wants to order, based on the CSP \nProduct Catalog. \nThis component permits to choose the \nconfiguration of the product offerings and \nproducts desired, to provide a quote, to check the \neligibility of the customer order, and to complete \nit with information needed such as the related \nparties or associated the billing account and the \ndelivery appointment if needed. \nThis component is globally in charge of these \nquote management, order capture and validation \nsteps, using dedicated components (e.g., \nProduct Configurator, Service Qualification, Party \nMgt) when needed. \nAfter the delivery of the customer product order \nitems, this component is also in charge of the \ncommercial closure of the order. It includes \nupdate of the Product Inventory (status and \nstarting/end date of tariffs and discounts) and \npotential commercial rules control (e.g., receipt of \nthe contract document signed by the customer) \nCore \nCommerce \n \n \n\n\n \n \n \n \n\n\n2. eTOM Processes, SID Data Entities and \nFunctional Framework Functions \n2.1. eTOM business activities \neTOM business activities this ODA Component is responsible for are: \nIdentifier Level Business \nActivity Name \nDescription \n1.1.9 \nL2 \nSelling \nResponsible for managing prospective \ncustomers, for qualifying and educating \ncustomers, and matching customer \nexpectations \nManaging prospective parties with whom an \nenterprise may do business, such as \npotential existing or new customers and \npartners, for qualifying and educating them, \nand ensuring their expectations are met. \n1.1.9.2 L3 \nDevelop Sales \nProposal \nDevelop a sales proposal to respond to the \ncustomer\u2019s requirements \nDevelop a sales proposal to respond to a \nsales prospect's requirements. \n1.1.9.5 L3 \nNegotiate \nSales/Contract \nClose the sale with terms that are \nunderstood by the customer and are mutually \nagreeable to both the customer and the \nservice provider. \nClose the sale with terms that are \nunderstood by the sales prospect, which now \nbecomes a customer or some other partythat \nmake an enterprise's offerings to the market, \nsuch as a partner, and are mutually \nagreeable to both the customer or party and \nan enterprise. \n1.2.9 \nL2 \nProduct Offering \nPurchasing \nMake an inbound/outbound purchase of one \nor more product offerings, change an offering \nbeing purchased, review an entire purchase, \nand other processes that manage the \nlifecycle of a purchase of one or more \nproduct offerings. \n1.2.27 \nL2 \nProduct Order \nManagement \nProduct Order Management business \ndirect and control processes that capture, \ntrack, fulfil, deliver and close product \norder requests.  \nProduct Order Management begins with \nthe capture of a product order request \nbased on a party (Customer, Business \nPartner, Employee etc.), and processes, \ntracks and reports the products from \n\n\nIdentifier Level Business \nActivity Name \nDescription \norder capture to  fulfillment, shipping the \norder, and managing cancellation and \nreturns. \n1.2.27.1 L3 \nManage \nProduct Order \nCapture \nManage Product Order Capture business \nactivity direct and control the creation of \nproduct orders, validate product orders \nagainst feasibility and/or availability \nchecks, and ensure product orders are \ncomplete for onward business \nprocessing. \nManage Product Order Capture assures \nfor completeness, the Product Order \nrequirements needed for successfully \nprocessing, delivering and managing \nreturns of orders. \n1.2.27.4 L3 \nManage \nProduct Order \nCancellation \nManage Product Order Cancellation \nbusiness activity directs and controls the \nproduct order cancellation requests. \n1.2.27.5 L3 \nManage \nProduct Order \nManagement \nReports \nManage Product Order Management \nReports business activity directs and \ncontrols monitoring of product order \nmanagement activities, notify product \norder management status and reporting \nproduct order management activities.  \n1.3.3 \nL2 \nCustomer Order \nHandling \nCustomer Order \nProcessing \nManagement \nResponsible for accepting and issuing \norders. \nCustomer Order Processing Management \nbusiness process directs and controls all \nactivities that operationally realize orders \nfor customer.  \nCustomer Order Processing Management \nassures the capture, processing, \nfulfillment, \"shipping\", delivery and \nreporting of customer orders from \nfeasibility assessment, purchasing, \npayment, fulfillment and follow up with \nthe customer for closure. \n1.3.3.1 \nL3 \nDetermine \nCustomer Order \nFeasibility \nCheck the availability and/or the feasibility of \nproviding and supporting standard and \ncustomized product offerings where specified \nto a customer. \n1.3.3.2 \nL3 \nAuthorize Credit \nAssess a customer's credit worthiness in \nsupport of managing customer risk and \ncompany exposure to bad debt \n1.3.3.4 \nL3 \nComplete \nCustomer Order \nManage customer information and \ninteractions after customer contracts or \nassociated service orders have been"}
{"tmforumApiId": "TMFC002", "id": "TMFC002-chunk-3", "chunkIndex": 3, "totalChunks": 8, "apiName": "Product Order Capture Validation v2.1.0", "title": "TMFC002_Product_Order_Capture_Validation_v2.1.0 (Part 3/8)", "documentType": "Tmforum api user guide", "text": "Identifier Level Business \nActivity Name \nDescription \nfinalized and during the order completion \nphase \n1.3.3.5 \nL3 \nIssue Customer \nOrders \nIssue Correct and complete customer orders \n1.3.3.6 \nL3 \nReport Customer \nOrder Handling \nMonitor the status of customer orders, \nprovide notifications of any changes, and \nprovide management reports \n1.3.3.7 \nL3 \nClose Customer \nOrder \nClose a customer order when the customer \nprovisioning activities have been completed. \nMonitor the status of all open customer \norders and recognize that a customer order \nis ready to be closed when the status is \nchanged to completed. \n1.3.3.8 \nL3 \nManage Order \nFallout \nThis process defines tasks involved in \nhandling fallouts (exceptions) generated in \nthe order fulfillment lifecycle. It deals with \nidentifying, assigning, managing, monitoring, \nand reporting order fallouts. \n1.3.3.10 L3 \nManage \nCustomer Order \nPlacement \nManage Customer Order Placement \nbusiness activity directs and controls the \ncapture of information to enable create \ncustomer order, change customer order \nand validate customer order based on \nordering information from customer. \n1.3.3.15 L3 \nManage \nCustomer Order \nCompletion \nManage Customer Order Completion \nbusiness activity controls activities to \nconfirm that an order has been \nsuccessfully delivered/shipped to the \ncustomer. \n1.3.3.16 L3 \nManage \nCustomer Order \nManagement \nReport \nManage Customer Order Management \nReport business activity provides detailed \naccount of Customer Order Management \nactivities, representing state and status of \ncustomer orders across the customer \norder lifecycle.  \nManage Customer Order Management \nReport provides monitoring, tracking and \ncustomer order status \nupdates/notification as needed to all \nstakeholders linked to the customer \nordering and fulfillment activities. \n1.3.3.17 L3 \nManage \nCustomer Order \nClosure \nManage Customer Order Closure \nbusiness activity ensures that customer \nhas confirmed the delivery of a completed \ncustomer order.  \nManage Customer Order Closure \nbusiness activity closes-the-loop of \n\n\nIdentifier Level Business \nActivity Name \nDescription \nbetween the Customer Order Completion \nprocess and the confirmation by the \nCustomer. This business activity includes \ntasks to communicate and confirm \ndelivery to customer; cancellation of any \nopen line items in the customer order; \nand reports the customer order \ncompletion to related stakeholders. \n2.2. SID ABEs \nSID ABEs this ODA Component is responsible for are: \nSID ABE \nLevel 1 \nSID ABE L1 Definition \nSID ABE Level 2 (or \nset of BEs) \nSID ABE \nL2 \nDefinition \nCustomer \nProduct \nOrder \nHandles single customer \norders and the various types \nthereof, such as regulated \nand non-regulated orders. \nOrders ProductOfferings and \nconcerns Products \nSalesQuote \nShoppingCart \nCustomerProductOrder \n \n*: if SID ABE Level 2 is not specified this means that all the L2 business entities must \nbe implemented, else the L2 SID ABE Level is specified.  \nNote: The Product Order Capture & Validation component will also trigger creation and \nupdate of Product but this information is managed by a dedicated component \nTMFC005 - Product Inventory. \n2.3. eTOM L2 - SID ABEs links \n  \n \n\n\n \n\n\n\uf8e9TM Forum 2024. All Rights Reserved.                                                                                                                                                                              \n \n2.4. Functional Framework Functions \nFunction \nID \nFunctional \nFramework \nFunction \nFunction Description \nAg\nFu\n16 \nFallout Automated \nCorrection \nFallout Automated Correction function tries to automatically fix \nfallouts in workflows before they go to a human for handling. \nThis includes a Fallout Rules Engine that provides the capability to \nhandling various errors or error types based on built rules. These \nrules can facilitate autocorrection, correction assistance, placement \nof errors in the appropriate queues for manual handling, as well as \naccess to various systems. \nFa\nMa\n17 \nFallout Correction \nInformation \nCollection \nFallout Correction Information Collection collects relevant \ninformation for errors or situations that cannot be handled via \nFallout Auto Correction. The intent is to reduce the time required \nby the technician in diagnosing and fixing the fallout. \nFa\nMa\n18 \nFallout \nManagement to \nFulfillment \nApplication \nAccessing \nFallout Management to Fulfillment Application Accessing function \nprovides a variety of tools to facilitate Fallout Management access \nto other applications and repositories to facilitate proper Fallout \nManagement.  This can include various general access techniques \nsuch as messaging, publish and subscribe, etc. as well as specific \nAPIs and contracts to perform specific queries or updates to \nvarious applications or repositories within the fulfillment domain. \nFa\nMa\n19 \nFallout Manual \nCorrection Queuing \nFallout Manual Correction Queuing function provides the required \nfunctionality to place error fallout into appropriate queues to be \nhandled via various staff or workgroups assigned to handle or fix \nthe various types of fallout that occurs during the fulfillment \nprocess. This includes the ability to create and configure queues, \nFa\nMa"}
{"tmforumApiId": "TMFC002", "id": "TMFC002-chunk-4", "chunkIndex": 4, "totalChunks": 8, "apiName": "Product Order Capture Validation v2.1.0", "title": "TMFC002_Product_Order_Capture_Validation_v2.1.0 (Part 4/8)", "documentType": "Tmforum api user guide", "text": "\u00a9 TM Forum 2024. All Rights Reserved.                                                                                   Page 13 of 33 \nFunction \nID \nFunctional \nFramework \nFunction \nFunction Description \nAg\nFu\nroute errors to the appropriate queues, as well as the ability for \nstaff to access and address the various fallout instances within the \nqueues. \n20 \nFallout Notification \nFallout Notification function provides the means to alert people or \nworkgroups of some fallout situation. This can be done via a \nnumber of means, including email, paging, (Fallout management \ninterface bus) etc. This function is done via business rules. \nFa\nMa\n21 \nFallout \nOrchestration \nThe Fallout Orchestration function provides workflow and \norchestration capability across Fallout Management. \nFa\nMa\n22 \nFallout Reporting \nFallout Reporting provides various reports regarding Fallout \nManagement, including statistics on fallout per various times \nperiods (per hour, week, month, etc.) as well as information about \nspecific fallout. \nFa\nMa\n23 \nFallout Dashboard \nSystem Log-in \nAccessing \nFallout Dashboard System Log-in Accessing provides auto logon \ncapability into various applications needed to analyze and fix fallout \nFa\nMa\n24 \nPre-populated \nFallout Information \nPresentation \nPre-populated Fallout Information Presentation automatically \nposition the analyzer on appropriate screens pre-populated with \ninformation about the order(s) that's subject for fallout handling. \nFa\nMa\n120 \nCustomer Order \nCapturing \nCustomer Order Capturing provides access to Order capture and \nnegotiation capabilities or receives the captured Customer Order \ndata from channels. Takes care of persistence using Customer \nOrder Lifecycle Management. Including support of contract \nprinting, integration with a locally installed cash management/cash \nregister and a retail inventory system for order completion and \nordered product versioning. \nPro\nCo\nAc\n\n\n\u00a9 TM Forum 2024. All Rights Reserved.                                                                                   Page 14 of 33 \nFunction \nID \nFunctional \nFramework \nFunction \nFunction Description \nAg\nFu\n172 \nCustomer Order \nReporting \nCustomer Order Reporting function provides front end support for \nBusiness, Financial and Operational reporting and analyzing of the \nordering activities. \nCu\nMa\n174 \nOrdering Customer \nOrder Error \nResolution Support \nOrdering Customer Order Error Resolution Support provides to \nview pool of orders resulted in error or stuck orders and enable the \nCustomer Support to act accordingly(e.g., resend the request, \nnotify the user with recommended action) \nFor example, a configuration incompatibility with functional or \ncommercial constraint, product unavailability according to the \nconfiguration may trigger the resend of the request or notify \nthe user with recommended action. \nCu\nMa\n175 \nCustomer Support \nJeopardy \nNotification \nCustomer Support Jeopardy Notification provide to view \njeopardy notifications queue and enable the Customer \nSupport to act accordingly (e.g. notify customer on due date \ndelay). \nCu\nMa\n176 \nCustomer Order \nCapturing Access \nCustomer Order Capturing Access provides front end support for \nthe Customer Order Capturing functions defined by the order \nmanagement. \nFu\nInt\nMa\n177 \nCustomer Order \nTake-over \nManagement \nCustomer Order Take-over Management provides an ability to take \nover governance of orders handled by other channels (e.g., self-\nservice) amend and relinquish while preserving all the captured \ndata. \nCu\nMa\n178 \nCustomer Order \nAdministration \nCustomer Order Administration provide to view all outstanding \norders, progress and history displays \nCu\nMa\n\n\n\u00a9 TM Forum 2024. All Rights Reserved.                                                                                   Page 15 of 33 \nFunction \nID \nFunctional \nFramework \nFunction \nFunction Description \nAg\nFu\n181 \nProduct Order Data \nCollection \nProduct Order Data Collection provides an aid in verification and \nissuance of a complete and valid customer order. This function \nchecks delivery address, link with a payment, a billing \naccount, a certified holder, etc. \nCu\nMa\n204 \nCustomer \nOrderCompletion E\nntry Finalization \nThe Customer OrderCompletion Entry Finalization function \nenablescompletion and finalization of the Customer Order with \ncollection of Customer Data or installed base data according to the \nCatalog. It allows to complete the configuration element not \nnecessary for the quotation. The complements could also concern \nlinks with actors, dates, address, billing account. \nCu\nMa\n205 \nCustomer Order \nEligibility Validation \nCustomer Order Eligibility Validation function validates that the \nOffer & products specified on the Customer Order, are eligible from \na commercial and functional point of view. \nIt includes: \n\u2022 Commercial Eligibility with commercial compatibility with the \nalready customer installed Offers \n\u2022 Functional Eligibility with the customer's already installed \nProducts. \n\u2022 Customer Credit Eligibility check, considering the payment history \nand the credit scores for a Customer, only the predictive credit \nscore for a Prospective Customer. \nThe technical feasibility is covered by the Service Availability \nfunction. \nCu\nMa"}
{"tmforumApiId": "TMFC002", "id": "TMFC002-chunk-5", "chunkIndex": 5, "totalChunks": 8, "apiName": "Product Order Capture Validation v2.1.0", "title": "TMFC002_Product_Order_Capture_Validation_v2.1.0 (Part 5/8)", "documentType": "Tmforum api user guide", "text": "\u00a9 TM Forum 2024. All Rights Reserved.                                                                                   Page 16 of 33 \nFunction \nID \nFunctional \nFramework \nFunction \nFunction Description \nAg\nFu\n\u2022 \nCommercial Eligibility with commercial compatibility \nwith the already customer installed Products \n(corresponding to ProductOffering) \n\u2022 \nFunctional Eligibility with the customer's already \ninstalled Products (corresponding to \nProductSpecification). \n208 \nCustomer Order \nChange \nManagement \nCustomer Order Change Management amend pending order \nresulted from customer change requests or provisioning system \nlimitation and revalidate the order. \nCu\nMa\n209 \nCustomer Order \nCancellation \nCustomer Order Cancellation can optionally support Cancel for \norder completed by Service Order Management (this capability is \ndependent on the Service Order Management system\u2019s ability to \nroll back service provisioning). This function assesses the \nfeasibility of order cancellation and the potential charge to the \ncustomer. If the cancellation is confirmed, it proceeds with the \ncancellation. \nCu\nMa\n211 \nCustomer Order \nActivity Supervision \nCustomer Order Activity Supervision governs the control of the \norder amongst the ordering channels. This allows keeping the \norder data consistency, sharing the order data among order \napplication channels, and alternating the control between them. \n Cu\nMa\n212 \nCustomer Order \nVersioning \nCustomer Order Versioning maintains order versioning including \nTracking & Logging of the changes made to a purchased product. \n Cu\nMa\n213 \nPending Customer \nOrders \nMaintenance \nPending Customer Orders Maintenance saves the order/quote for \nfuture processing (in case the customer is not sure if they want to \ngo through with the order at this point) \n Cu\nMa\n\n\n\u00a9 TM Forum 2024. All Rights Reserved.                                                                                   Page 17 of 33 \nFunction \nID \nFunctional \nFramework \nFunction \nFunction Description \nAg\nFu\n217 \nCustomer Order \nEstablishment \nTracking \nCustomer Order Establishment Tracking provides the functionality \nnecessary to track and manage the distributed requests \ndecomposed by Customer Order Distribution.This capability needs \nto be provided in both an ability to query in real time and a \npublish/subscribe mechanism to enable the use of the information \nwherever required. \n Cu\nMa\n236 \nCustomer Loyalty \nSubscriptionManag\nement \nConfiguration \nCustomer Loyalty SubscriptionManagement Configuration \nfunction manages information for subscription and deactivation to \na Loyalty program.Subscription management  includes: \n- checking customer requirements \n- assigning one or more subgroups to which the customer belongs \n- assigning welcome points & send welcome messages \n- generate the unique Loyalty-identifier \nLoyalty Subscription Management can assign multiple traffic \nchannels to loyalty subscriptions (sim-cards, PBX, Call Data \nNetwork etc.) \nPro\nCo\nAc\n259 \nExternal Call Center \nAccess \nExternal Call Center Access provides access to call center self-\nempowered fulfillment function providing an internet technology \ndriven interface for the customer to undertake a variety of \nfulfillment functions directly for themselves. \nCu\nMa\n262 \nProduct \nAvailability \nChecking 1  \nProduct Availability Checking function provide an internet \ntechnology driven interface for the customer to undertake a \nproduct availability check. \nE.g., that the product offering is active for sales, the \nequipment(s) specified in the customer order are on stock. \nCu\nMa\n\n\n\u00a9 TM Forum 2024. All Rights Reserved.                                                                                   Page 18 of 33 \nFunction \nID \nFunctional \nFramework \nFunction \nFunction Description \nAg\nFu\n272 \nOrder Status \nViewing \nOrder Status Viewing provides self-empowered fulfillment function \nof an internet technology driven interface for the customer to \nundertake Order status enquiry. \nCu\nMa\n277 \nShopping Cart \nPurchasing Access \nShopping Cart Purchasing Access function provide an internet \ntechnology driven interface to the customer to undertake self-\nservice purchase. \nCu\nMa\n317 \nProduct Availability \nArea Checking \nProduct Availability Area Checking checks if CSP marketed \nproducts are availability in the customer area \n \n343 \nMass Transaction \nOrdering \nMass Transaction Ordering feed function of new orders. For bulk \nsales by e.g., affiliates and corporate customer self-empowered \nfulfillment provided e.g., by an internet technology driven interface \nfor bulk ordering. \nPro\nCo\nAc\n359 \nContract and SLA \ncreation \nContract and SLA Creation provides contract generation as well as \nappropriate service level agreements (SLAs) generation \n \n366 \nCustomer Order \nManagement \nCustomer Order Management provides an online access function \nto specific orders, to be used for management, monitoring and \ntracking for customer support and external agents for Upgrade of \ncustomer\u2019s products/services. \nCu\nMa\n379 \nProduct \nCustomization \nOffering \nManagement \nProduct Customization Offering Management provides the \nnecessary functionality to manage the customer personalized \nproposals, taking into account the customer location, needs, \ncurrent products, as well as the service provider's products, sales \nemphasis and targets, etc. \nSa\n387 \nSales Metrics \nCalculation \nSales Metrics Calculation provides sales metrics calculation \naccording to pre-defined metrics rules"}
{"tmforumApiId": "TMFC002", "id": "TMFC002-chunk-6", "chunkIndex": 6, "totalChunks": 8, "apiName": "Product Order Capture Validation v2.1.0", "title": "TMFC002_Product_Order_Capture_Validation_v2.1.0 (Part 6/8)", "documentType": "Tmforum api user guide", "text": "\u00a9 TM Forum 2024. All Rights Reserved.                                                                                   Page 19 of 33 \nFunction \nID \nFunctional \nFramework \nFunction \nFunction Description \nAg\nFu\n388 \nSales Order \nReporting \nSales Order Reporting provides reporting of order handoff. \nSa\n716 \nOrder Data \nEnrichment \nOrder Data Enrichment function acquire missing order data from \nsurrounding systems (often values taken from catalogs and \ninventories, billing, fraud, etc.) or from external 3rd party systems \n(like country's common address or credit check system). \nCu\nMa\n717 \nCalculated Order \nData Enrichment  \nCalculated Order Data Enrichment calculates missing order data \nvalues on-the-fly from existing data and ordering rules. E.g., \nContract end dates, Discounted period, etc. \nCu\nMa\n718 \nCustomer Order \nValidation \nCustomer Order Validation Function ensures that the qualified \norder is valid in any moment of order lifecycle, usually as data \nbecome available. Validation ensures early fallout which is less \ncostly than encountering errors in later stages of order handling. \nCu\nMa\n719 \nCustomer Order \nStorage \nThe Customer Order Storage function stores the valid and \ncomplete customer orders into an appropriate data storage. \nCu\nMa\n720 \nCustomer Order \nSearching \nCustomer Order Searching function makes the customer orders \navailable to other applications. \n  \n727 \nProduct Offer to \nCustomer \nVerification 2 \nProduct Offer to Customer Verification enables and verifies \nthe configuration of the commercial offer chosen by the \ncustomer. \nThe configuration consist of technical, functional, and \ncommercial prerequisites and preferences. \nCu\nMa\n756 \nFallout Rule Based \nError Correction \nFallout Rule Based Error Correction function provides the \ncapability to handle various errors or error types based on pre-\nFa\nMa\n\n\n\u00a9 TM Forum 2024. All Rights Reserved.                                                                                   Page 20 of 33 \nFunction \nID \nFunctional \nFramework \nFunction \nFunction Description \nAg\nFu\ndefined rules. These rules can facilitate autocorrection, correction \nassistance, placement of errors in the appropriate queues for \nmanual handling, as well as access to various systems via the \nFallout Interface Bus. \n934 \nSales Negotiation \nSupport \nSales Negotiation Support provides support for negotiating the sale \nby providing multiple quotations as needed, taking into account the \ncustomer data, customer qualification, and offers made. \nFunctionality includes access to products, product pricing, \nscheduling of appointments if a dispatch is necessary, etc. \nSales Negotiation generatesan order or service request. \nA Customer order request. \nCustomer order request generation \u2013 send solution design details \nto update proposal product order in Customer Order Management \nsystems \nService order request generation \u2013 send solution design details to \nupdate service order in Service Order Management systems (after \ncustomer agreement \u2013 part of handoff to fulfillment) \nSa\nMa\n1063 \nSales Quote \nManagement \nSales Quote Management creates and manages quotes, including \ninternal approval. \nSa\nMa\n1071 \nCustomer Credit \nEligibility \nValidation \nCustomer Credit Eligibility Validation function checks the \nCustomer Credit Eligibility, considering the payment history \nand the credit scores for a Customer, only the predictive \ncredit score for a Prospective Customer. \nCu\nMa\n1109 \nCustomer Order \nQuote Calculation \nCustomer Order Quote Calculation Function enables the \nelaboration of an estimate, including configuration, pricing \nand feasibility elements, thanks to the specific configuration, \nCu\nMa\n\n\n\u00a9 TM Forum 2024. All Rights Reserved.                                                                                   Page 21 of 33 \nFunction \nID \nFunctional \nFramework \nFunction \nFunction Description \nAg\nFu\neligibility and valuation functions, identifying the various \nrelevant interlocutors (through the Sales Interlocutors \nManagement function), the scenarios to be realized and the \nlot. \n1110 \nCustomer Order \nQuote Creation \nCustomer Order Quote Materialization Function materializes \nvia a document and/or associated to a simplified identification \nmean (QR code, bar code) to ease later interactions and \nidentification of the quotation, and sent to the customer. \nCu\nMa\n1123 \nProduct Order \nInitialization \nThe Product Order Initialization Function creates the Product \nOrder and initializes it with the operations and default \nconfiguration on the mandatory products of the selected offer, \nor target offer in case of migration. \nPr\nCo\nAc\n1200 \nCustomer Loyalty \nSubscription \nActivation \nCustomer Loyalty Subscription Activation function manages \nLoyalty programs activation and deactivation. It includes  \n- assigning one or more subgroups to which the customer \nbelongs \n- assigning welcome points & send welcome messages  \n- generate the unique Loyalty-identifier \nPr\nCo\nAc\n1325 \nCustomer Order \nDistribution \nCustomer Order Distribution function enables distributing \nfinalized customer orders to any parties and systems that \nneed the order information and/or the notification that the \norder has been finalized. \nCu\nMa\n1 TMFC027 Product Configurator covers the part related to Product Catalog rules checking. Only stock contr\nProduct Order Capture & Validation. \n2 TMFC027 Product Configurator covers the part related to Product Catalog rules checking at commercial an\ntechnical eligibility controls are triggered by TMFC002 Product Order Capture & Validation.\n\n\nf\n3. TM Forum Open APIs & Events \nThe following part covers the APIs and Events; This part is split in 3: \n\u2022 \nList of Exposed APIs - This is the list of APIs available from this component. \n\u2022 \nList of Dependent APIs - In order to satisfy the provided API, the component \ncould require the usage of this set of required APIs. \n\u2022 \nList of Events (generated & consumed ) - The events which the component \nmay generate are listed in this section along with a list of the events which it \nmay consume. Since there is a possibility of multiple sources and receivers for \neach defined event. \n3.1. Exposed APIs \nThe following diagram illustrates API/Resource/Operation:  \n \n \n \n\n\nAPI ID \nAPI Name \nAPI \nVersion \nMandatory / \nOptional \nResource \nOperations \nTMF622 Product \nOrdering \nManagement \n4 \nMandatory \nproductOrder \nGET \nGET /id \nPOST \nPATCH \nDELETE \n  \n  \n  \n  \ncancelProductOrder GET \nGET /id \nPOST \nTMF648 Quote \nManagement \n4 \nOptional \nquote \nGET \nGET /id \nPOST \nPATCH \nDELETE \nTMF663 Shopping Cart \nManagement \n4 \nOptional \nshoppingCart \nGET \nGET /id \nPOST \nPATCH \nDELETE \nTMF688 TMF688 Event \n  \nOptional \n  \n  \nTMF701 Process Flow \nManagement \n4 \nOptional \nprocessFlow \nGET \nGET /id \nPOST \nDELETE \n  \n  \n  \n  \ntaskFlow \nGET \nGET /id \nPATCH \n \n \n \n\n\n3.2. Dependent APIs \nFollowing diagram illustrates API/Resource/Operation:"}
{"tmforumApiId": "TMFC002", "id": "TMFC002-chunk-7", "chunkIndex": 7, "totalChunks": 8, "apiName": "Product Order Capture Validation v2.1.0", "title": "TMFC002_Product_Order_Capture_Validation_v2.1.0 (Part 7/8)", "documentType": "Tmforum api user guide", "text": "The APIs called by this component and provided by other components are: \nAPI \nID \nAPI Name \nAPI \nVersion \nMandatory \n/ Optional \nResource \nOperation \nRationales \nTMF6\n20 \nProduct \nCatalog \nManagem\nent \nv4 \nMandatory \nproductCategory \nGet, Get \n/id \nminimum \nconsistency \ncheck \n \n \n \n \nproductOffering \nGet, Get \n/id \n \n \n \n \n \nproductOfferingPrice \nGet, Get \n/id \n \n \n \n \n \nproductSpecification \nGet, Get \n/id \n \nTMF6\n29 \nCustomer \nManagem\nent \nv4 \nOptional \n \nGet \n \nTMF6\n32 \nParty \nManagem\nent \nv4 \nOptional \nindividual \nGet, Get \n/id \n \n \n \n \n \norganization \nGet, Get \n/id \n \nTMF6\n37 \nProduct \nInventory \nManagem\nent \nv4 \nMandatory \nproduct \nGet, Get \n/id, Post, \nPatch \nminimum \nconsistency \ncheck (case \nof update of \nan existing \nproduct) \nTMF6\n38 \nService \nInventory \nManagem\nent  \nv4 \nOptional \nservice \nGet, Get \n/id \n \nTMF6\n39 \nResource \nInventory \nManagem\nent  \nv4 \nOptional \nresource \nGet, Get \n/id \n \nTMF6\n45 \nService \nQualificatio\nn \nManagem\nent \nv4 \nOptional \ncheckServiceQualific\nation \nGet, Get \n/id, Post, \nPatch \n \n \n \n \n \nqueryServiceQualifica\ntion \nGet, Get \n/id, Post, \nPatch \n \nTMF6\n46 \nAppointme\nnt \nv4 \nOptional \nappointment \nGet, Get \n/id, Post, \n \n\n\nAPI \nID \nAPI Name \nAPI \nVersion \nMandatory \n/ Optional \nResource \nOperation \nRationales \nManagem\nent \nPatch, \nDelete \n \n \n \n \nsearchTimeSlot \nGet, Get \n/id, Post, \nPatch, \nDelete \n \nTMF6\n51 \nAgreement v4 \nOptional \nagreement \nGet, Get \n/id \n \nTMF6\n66 \nAccount \nManagem\nent \nv4 \nOptional \nbillingAccount \nGet, Get \n/id \n \nTMF6\n69 \nParty Role \nManagem\nent \nv4 \nOptional \npartyRole \nGet, Get \n/id \n \nTMF6\n72 \nTMF672 \nUser Role \nPermission \nAPI \n \nOptional \n \nGet \n \nTMF6\n73 \nGeographi\nc Address \nManagem\nent \nv4 \nOptional \ngeographicAddress \nGet, Get \n/id \n \n \n \n \n \ngeographicSubAddre\nss \nGet, Get \n/id \n \n \n \n \n \ngeographicAddressV\nalidation \nGet, Get \n/id, Post, \nPatch \n \nTMF6\n74 \nGeographi\nc Site \nManagem\nent \nv4 \nOptional \ngeographicSite \nGet, Get \n/id \n \nTMF6\n76 \nPayment \nManagem\nent \nv4 \nOptional \npayment \nGet, Get \n/id \n \nTMF6\n79 \nProduct \nOffering \nQualificatio\nn \nManagem\nent \nv4 \nOptional \nproductOfferingQualifi\ncation \nGet, Get \n/id, Post, \nPatch \n \nTMF6\n83 \nParty \nInteraction \nMgt \nv4 \nOptional \npartyInteraction \nGet, Get \n/id \n \nTMF6\n85 \nResource \nPool \n \nOptional \n \nGet, Post, \nPatch \n \n\n\nAPI \nID \nAPI Name \nAPI \nVersion \nMandatory \n/ Optional \nResource \nOperation \nRationales \nManagem\nent \nTMF6\n87 \nStock \nManagem\nent \nv4 \nOptional \ncheckProductStock \nGet, Get \n/id, Post, \nDelete \n \n \n \n \n \nqueryProductStock \nGet, Get \n/id, Post, \nDelete \n \n \n \n \n \nreserveProductStock \nGet, Get \n/id, Post, \nDelete \n \n \n \n \n \nproductStock \nGet, Get \n/id \n \nTMF6\n88 \nTMF688 \nEvent \nv4 \nOptional \n \nGet, Post \n \nTMF7\n01 \nProcess \nFlow \nManagem\nent \nv4 \nOptional \nprocessFlow \nGet, Get \n/id, Post, \nPatch \n \n \n \n \n \ntaskFlow \nGet, Get \n/id, Post, \nPatch \n \nTMF7\n16 \nResource \nReservati\non \nv4 \nOptional \nresourceReservation \nGet, Get \n/id, Post, \nPatch, \nDelete \n \n  \n  \n  \n  \ncancelResourceRese\nrvation \nGet, Get \n/id, Post \n \nTMF7\n60 \nProduct \nConfigura\ntion \nManagem\nent \nv5 \nOptional \ncheckProductConfigu\nration \nGet, Get \n/id, Post \n \n  \n  \n  \n  \nqueryProductConfigur\nation \nGet, Get \n/id, Post \n \n \nNOTE: Geographic Location Management API (TMF675) is available in preview \nversion. As soon as the interface will be published it will be added to the table. \nNOTE: new API TMF716 Resource Reservation v4 taken into account to replace \nTMF685 Resource Pool Management. \n\n\n3.3. Events \nThe diagram illustrates the Events which the component publishes and the Events that \nthe component subscribes to and then receives. Both lists are derived from the APIs \nlisted in the preceding sections. \nThe type of event could be: \n\u2022 \nCreate: a new resource has been created (following a POST). \n\u2022 \nDelete: an existing resource has been deleted. \n\u2022 \nAttributeValueChange: an attribute from the resource has changed - event \nstructure allows to pinpoint the attribute. \n\u2022 \nInformationRequired: an attribute should be valued for the resource preventing \nto follow nominal lifecycle - event structure allows to pinpoint the attribute. \n\u2022 \nStateChange: resource state has changed. \n \n \n \n\n\n4. Machine Readable Component Specification \nRefer to the ODA Component Map on the TM Forum website for the machine-readable \ncomponent specification files for this component. \n \n \n \n\n\n5. References \n5.1. TMF Standards related versions \nStandard \nVersion(s) \nSID \n24.0 \neTOM \n24.0 \nFunctional Framework  \n24.0 \n5.2. Jira References \n \n5.2.1. \neTOM \n\u2022 \nReview L2 1.2.9 - Product Offering Purchasing and clarify L3 definitions and \ninbound / outbound terminology + Delete L3 1.2.9.8 - Report Product Offering \nPurchase as redundant with 1.3.3.6 - Report Customer Order Handling and \n1.6.8.6 - Report Business Partner Orders \n\u2022 \nReview L3 1.3.3.4 - Complete Customer Order definition as it mixed customer \ninformation, customer contracts and service orders. And review L3 1.3.3.7 - \nClose Customer Order definition and clarify close/complete terminology and link \nwith 1.3.3.4 - Complete Customer Order (do we need 2 L3 ?). \n\u2022 \n1.3.3.8 - Manage Order Fallout: as this L3 is shared by POCV and POOM \ncomponents (to be consistent with Functional Framework mapping), clarify \nwhich type of fallout need to be managed during the order delivery \norchestration (at POOM level) and which need to be managed at Product Order \nCapture and Follow-Up level (by POCV). \n5.2.2. \nSID \n5.2.3. \nFunctional Framework \nThese updates need to be studied for R22.0 or R22.5 \n\u2022 \nFunction 204 - Customer Order Completion: rename the function \"Customer \nOrder Entry Finalization\" as \"completion\" is confusing here \n\u2022 \nFunction 269 - Installation Preference Configuration: review the definition of this \nfunction or delete it (why limited to installation ? Why a dedicated function to \nprovide an interface for the customer to capture a set of information ?) \n\u2022 \nAdd function(s) to describe the closure step of the customer order. \n\u2022 \nFunction 934 - Sales Negotiation Support: review definition and delete part \nrelated to service order generation. \n5.2.4. \nAPI \n\u2022 \nHow can we trigger the Product Configurator for configuration ? Refer to JIRA \ndetailed in Product Configurator specifications \n\n\n\u2022 \nHow can we evaluate Customer Credit (refer to Function 205 for definition) : \ncan this check be added in TMF696 - Risk Management API ? \n AP-6002 - \nTMF696 - create real Task resource(s)  BACKLOG  \n\u2022 \nHow can we manage/represent mass operations in general, and mass \ntransaction ordering in particular ? \n5.2.5. \nFurther resources \nThis component is involved in use cases described in IG1228 How to use ODA - Using \nOpen APIs to realize Use Cases:"}
{"tmforumApiId": "TMFC002", "id": "TMFC002-chunk-8", "chunkIndex": 8, "totalChunks": 8, "apiName": "Product Order Capture Validation v2.1.0", "title": "TMFC002_Product_Order_Capture_Validation_v2.1.0 (Part 8/8)", "documentType": "Tmforum api user guide", "text": "6. Administrative Appendix \n6.1. Document History \n6.1.1. \nVersion History \nVersion \nNumber \nDate Modified \nModified by: \nDescription of changes \n1.0.0 \n29 Mar 2022 \nGaetano \nBiancardi , \nAnastasios \nSarantis , Sylvie \nDemarest \nEmmanuel A. \nOtchere \nFirst version of document  \n1.0.1 \n25 Jul 2023  \nIan Turkington \nNo content changed, simply a layout \nchange to match template 3. \nSeparated the YAML files to a \nmanaged repository. \n2.0.1 \n19 Aug 2024  \nSylvie Demarest  \nUpdated Component Template \nAligned to Frameworks 23.5 \nAdd of TMF760 Product \nConfiguration Management as \ndependent API. \nTMF685 Resource Reservation Pool \nAPI replaced by TMF716 Resource \nReservation API as dependent API \n2.0.1  \n06 Sep 2024  \nAmaia White  \nFinal edits prior to publication  \n2.1.0 \n12 Nov 2024  \nGaetano \nBiancardi  \n\u2022 \nAPI version, only major \nversion to be specified \n2.1.0 \n26 Nov 2024  \nAmaia White  \nFinal edits prior to publication  \n6.1.2. \nRelease History \nRelease \nStatus \nDate Modified \nModified by: \nDescription of changes \nPre-production \n29 Mar 2022  \nGoutham Babu \nInitial release \nProduction \n20-May-2022 \nAdrienne Walcott \nUpdated to reflect TM Forum \nApproved Status \nPre-production \n14 Aug 2023  \nAmaia White  \nNew release 1.0.1  \nProduction \n06-Oct-2023 \nAdrienne Walcott \nUpdated to reflect TM Forum \nApproved status \nPre-production  26 Nov 2024  \nAmaia White  \nNew release 2.1.0  \n\n\nRelease \nStatus \nDate Modified \nModified by: \nDescription of changes \nProduction \n07-Mar-2025 \nAdrienne Walcott \nUpdated to reflect TM Forum \nApproved status \n6.1.3. \nAcknowledgments \nTeam Member (@mention) \nCompany \nRole* \nGaetano Biancardi  \nAccenture \nReviewer  \nAnastasios Sarantis  \nVodafone \nReviewer  \nSylvie Demarest \nOrange  \nEditor  \nElisabeth Andersson   \nMatrixx \nReviewer  \nEmmanuel A. Otchere  \nHuawey \nAdditional Input \nIan Turkington  \nTM Forum \nAdditional Input \nHugo Vaughan (TM Forum)  \nTM Forum \nAdditional Input \n*Select from: Project Chair, Project Co-Chair, Author, Editor, Key Contributor, \nAdditional Input, Reviewer"}
