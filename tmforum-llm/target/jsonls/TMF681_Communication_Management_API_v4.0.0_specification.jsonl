{"tmforumApiId": "TMF681", "id": "TMF681-chunk-1", "chunkIndex": 1, "totalChunks": 9, "apiName": "Communication Management API v4.0.0 specification", "title": "TMF681_Communication_Management_API_v4.0.0_specification (Part 1/9)", "documentType": "Tmforum api user guide", "text": "TM Forum Specification \n \n \nCommunication API User Guide \n \n \n \n \n \nTMF681 \nTeam Approved Date: 28-May-2020 \n \n \nRelease Status: Production \nApproval Status: TM Forum Approved \nVersion 4.0.1 \nIPR Mode: RAND \n\n\nNOTICE \nCopyright \u00a9 TM Forum 2020. All Rights Reserved. \n \nThis document and translations of it may be copied and furnished to others, and derivative works that comment on \nor otherwise explain it or assist in its implementation may be prepared, copied, published, and distributed, in \nwhole or in part, without restriction of any kind, provided that the above copyright notice and this section are \nincluded on all such copies and derivative works. However, this document itself may not be modified in any way, \nincluding by removing the copyright notice or references to TM FORUM, except as needed for the purpose of \ndeveloping any document or deliverable produced by a TM FORUM Collaboration Project Team (in which case the \nrules applicable to copyrights, as set forth in the TM FORUM IPR Policy, must be followed) or as required to \ntranslate it into languages other than English. \n \nThe limited permissions granted above are perpetual and will not be revoked by TM FORUM or its successors or \nassigns. \n \nThis document and the information contained herein is provided on an \"AS IS\" basis and TM FORUM DISCLAIMS \nALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE \nINFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP RIGHTS OR ANY IMPLIED WARRANTIES OF \nMERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. \n \nTM FORUM invites any TM FORUM Member or any other party that believes it has patent claims that would \nnecessarily be infringed by implementations of this TM Forum Standards Final Deliverable, to notify the TM FORUM \nTeam Administrator and provide an indication of its willingness to grant patent licenses to such patent claims in a \nmanner consistent with the IPR Mode of the TM FORUM Collaboration Project Team that produced this deliverable. \n \nThe TM FORUM invites any party to contact the TM FORUM Team Administrator if it is aware of a claim of \nownership of any patent claims that would necessarily be infringed by implementations of this TM FORUM \nStandards Final Deliverable by a patent holder that is not willing to provide a license to such patent claims in a \nmanner consistent with the IPR Mode of the TM FORUM Collaboration Project Team that produced this TM FORUM \nStandards Final Deliverable. TM FORUM may include such claims on its website but disclaims any obligation to do \nso. \n \nTM FORUM takes no position regarding the validity or scope of any intellectual property or other rights that might \nbe claimed to pertain to the implementation or use of the technology described in this TM FORUM Standards Final \nDeliverable or the extent to which any license under such rights might or might not be available; neither does it \nrepresent that it has made any effort to identify any such rights. Information on TM FORUM's procedures with \nrespect to rights in any document or deliverable produced by a TM FORUM Collaboration Project Team can be \nfound on the TM FORUM website. Copies of claims of rights made available for publication and any assurances of \nlicenses to be made available, or the result of an attempt made to obtain a general license or permission for the \nuse of such proprietary rights by implementers or users of this TM FORUM Standards Final Deliverable, can be \nobtained from the TM FORUM Team Administrator. TM FORUM makes no representation that any information or \nlist of intellectual property rights will at any time be complete, or that any claims in such list are, in fact, Essential \nClaims. \n \n \n\n\nDirect inquiries to the TM Forum office: \n \n4 Century Drive, Suite 100 \nParsippany, NJ 07054, USA \nTel No. +1 973 944 5100 \nFax No. +1 973 998 7196 \nTM Forum Web Page: www.tmforum.org"}
{"tmforumApiId": "TMF681", "id": "TMF681-chunk-2", "chunkIndex": 2, "totalChunks": 9, "apiName": "Communication Management API v4.0.0 specification", "title": "TMF681_Communication_Management_API_v4.0.0_specification (Part 2/9)", "documentType": "Tmforum api user guide", "text": "Table of Contents \nNOTICE ....................................................................................................................................................................... 2 \nTable of Contents ..................................................................................................................................................... 4 \nList of Tables ............................................................................................................................................................. 5 \nIntroduction .............................................................................................................................................................. 6 \nMAPPING WITH SID ABE .................................................................................................................................... 7 \nMAPPING WITH ETOM PROCESS ...................................................................................................................... 8 \nDISTINCTION BETWEEN THIS API AND EVENT MANAGEMENT API .......................................................... 8 \nDISTINCTION BETWEEN THIS API AND CHANGE REQUEST API ............................................................... 11 \nSAMPLE USE CASES ....................................................................................................................................................... 14 \nCASE1: COMMUNICATION WITH CUSTOMER .............................................................................................. 14 \nCASE2: COMMUNICATION WITH AGENT (CSR) ........................................................................................... 15 \nSupport of polymorphism and extension patterns ...................................................................................................... 17 \nRESOURCE MODEL ........................................................................................................................................................ 18 \nManaged Entity and Task Resource Models ..................................................................................................... 18 \nCommunication Message resource ....................................................................................................................... 18 \nNotification Resource Models .............................................................................................................................. 23 \nCommunication Message Attribute Value Change Event ..................................................................................... 24 \nCommunication Message State Change Event ...................................................................................................... 25 \nAPI OPERATIONS ........................................................................................................................................................... 26 \nOperations on Communication Message ................................................................................................................. 26 \nList communication messages ............................................................................................................................... 26 \nRetrieve communication message ........................................................................................................................ 29 \nCreate communication message ........................................................................................................................... 30 \nPatch communication message ............................................................................................................................. 35 \nDelete communication message ........................................................................................................................... 37 \nAPI NOTIFICATIONS....................................................................................................................................................... 38 \nRegister listener ........................................................................................................................................................ 38 \nUnregister listener .................................................................................................................................................... 39 \nPublish Event to listener ........................................................................................................................................... 39 \nAcknowledgements ...................................................................................................................................................... 41 \nVersion History.......................................................................................................................................................... 41 \nRelease History ......................................................................................................................................................... 41 \nContributors to Document ........................................................................................................................................ 42 \n\n\nList of Tables \nN/A"}
{"tmforumApiId": "TMF681", "id": "TMF681-chunk-3", "chunkIndex": 3, "totalChunks": 9, "apiName": "Communication Management API v4.0.0 specification", "title": "TMF681_Communication_Management_API_v4.0.0_specification (Part 3/9)", "documentType": "Tmforum api user guide", "text": "Introduction \nThe following document is the specification of the REST API for Communication management. It includes the model \ndefinition as well as all available operations. \n \nIt provides a standardized mechanism for Communication management such as creation, update, retrieval, deletion and \nnotification of the system communication events. \nCommunication API manages the following data resources: \n- \nCommunication Message \no Communication message means a notification approach in the format of a message which can be \ndispatched (sent) to the certain user by the system with the content which can be felt and understood by \nthe recipient. The user can be either a final customer or a customer service agent. The message can \nreach the customer in different interaction channels, including: email, short message, mobile app \nnotification (push).  \nNormally the communication is implemented as a common shared service for all the IT applications. \nWhenever there is an application which needs to manage or send the message to the customer, this \napplication can invoke the \u201ccommunication\u201d API to dispatch the notification. \n \nTo help clarify the concept of \u201ccommunication API\u201d, here all the possible \u201cman-machine\u201d contact \napproaches are listed as below. The \u201ctick\u201d shows the interaction types for which the \u201ccommunication \nAPI\u201d is designed to support. \n \nBusiness Interaction Method \nCommunication API Related \nSMS to customer \n\u221a \nEmail to customer \n\u221a \nMobile app push message to customer \n\u221a \nProactive calling to the customer  \n(human initiated, i.e. person-call-person) \n \nProactive calling to the customer \n(system initiated, i.e. machine-call-person) \n \nFace to face contact \n \nCustomer browsing web page, open mobile app, \ncalling IVR etc. \n \n \n\n\nCommunication API performs the following operation on the resource of \u201cCommunication Message\u201d.  There are two \ntypes of operations provided in this API. One is the management of the request message body. Another is for sending the \ncommunication message to the customer. \n \nOperations for Communication Message body management \n- \nRetrieval of an existing Communication Message depending on filter criteria \n- \nCreation of a new Communication Message \n- \nPartial update of an existing Communication Message \n- \nDeletion of an existing Communication Message  \n- \nNotification of events: \no Creation of Communication Message  \no Updating Communication Message \no Deletion of Communication Message \n \nOperations for sending Communication Message. \n- \nSend a message, including: \no Send a new message with the whole communication message body (POST operation) \no Send a message with the predefined communication message body (PATCH operation) \n \nMAPPING WITH SID ABE \nCommunication Message is mapped to \u201cBusiness Interaction ABE:: Notification ABE\u201d in TMF Information \nFramework (SID). \nThe Business Interaction ABE is illustrated as the diagram below: \n \n \nBusinessInteractionReferences\nBusinessInteraction\nID : String\ninteractionDate : date\ndescription : string\ninteractionDateComplete ...\ninteractionStatus : string\n0..n\n0..n\n0..n\n0..n\nRequest\nResponse\nNotification\nAgreement\n\n\nMAPPING WITH ETOM PROCESS \nCommunication API can be mapped to the \u201cCustomer Interaction Management\u201d in TM Forum Process Framework \n(eTOM).  \nThe relevant process is:  Notify Customer. \n \nThe definition of TM Forum Process Framework is: \nCategory: (3) eTOM Process Type  \nProcess Identifier: 1.3.5.5  \nOriginal Process Identifier: 1.1.1.18.5  \nMaturity Level: 4  \nDescription \nNotify the customer when interesting events happen.  \nExtended Description \nThe purpose of this process is to notify the customer when events related to existing interactions or to significant \ncustomer experience happen. Some notifications can be sent immediately using interactive media (such as SMS, \nPush to applications, etc.) and other notifications can be sent later using asynchronous media such as mail. \n \nDISTINCTION BETWEEN THIS API AND EVENT MANAGEMENT API \nThis API and Event Management API own some similarities.  \n\n\nThe distinctions between them are explained in the table below: \nComparison Points \nCommunication API \nEvent Management API \nDefinition \nCommunication message means a \nmessage which can be dispatch (sent) to \nthe certain user by the system in the \nformat which can be felt and \nunderstood by the recipient \nAn Event represents a change in the state of a \nconfiguration item, service or business data \nentity \nUser Role \nSender: Enterprise (e.g. TelCo).   \nReceiver:  Customer, agent, O&M staff \nIT System.   \nNo natural person (customer or agent) is \ninvolved.  \nBusiness Scenario \nThe enterprise needs to send the \nnotification information to the \ncustomer or the agent. \nNote: It is used to support the direct \ninteraction with the users. \n \nIt can signal status changes or exceptions that \nallow the appropriate person or system to \nperform early response actions to ensure \nservice performance and continuity or used as \na trigger for automation run books. \nNote: It is used to manage the intrinsic event \ninside the system. The event is always created \nin the EM backend referring to the internal \nEvent Management system.  \nRelevant IT System \nInteraction or contact module of the \nsystem \nAny module inside the IT system \n\n\nComparison Points \nCommunication API \nEvent Management API \nData Model \nContent of communication message. \nThe content is visible to the user \n(customer, et al) \nThe description of how an event is triggered \nand handled.  \nIt has no \u201ccontent\u201d to contain the concrete \ncommunication message information. The \n\u201crelated object\u201d in this API does not distinctly \nexpress the meaning of content. The \u201crelated \nobject\u201d could be the \u201cattachment\u201d of the \nmessage. \nIt has no \u201csender\u201d and \u201creceiver\u201d for the \ncommunication message information. The \nexplanation of \u201crelated party\u201d in this API has an \nexample which is \u201cassignee support group\u201d. It \nshows this API parameter is used to depict who \nis the \u201cevent handler\u201d. \nInformation \nFramework (SID) \nMapping  \nCommon Business Entities Domain \nBusiness Interaction ABE \nNotification Entity \nA communication that informs about \nsomething that has or will happen. A \nNotification is typically one-sided, in \nthat no Response is expected. A \nNotification can be created as the result \nof a Request. \nCommon Business Entities Domain \nEvent ABE \nThe Event ABE contains entities that are used \nto represent events, their occurrence and their \nrecording within systems. \nOperation \n1) CRUD of communication message in \nIT system, i.e., create, read, update and \ndeletion. \n2) Send the communication message to \nthe user \nCreate event (i.e. trigger the event) in the \nsystem. \nQuery event \nUpdate event"}
{"tmforumApiId": "TMF681", "id": "TMF681-chunk-4", "chunkIndex": 4, "totalChunks": 9, "apiName": "Communication Management API v4.0.0 specification", "title": "TMF681_Communication_Management_API_v4.0.0_specification (Part 4/9)", "documentType": "Tmforum api user guide", "text": "Comparison Points \nCommunication API \nEvent Management API \nRelationship \nIn the widest conception, any system action can be an event, such as the creation of new \noffering, execution of order, adding one item into the shopping cart. On this level, the \n\u201ccommunication message\u201d is also an event. \nIn the narrow conception, event is for the technical terminology to describe the one-off \nchange of the certain module, such as an event of \u201cmemory stack overflow\u201d or \u201cswitch the \nweb server\u201d. Such event is collected by the Event Manager to monitor the status of whole \nrunning system.  \nAccording to the definition of Event Management API, this API focuses more on the \nsecond concept. \u201cCommunication\u201d is also taking place in one-off mode, but it expresses \nthe interactive human-machine contact instead of the pure system action. \n \n \nDISTINCTION BETWEEN THIS API AND CHANGE REQUEST API \nThis API and Change Request API own some similarities.  \nThe distinctions between them are explained in the table below: \nComparison Points \nCommunication API \nChange Management API \nDefinition \nCommunication message means a \nmessage which can be dispatch \n(sent) to the certain user by the \nsystem in the format which can be \nfelt and understood by the \nrecipient \nChange Management process is to respond to the \ncustomer\u2019s changing business requirements. \nThe Change Management API provides the standard \nintegration capabilities between external \napplications and Change Management Application \nUser Role \nSender: Enterprise (e.g. TelCo).   \nReceiver:  Customer, agent, O&M \nstaff \nThe involved roles of the API can be: \n- \nChange Management Application \n- \nExternal application \n No natural person (customer or agent) is involved.  \n\n\nComparison Points \nCommunication API \nChange Management API \nBusiness Scenario \nThe enterprise needs to send the \nnotification information to the \ncustomer or the agent. \nNote: It is used to support the \ndirect interaction with the users. \n- \nAsset sharing \n- \nNFV MULTI-DIGITAL SERVICE PROVIDER offer \nthe products \n- \nManage Service of Network Operation or OSS \nData Model \nInherit from \u201cBusiness Interaction\u201d. \nContent of communication \nmessage. The content is visible to \nthe user (customer, et al). \nInherit from \u201cBusiness Interaction\u201d. \nnota bene:  The \u201cBusiness Interaction\u201d has a group \nof derivative objects. \u201cChange Request\u201d is mapped \nto \u201crequest\u201d object, not \u201cnotification\u201d. \nAdditionally, this API data model contains: \n- \nAttachment: This is also included in \nCommunication API \n- \nRelated Party: The role which is involved. This is \nalso included in Communication API \n- \nTarget Entity, Impacted Entity: both are \nreferred to \u201crealted party\u201d. \n- \nWork log \n\uf0fc \nIf the work log is a type of task for the \nstaff to execute, it is not required in \nCommunication API \n\uf0fc \nIf the work log is the pure log (record) of \nthe system action, it is a default function \nof the system. Communication API has \nthe \u201clog flag\u201d to indicate whether the log \nshould be generated after invoking API.  \nThe detail of the log is not required to be \nexplicitly expressed in Communication \nAPI \n- \nNote: It is an optional attribute. In \nCommunication API, the \u201ccontent\u201d is used to \ndescribe the purpose of the communication \nmessage. \nInformation \nFramework (SID) \nMapping  \nCommon Business Entities Domain \nBusiness Interaction ABE \nNotification Entity \nCommon Business Entities Domain \nBusiness Interaction ABE \n \n\n\nComparison Points \nCommunication API \nChange Management API \nOperation \n1) CRUD of communication \nmessage in IT system, i.e., create, \nread, update and deletion. \n2) Send the communication \nmessage to the user \nCRUD operations of the change request \n \n\n\nSAMPLE USE CASES \nExamples of use cases using Communication API is as following  \nCASE1: COMMUNICATION WITH CUSTOMER \n \n \nUse Case Id \nUC_TMF_CommunicationMessage_0001  \nUse Case Name \nCustomer receives communication message. \nSummary \nThis case describes the system manages the communication message \nand sends the communication message to the customer. \nActor(s) \nCustomer (person) \nPre-Conditions \nNA \nBegins When \nWhen the sales/marketing/service or any other business activities \nrequires notifying the customer, the application will initiate the \ncommunication message. \n\n\nUse Case Id \nUC_TMF_CommunicationMessage_0001  \nDescription \n1) The system needs to notify the customer about the delivery \nprogress & status. \n2) The system needs to notify the customer about the latest \npromotion (e.g. gift) information.  \n3) The system needs to notify the customer about the result of \npurchasing the offer. \nOr any other event happens which requires communication with \nthe customer.  \n4) The system manages the Communication Message, such as the \ncreation, modification, updating and deletion of the \ncommunication.  \n5) The system sends the communication and the customer receives \nthe communication content.  \nEnds When \nIn case of communication is done successfully: \nThe customer will receive the message. \nIn case of failure: \nThe system records the failure and the customer cannot know the \nmessage. Normally the system will retry to send the message when \nthe network or environment is available. \nPost-Conditions \n \nExceptions \n \nTraceability \n \n \nCASE2: COMMUNICATION WITH AGENT (CSR) \n \nUse Case Id \nUC_TMF_CommunicationMessage_0002 \nUse Case Name \nThe agent (CSR staff) receives communication message. \nSummary \nThis case describes the system manages the communication message \nand sends the communication message to the agent. \nActor(s) \nAgent staff (person) \n\n\nPre-Conditions \nNA \nBegins When \nWhen the sales/marketing/service or any other business activities \nrequires notifying the agent, the application will initiate the \ncommunication message. \nDescription \nThe company needs to notify the agent that the latest SLA policy in \nthe market has been published.  \nThe agent needs to know such company rule (policy) and obey it \nwhen working. \nEnds When \nIn case of communication is done successfully: \nThe agent will receive the message. \nIn case of failure: \nThe system records the failure and the customer cannot know the \nmessage. Normally the system will retry to send the message when \nthe network or environment is available. \nPost-Conditions \n \nExceptions \n \nTraceability"}
{"tmforumApiId": "TMF681", "id": "TMF681-chunk-5", "chunkIndex": 5, "totalChunks": 9, "apiName": "Communication Management API v4.0.0 specification", "title": "TMF681_Communication_Management_API_v4.0.0_specification (Part 5/9)", "documentType": "Tmforum api user guide", "text": "Support of polymorphism and extension patterns \n \nSupport of polymorphic collections and types and schema based extension is provided by means of a list of generic \nmeta-attributes that we describe below. Polymorphism in collections occurs when entities inherit from base \nentities, for instance an EnhancedCommunicationMessage inheriting properties from the CommunicationMessage \nentity. \nGeneric support of polymorphism and pattern extensions is described in the TMF API Design Guidelines. \nThe @type attribute provides a way to represent the actual class type of an entity.  All resources and sub-resources \nof this API have a @type attributes that can be provided when this is useful. \nThe @referredType can be used within reference entities to explicitly denote the actual entity type of the referred \nclass. Notice that in reference entities the @type, when used, denotes the class type of the reference itself and not \nthe class type of the referred object. However since reference classes are rarely sub-classed, @type is generally not \nuseful in reference objects. \nThe @schemaLocation property can be used in resources to allow specifying user-defined properties of an Entity or \nto specify the expected characteristics of an entity. \nThe @baseType attribute gives a way to provide explicitly the base of class of a given resource that has been \nextended. \n \n \n\n\nRESOURCE MODEL \nManaged Entity and Task Resource Models \nCommunication Message resource \nCommunication message means a notification approach in the format of a message which can be dispatched (sent) \nto the certain user by the system with the content which can be felt and understood by the recipient. The user can \nbe either a final customer or a customer service agent. The message can reach the customer in different interaction \nchannels, including: email, short message, mobile app notification (push). \nResource model \n \n\n\nField descriptions \nCommunicationMessage fields \nattachment \nA list of attachments (Attachment [*]). Any attachment associated with this message. \ncharacteristic \nA list of characteristics (Characteristic [*]). Any additional characteristic(s) of this \nmessage. \ncontent \nA string. The content of the communication message. \ndescription \nA string. Description for the whole object. \nhref \nA string. Hypertext Reference of the Communication Message. \nid \nA string. Unique identifier of Communication Message. \nlogFlag \nA boolean. \nmessageType \nA string. The type of message, such as: SMS, Email, Mobile app push notification. \npriority \nA string. The priority of the communication message. \nSmall number means higher priority. \nreceiver \nA list of receivers (Receiver [*]). The receiver(s) of this message. \nscheduledSendTime \nA date time (DateTime). The scheduled time for sending the communication message. \nsendTime \nA date time (DateTime). The time of sending communication message. \nsendTimeComplete \nA date time (DateTime). The time of completion of sending communication message. \nsender \nA sender (Sender). The sender of this message. \nstate \nA communication message state type (CommunicationMessageStateType). Status of \ncommunication message. \nsubject \nA string. The title of the message, necessary for the email and mobile app push. \ntryTimes \nAn integer. How many times do you want to retry the delivery of this message?. \nAttachment sub-resource \nComplements the description of an element (for instance a product) through video, pictures... \nattachmentType \nA string. Attachment type such as video, picture. \ncontent \nA base 6 4 (Base64). The actual contents of the attachment object, if embedded, \nencoded as base64. \ndescription \nA string. A narrative text describing the content of the attachment. \n\n\nhref \nAn uri (Uri). URI for this Attachment. \nid \nA string. Unique identifier for this particular attachment. \nmimeType \nA string. Attachment mime type such as extension file for video, picture and \ndocument. \nname \nA string. The name of the attachment. \nsize \nA quantity (Quantity). The size of the attachment. \nurl \nAn uri (Uri). Uniform Resource Locator, is a web page address (a subset of URI). \nvalidFor \nA time period. The period of time for which the attachment is valid. \nCharacteristic sub-resource \nDescribes a given characteristic of an object or entity through a name/value pair. \n@baseType \nA string. When sub-classing, this defines the super-class. \n@schemaLocation \nAn uri (Uri). A URI to a JSON-Schema file that defines additional attributes and \nrelationships. \n@type \nA string. When sub-classing, this defines the sub-class Extensible name. \ncharacteristicRelationship A list of characteristic relationships (CharacteristicRelationship [*]). Another \nCharacteristic that is related to the current Characteristic;. \nid \nA string. Unique identifier of the characteristic. \nname \nA string. Name of the characteristic. \nvalue \nAn any (Any). The value of the characteristic. \nvalueType \nA string. Data type of the value of the characteristic. \nCharacteristicRelationship sub-resource \nAnother Characteristic that is related to the current Characteristic;. \nid \nA string. Unique identifier of the characteristic. \nrelationshipType \nA string. The type of relationship. \nQuantity sub-resource \nAn amount in a given unit. \namount \nA float. Numeric value in a given unit. \nunits \nA string. Unit. \n\n\nReceiver sub-resource \nReceivers of the communication message. \nappUserId \nA string. ID of the mobile app user. \nemail \nA string. Receiver address of email, if the communication type is email. \nid \nA string. ID of the receiver. \nip \nA string. IP address of the receiver. \nname \nA string. Name of the receiver. \nparty \nA related party (RelatedParty). Related Entity reference. A related party defines party \nor party role linked to a specific entity. \nphoneNumber \nA string. Phone number of the receiver, if the communication type is SMS. \nRelatedParty sub-resource \nRelated Entity reference. A related party defines party or party role linked to a specific entity. \n@referredType \nA string. The actual type of the target instance when needed for disambiguation. \nname \nA string. Name of the related entity. \nhref \nAn uri (Uri). Hyperlink reference. \nid \nA string. unique identifier. \n@baseType \nA string. When sub-classing, this defines the super-class. \n@schemaLocation \nAn uri (Uri). A URI to a JSON-Schema file that defines additional attributes and \nrelationships. \n@type \nA string. When sub-classing, this defines the sub-class Extensible name. \nrole \nA string. Role played by the related party. \nSender sub-resource \nSender of the communication message. \nemail \nA string. Sender address of email, if the communication type is email. \nid \nA string. ID of the sender. \nname \nA string. Name of the sender. \nparty \nA related party (RelatedParty). Related Entity reference. A related party defines party \nor party role linked to a specific entity. \n\n\nphoneNumber \nA string. Phone number of the sender, if the communication type is SMS. \nJson representation sample \nWe provide below the json representation of an example of a 'CommunicationMessage' resource object \n{ \n    \"id\": \"1708\", \n    \"href\": \"https://serverlocation/tmf-api/communicationManagement/v4/communicationMessage/1708\", \n    \"subject\": \"News: the latest promotion for you\", \n    \"scheduledSendTime\": \"2020-02-10T00:00:00+01:00\", \n    \"state\": \"initial\", \n    \"description\": \"this is communication message for promotion\", \n    \"content\": \"Dear $Parameter1, Here is the information of the promotion $Parameter2\", \n    \"messageType\": \"SMS\", \n    \"characteristic\": [ \n        { \n            \"name\": \"$Parameter1\", \n            \"value\": \"Mr. Jones\", \n            \"valueType\": \"string\" \n        }, \n        { \n            \"name\": \"$Parameter2\", \n            \"value\": \"4G_LTE Discount 30%\", \n            \"valueType\": \"string\" \n        } \n    ], \n    \"attachment\": [ \n        { \n            \"url\": \"https://serverlocation/files/1\", \n            \"name\": \"File_XYZ_001\" \n        } \n    ], \n    \"sender\": { \n        \"id\": \"10099\", \n        \"name\": \"ABC Company\", \n        \"phoneNumber\": \"10086\" \n    }, \n    \"receiver\": [ \n        { \n            \"id\": \"10234\", \n            \"name\": \"Customer\", \n            \"phoneNumber\": \"008613811112222\", \n            \"party\": { \n                \"id\": \"991\", \n                \"href\": \"https://serverlocation/tmf-api/partyManagement/v4/individual/1\", \n                \"role\": \"customer\", \n                \"name\": \"John White\", \n                \"@referredType\": \"Individual\" \n            } \n        } \n    ] \n}"}
{"tmforumApiId": "TMF681", "id": "TMF681-chunk-6", "chunkIndex": 6, "totalChunks": 9, "apiName": "Communication Management API v4.0.0 specification", "title": "TMF681_Communication_Management_API_v4.0.0_specification (Part 6/9)", "documentType": "Tmforum api user guide", "text": "Notification Resource Models \n \n2 notifications are defined for this API \nNotifications related to CommunicationMessage: \n    - CommunicationMessageAttributeValueChangeEvent \n    - CommunicationMessageStateChangeEvent \nThe notification structure for all notifications in this API follow the pattern depicted by the figure below. \nA notification event resource (depicted by \"SpecificEvent\" placeholder) is a sub class of a generic Event structure \ncontaining at least an id of the event occurrence (eventId), an event timestamp (eventTime), and the name of the \nresource (eventType).  \nThis notification structure owns an event payload structure (\"SpecificEventPayload\" placeholder) linked to the \nresource concerned by the notification using the resource name as access field (\"resourceName\" placeholder). \n\n\n \nCommunication Message Attribute Value Change Event \nNotification CommunicationMessageAttributeValueChangeEvent case for resource CommunicationMessage \nJson representation sample \nWe provide below the json representation of an example of a 'CommunicationMessageAttributeValueChangeEvent' \nnotification event object \n{ \n    \"eventId\":\"00001\", \n    \"eventTime\":\"2015-11-16T16:42:25-04:00\", \n    \"eventType\":\"CommunicationMessageAttributeValueChangeEvent\", \n\n\n     \"event\": { \n        \"communicationMessage\" :  \n            {-- SEE CommunicationMessage RESOURCE SAMPLE --} \n    } \n} \n \nCommunication Message State Change Event \nNotification CommunicationMessageStateChangeEvent case for resource CommunicationMessage \nJson representation sample \nWe provide below the json representation of an example of a 'CommunicationMessageStateChangeEvent' \nnotification event object \n{ \n    \"eventId\":\"00001\", \n    \"eventTime\":\"2015-11-16T16:42:25-04:00\", \n    \"eventType\":\"CommunicationMessageStateChangeEvent\", \n     \"event\": { \n        \"communicationMessage\" :  \n            {-- SEE CommunicationMessage RESOURCE SAMPLE --} \n    } \n} \n \n \n \n\n\n API OPERATIONS \nRemember the following Uniform Contract: \nOperation on Entities \nUniform API Operation \nDescription \nQuery Entities \nGET Resource \nGET must be used to retrieve \na representation of a \nresource. \n \nCreate Entity \nPOST Resource \nPOST must be used to create \na new resource \nPartial Update of an Entity \nPATCH Resource \nPATCH must be used to \npartially update a resource \nRemove an Entity \nDELETE Resource \nDELETE must be used to \nremove a resource \nExecute an Action on an \nEntity  \nPOST on TASK Resource \nPOST must be used to \nexecute Task Resources \nOther Request Methods \nPOST on TASK Resource \nGET and POST must not be \nused to tunnel other request \nmethods. \n \nFiltering and attribute selection rules are described in the TMF REST Design Guidelines. \nNotifications are also described in a subsequent section. \n \nOperations on Communication Message \nList communication messages \n  GET /communicationMessage?fields=...&{filtering} \nDescription \n\n\nThis operation list communication message entities. \nAttribute selection is enabled for all first level attributes. \nFiltering may be available depending on the compliance level supported by an implementation. \n \nUsage Samples \nHere's an example of a request for retrieving multiple communication messages. \n \nRequest \n \nGET /tmf-api/communicationManagement/v4/communicationMessage?status=inprogress \nAccept: application/json \n \n \n \nResponse \n \n200 \n \n[ \n    { \n        \"id\": \"2708\", \n        \"href\": \"https://serverlocation/tmf-api/communicationManagement/v4/communicationMessage/2708\", \n        \"subject\": \"News: the latest promotion for you\", \n        \"scheduledSendTime\": \"2020-02-10T00:00:00+01:00\", \n        \"sendTime\": \"2020-02-10T05:00:00+01:00\", \n        \"sendTimeComplete\": \"2020-02-10T05:05:00+01:00\", \n        \"state\": \"completed\", \n        \"description\": \"this is communication message for promotion\", \n        \"content\": \"Dear $Parameter1, Here is the information of the promotion $Parameter2\", \n        \"messageType\": \"SMS\", \n        \"characteristic\": [ \n            { \n                \"name\": \"$Parameter1\", \n                \"value\": \"Mrs. Jones\", \n                \"valueType\": \"string\" \n            }, \n            { \n                \"name\": \"$Parameter2\", \n                \"value\": \"4G_LTE Discount 30%\", \n                \"valueType\": \"string\" \n            } \n        ], \n        \"attachment\": [ \n            { \n                \"url\": \"https://serverlocation/files/1\", \n                \"name\": \"File_XYZ_001\" \n            } \n        ], \n        \"sender\": { \n            \"id\": \"10099\", \n\n\n            \"name\": \"ABC Company\", \n            \"phoneNumber\": \"10086\" \n        }, \n        \"receiver\": [ \n            { \n                \"id\": \"10234\", \n                \"name\": \"Customer\", \n                \"phoneNumber\": \"008613222211111\", \n                \"party\": { \n                    \"id\": \"1091\", \n                    \"href\": \"https://serverlocation/tmf-api/partyManagement/v4/individual/1\", \n                    \"role\": \"customer\", \n                    \"name\": \"Sara White\", \n                    \"@referredType\": \"Individual\" \n                } \n            } \n        ] \n    }, \n    { \n        \"id\": \"2708\", \n        \"href\": \"https://serverlocation/tmf-api/communicationManagement/v4/communicationMessage/2708\", \n        \"subject\": \"News: the latest promotion for you\", \n        \"scheduledSendTime\": \"2020-02-10T00:00:00+01:00\", \n        \"state\": \"initial\", \n        \"description\": \"this is communication message for promotion\", \n        \"content\": \"Dear $Parameter1, Here is the information of the promotion $Parameter2\", \n        \"messageType\": \"Email\", \n        \"characteristic\": [ \n            { \n                \"name\": \"$Parameter1\", \n                \"value\": \"Mrs. Jones\", \n                \"valueType\": \"string\" \n            }, \n            { \n                \"name\": \"$Parameter2\", \n                \"value\": \"4G_LTE Discount 30%\", \n                \"valueType\": \"string\" \n            } \n        ], \n        \"attachment\": [ \n            { \n                \"url\": \"https://serverlocation/files/2\", \n                \"name\": \"File_XYZ_002\" \n            } \n        ], \n        \"sender\": { \n            \"id\": \"10099\", \n            \"name\": \"ABC Company\", \n            \"phoneNumber\": \"10086\" \n        }, \n        \"receiver\": [ \n            { \n                \"id\": \"10234\", \n                \"name\": \"Customer\", \n                \"phoneNumber\": \"008613222211111\", \n                \"party\": {"}
{"tmforumApiId": "TMF681", "id": "TMF681-chunk-7", "chunkIndex": 7, "totalChunks": 9, "apiName": "Communication Management API v4.0.0 specification", "title": "TMF681_Communication_Management_API_v4.0.0_specification (Part 7/9)", "documentType": "Tmforum api user guide", "text": "\"id\": \"1091\", \n                    \"href\": \"https://serverlocation/tmf-api/partyManagement/v4/individual/1\", \n                    \"role\": \"customer\", \n                    \"name\": \"Sara White\", \n                    \"@referredType\": \"Individual\" \n                } \n            } \n        ] \n    } \n] \n \nRetrieve communication message \n  GET /communicationMessage/{id}?fields=...&{filtering} \nDescription \nThis operation retrieves a communication message entity. \nAttribute selection is enabled for all first level attributes. \nFiltering on sub-resources may be available depending on the compliance level supported by an implementation. \n \nUsage Samples \nHere's an example of a request for retrieving a specific communication message. \n \nRequest \n \nGET /tmf-api/communicationManagement/v4/communicationMessage/3830 \nAccept: application/json \n \n \n \nResponse \n \n200 \n \n{ \n    \"id\": \"1708\", \n    \"href\": \"https://serverlocation/tmf-api/communicationManagement/v4/communicationMessage/1708\", \n    \"subject\": \"News: the latest promotion for you\", \n    \"scheduledSendTime\": \"2020-02-10T00:00:00+01:00\", \n    \"sendTime\": \"2020-02-10T00:00:00+01:00\", \n    \"sendTimeComplete\": \"2020-02-10T00:10:00+01:00\", \n    \"state\": \"completed\", \n    \"description\": \"this is communication message for promotion\", \n    \"content\": \"Dear $Parameter1, Here is the information of the promotion $Parameter2\", \n    \"characteristic\": [ \n        { \n            \"name\": \"$Parameter1\", \n\n\n            \"value\": \"Mr. Jones\", \n            \"valueType\": \"string\" \n        }, \n        { \n            \"name\": \"$Parameter2\", \n            \"value\": \"4G_LTE Discount 30%\", \n            \"valueType\": \"string\" \n        } \n    ], \n    \"attachment\": [ \n        { \n            \"url\": \"https://serverlocation/files/1\", \n            \"name\": \"File_XYZ_001\" \n        } \n    ], \n    \"sender\": { \n        \"id\": \"10099\", \n        \"name\": \"ABC Company\", \n        \"phoneNumber\": \"10086\" \n    }, \n    \"receiver\": [ \n        { \n            \"id\": \"10234\", \n            \"name\": \"Customer\", \n            \"phoneNumber\": \"008613811112222\", \n            \"party\": { \n                \"id\": \"991\", \n                \"href\": \"https://serverlocation//tmf-api/partyManagement/v4/individual/1\", \n                \"role\": \"customer\", \n                \"name\": \"John White\", \n                \"@referredType\": \"Individual\" \n            } \n        } \n    ] \n} \n \nCreate communication message \n  POST /communicationMessage \nDescription \nThis operation creates a communication message entity. \nMandatory and Non Mandatory Attributes \nThe following tables provide the list of mandatory and non mandatory attributes when creating a \nCommunicationMessage, including any possible rule conditions and applicable default values. Notice that it is up to \nan implementer to add additional mandatory attributes. \nMandatory Attributes \nRule \ncontent \n \nreceiver \n \n\n\nMandatory Attributes \nRule \nsender \n \nmessageType \n \n \nNon Mandatory Attributes \nRule \nattachment \n \ncharacteristic \n \ndescription \n \nlogFlag \n \npriority \n \nscheduledSendTime \n \nsendTime \n \nsendTimeComplete \n \nstate \n \nsubject \n \ntryTimes \n \n \nUsage Samples \nHere's an example of a request for creating a communication message. In this example the request is created in the \ninitial state. The message will be available for sending by later setting the status to inProgress. \n \nRequest \n \nPOST /tmf-api/communicationManagement/v4/communicationMessage \nContent-Type: application/json \n \n{ \n    \"subject\": \"News: the latest promotion for you\", \n    \"scheduledSendTime\": \"2020-02-10T00:00:00+01:00\", \n    \"state\": \"initial\", \n    \"description\": \"this is communication message for promotion\", \n    \"content\": \"Dear $Parameter1, Here is the information of the promotion $Parameter2\", \n    \"messageType\": \"SMS\", \n    \"characteristic\": [ \n        { \n            \"name\": \"$Parameter1\", \n            \"value\": \"Mr. Jones\", \n            \"valueType\": \"string\" \n        }, \n        { \n            \"name\": \"$Parameter2\", \n            \"value\": \"4G_LTE Discount 30%\", \n            \"valueType\": \"string\" \n        } \n    ], \n    \"attachment\": [ \n        { \n            \"url\": \"https://serverlocation/files/1\", \n\n\n            \"name\": \"File_XYZ_001\" \n        } \n    ], \n    \"sender\": { \n        \"id\": \"10099\", \n        \"name\": \"ABC Company\", \n        \"phoneNumber\": \"10086\" \n    }, \n    \"receiver\": [ \n        { \n            \"id\": \"10234\", \n            \"name\": \"Customer\", \n            \"phoneNumber\": \"008613811112222\", \n            \"party\": { \n                \"id\": \"991\", \n                \"href\": \"https://serverlocation/tmf-api/partyManagement/v4/individual/1\", \n                \"role\": \"customer\", \n                \"name\": \"John White\", \n                \"@referredType\": \"Individual\" \n            } \n        } \n    ] \n} \n \n \n \nResponse \n \n201 \n \n{ \n    \"id\": \"1708\", \n    \"href\": \"https://serverlocation/tmf-api/communicationManagement/v4/communicationMessage/1708\", \n    \"subject\": \"News: the latest promotion for you\", \n    \"scheduledSendTime\": \"2020-02-10T00:00:00+01:00\", \n    \"state\": \"initial\", \n    \"description\": \"this is communication message for promotion\", \n    \"content\": \"Dear $Parameter1, Here is the information of the promotion $Parameter2\", \n    \"messageType\": \"SMS\", \n    \"characteristic\": [ \n        { \n            \"name\": \"$Parameter1\", \n            \"value\": \"Mr. Jones\", \n            \"valueType\": \"string\" \n        }, \n        { \n            \"name\": \"$Parameter2\", \n            \"value\": \"4G_LTE Discount 30%\", \n            \"valueType\": \"string\" \n        } \n    ], \n    \"attachment\": [ \n        { \n            \"url\": \"https://serverlocation/files/2\", \n            \"name\": \"File_XYZ_002\""}
{"tmforumApiId": "TMF681", "id": "TMF681-chunk-8", "chunkIndex": 8, "totalChunks": 9, "apiName": "Communication Management API v4.0.0 specification", "title": "TMF681_Communication_Management_API_v4.0.0_specification (Part 8/9)", "documentType": "Tmforum api user guide", "text": "} \n    ], \n    \"sender\": { \n        \"id\": \"10099\", \n        \"name\": \"ABC Company\", \n        \"phoneNumber\": \"10086\" \n    }, \n    \"receiver\": [ \n        { \n            \"id\": \"10234\", \n            \"name\": \"Customer\", \n            \"phoneNumber\": \"008613811112222\", \n            \"party\": { \n                \"id\": \"991\", \n                \"href\": \"https://serverlocation/tmf-api/partyManagement/v4/individual/1\", \n                \"role\": \"customer\", \n                \"name\": \"John White\", \n                \"@referredType\": \"Individual\" \n            } \n        } \n    ] \n} \n \n \nHere's an example of a request for creating a communication message. In this example the request is created in the \ninProgress state and will be sent at the scheduled send time. \n \nRequest \n \nPOST /tmf-api/communicationManagement/v4/communicationMessage \nContent-Type: application/json \n \n{ \n    \"subject\": \"News: the latest promotion for you\", \n    \"scheduledSendTime\": \"2020-02-10T00:00:00+01:00\", \n    \"state\": \"inProgress\", \n    \"description\": \"this is communication message for promotion\", \n    \"content\": \"Dear $Parameter1, Here is the information of the promotion $Parameter2\", \n    \"messageType\": \"Email\", \n    \"characteristic\": [ \n        { \n            \"name\": \"$Parameter1\", \n            \"value\": \"Mrs. Jones\", \n            \"valueType\": \"string\" \n        }, \n        { \n            \"name\": \"$Parameter2\", \n            \"value\": \"4G_LTE Discount 30%\", \n            \"valueType\": \"string\" \n        } \n    ], \n    \"attachment\": [ \n        { \n\n\n            \"url\": \"https://serverlocation/files/1\", \n            \"name\": \"File_XYZ_001\" \n        } \n    ], \n    \"sender\": { \n        \"id\": \"10099\", \n        \"name\": \"ABC Company\", \n        \"phoneNumber\": \"10086\" \n    }, \n    \"receiver\": [ \n        { \n            \"id\": \"10234\", \n            \"name\": \"Customer\", \n            \"phoneNumber\": \"008613811112222\", \n            \"party\": { \n                \"id\": \"991\", \n                \"href\": \"http://serverlocation/tmf-api/partyManagement/v4/individual/1\", \n                \"role\": \"customer\", \n                \"name\": \"John White\", \n                \"@referredType\": \"Individual\" \n            } \n        } \n    ] \n} \n \n \n \nResponse \n \n201 \n \n{ \n    \"id\": \"2708\", \n    \"href\": \"https://serverlocation/tmf-api/communicationManagement/v4/communicationMessage/2708\", \n    \"subject\": \"News: the latest promotion for you\", \n    \"scheduledSendTime\": \"2020-02-10T00:00:00+01:00\", \n    \"state\": \"initial\", \n    \"description\": \"this is communication message for promotion\", \n    \"content\": \"Dear $Parameter1, Here is the information of the promotion $Parameter2\", \n    \"messageType\": \"Email\", \n    \"characteristic\": [ \n        { \n            \"name\": \"$Parameter1\", \n            \"value\": \"Mrs. Jones\", \n            \"valueType\": \"string\" \n        }, \n        { \n            \"name\": \"$Parameter2\", \n            \"value\": \"4G_LTE Discount 30%\", \n            \"valueType\": \"string\" \n        } \n    ], \n    \"attachment\": [ \n        { \n            \"url\": \"https://serverlocation/files/1\", \n\n\n            \"name\": \"File_XYZ_001\" \n        } \n    ], \n    \"sender\": { \n        \"id\": \"10099\", \n        \"name\": \"ABC Company\", \n        \"phoneNumber\": \"10086\" \n    }, \n    \"receiver\": [ \n        { \n            \"id\": \"10234\", \n            \"name\": \"Customer\", \n            \"phoneNumber\": \"008613222211111\", \n            \"party\": { \n                \"id\": \"1091\", \n                \"href\": \"https://serverlocation/tmf-api/partyManagement/v4/individual/1\", \n                \"role\": \"customer\", \n                \"name\": \"Sara White\", \n                \"@referredType\": \"Individual\" \n            } \n        } \n    ] \n} \n \nPatch communication message \n  PATCH /communicationMessage/{id} \nDescription \nThis operation allows partial updates of a communication message entity. Support of json/merge \n(https://tools.ietf.org/html/rfc7386) is mandatory, support of json/patch (http://tools.ietf.org/html/rfc5789) is \noptional. \n \nNote: If the update operation yields to the creation of sub-resources or relationships, the same rules concerning \nmandatory sub-resource attributes and default value settings in the POST operation applies to the PATCH \noperation.  Hence these tables are not repeated here. \nPatchable and Non Patchable Attributes \nThe tables below provide the list of patchable and non patchable attributes, including constraint rules on their \nusage. \nPatchable Attributes \nRule \nattachment \n \ncharacteristic \n \ncontent \n \ndescription \n \nlogFlag \n \nmessageType \n \npriority \n \n\n\nPatchable Attributes \nRule \nreceiver \n \nscheduledSendTime \n \nsendTime \n \nsendTimeComplete \n \nsender \n \nstate \n \nsubject \n \ntryTimes \n \n \nNon Patchable Attributes \nRule \nhref \n \nid \n \n \nUsage Samples \nHere's an example of a request for updating a communication message. In this example, the message status is set \nto inProgress, together with a new scheduled send time. \n \nRequest \n \nPATCH /tmf-api/communicationManagement/v4/communicationMessage/3830 \nContent-Type: application/merge-patch+json \n \n{ \n    \"scheduledSendTime\": \"2020-02-15T00:00:00+01:00\", \n    \"state\": \"inProgress\" \n} \n \n \n \nResponse \n \n200 \n \n{ \n    \"scheduledSendTime\": \"2020-02-15T00:00:00+01:00\", \n    \"state\": \"inProgress\", \n    \"attachment\": [ \n        { \n            \"url\": \"https://serverlocation/files/2\", \n            \"name\": \"File_XYZ_002\" \n        } \n    ] \n} \n \n \n \n\n\nDelete communication message \n  DELETE /communicationMessage/{id} \nDescription \nThis operation deletes a communication message entity. \n \nUsage Samples \nHere's an example of a request for deleting a communication message. \n \nRequest \n \nDELETE /tmf-api/communicationManagement/v4/communicationMessage/3830 \n \n \n \nResponse \n \n204"}
{"tmforumApiId": "TMF681", "id": "TMF681-chunk-9", "chunkIndex": 9, "totalChunks": 9, "apiName": "Communication Management API v4.0.0 specification", "title": "TMF681_Communication_Management_API_v4.0.0_specification (Part 9/9)", "documentType": "Tmforum api user guide", "text": "API NOTIFICATIONS \nFor every single of operation on the entities use the following templates and provide sample REST \nnotification POST calls. \nIt is assumed that the Pub/Sub uses the Register and UnRegister mechanisms described in the REST \nGuidelines reproduced below. \nRegister listener \n  POST /hub \nDescription \nSets the communication endpoint address the service instance must use to deliver information about its health \nstate, execution state, failures and metrics. Subsequent POST calls will be rejected by the service if it does not \nsupport multiple listeners. In this case DELETE /api/hub/{id} must be called before an endpoint can be created \nagain. \nBehavior \nReturns HTTP/1.1 status code 204 if the request was successful. \nReturns HTTP/1.1 status code 409 if request is not successful. \nUsage Samples \nHere's an example of a request for registering a listener. \n \n \nRequest \n \nPOST /api/hub \nAccept: application/json \n \n{\"callback\": \"http://in.listener.com\"} \n \n \nResponse \n \n201 \nContent-Type: application/json \nLocation: /api/hub/42 \n \n{\"id\":\"42\",\"callback\":\"http://in.listener.com\",\"query\":null} \n \n \n \n\n\nUnregister listener \n  DELETE /hub/{id} \nDescription \nClears the communication endpoint address that was set by creating the Hub. \nBehavior \nReturns HTTP/1.1 status code 204 if the request was successful. \nReturns HTTP/1.1 status code 404 if the resource is not found. \nUsage Samples \nHere's an example of a request for un-registering a listener. \n \nRequest \n \nDELETE /api/hub/42 \nAccept: application/json \n \n \nResponse \n \n204 \n \nPublish Event to listener \n  POST /client/listener \nDescription \nClears the communication endpoint address that was set by creating the Hub. \nProvides to a registered listener the description of the event that was raised. The /client/listener url is the \ncallback url passed when registering the listener. \nBehavior \nReturns HTTP/1.1 status code 201 if the service is able to set the configuration.  \nUsage Samples \nHere's an example of a notification received by the listener. In this example \u201cEVENT TYPE\u201d should be replaced by \none of the notification types supported by this API (see Notification resources Models section) and EVENT BODY \nrefers to the data structure of the given notification type. \n\n\n \nRequest \n \nPOST /client/listener \nAccept: application/json \n \n{ \n    \"event\": {  \n                EVENT BODY  \n            }, \n    \"eventType\": \"EVENT_TYPE\" \n} \n \n \nResponse \n \n201 \n \nFor detailed examples on the general TM Forum notification mechanism, see the TMF REST Design \nGuidelines. \n \n \n \n\n\nAcknowledgements \n \nVersion History \nVersion \nNumber \nDate  \nModified by: \nDescription  \n1.0.0 \n13-Nov-2016 \nMaxu  \nInitial Document. \n1.1.0 \n09-Oct-2017 \nMaxu \n \nHongxia Hao \nAddressed some comments from \nOrange & Vodafone & TMF. \n1.1.1 \n23-Jan-2018 \nAdrienne Walcott \nFormatting/style edits prior to \npublishing \n2.0.0 \n12-Jun-2018 \nHongxia Hao \nModify some typos. \nChange the table format of fields \ndescriptions. \nAlign with DG3.0 \nUpdated to TM Forum new brand \nguidelines \n2.0.1 \n29-Jun-2018 \nAdrienne Walcott \nFormatting/style edits prior to R18 \npublishing \n2.0.2 \n10-Sep-2018 \nAdrienne Walcott \nUpdated to reflect TM Forum \nApproved Status \n4.0.0 \n28-May-2020 \nKnut Johannessen \nUpdated to reflect new schema based \napproach. \n4.0.1 \n20-Jul-2020 \nAdrienne Walcott \nUpdated to reflect TM Forum \nApproved Status \n \nRelease History \n \nRelease \nNumber \nDate  \nRelease led by: \nDescription  \nRelease 1.0 \n04/15/2017 \nPierre Gauthier \nTM Forum \npgauthier@tmforum.org \n \nFirst Release of the Document.  \n\n\nRelease \nNumber \nDate  \nRelease led by: \nDescription  \nMariano Belaunde \nOrange Labs \nRelease 2.0 \n11/06/2018 \nMariano Belaunde  \nOrange Labs \nAlignment with Guidelines 3.0 \nPre-production \n28-May-2020 \nKnut Johannessen \nUpdated to reflect new schema \nbased approach. \nProduction \n20-Jul-2020 \nAdrienne Walcott \nUpdated to reflect TM Forum \nApproved Status \n \n \nContributors to Document \nHongxia Hao \nHuawei \nMaxu \nHuawei \nMariano Belaunde \nOrange \nNicoleta Stoica \nVodafone \nKuang Chunguang \nHuawei \nJiang Yisong \nHuawei \nPierre Gauthier \nTM Forum \nKnut Johannessen \nTelenor"}
